{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-redefine/source/assets/hbe.style.css","path":"assets/hbe.style.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/assets/odometer-theme-minimal.css","path":"assets/odometer-theme-minimal.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/all.min.css","path":"fontawesome/all.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/brands.min.css","path":"fontawesome/brands.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/duotone.min.css","path":"fontawesome/duotone.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/fontawesome.min.css","path":"fontawesome/fontawesome.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/light.min.css","path":"fontawesome/light.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/regular.min.css","path":"fontawesome/regular.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/sharp-solid.min.css","path":"fontawesome/sharp-solid.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/solid.min.css","path":"fontawesome/solid.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/svg-with-js.min.css","path":"fontawesome/svg-with-js.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/thin.min.css","path":"fontawesome/thin.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/v4-font-face.min.css","path":"fontawesome/v4-font-face.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/v4-shims.min.css","path":"fontawesome/v4-shims.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/v5-font-face.min.css","path":"fontawesome/v5-font-face.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/fonts.css","path":"fonts/fonts.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/noto-sans-sc-v26-chinese-simplified-700.woff","path":"fonts/noto-sans-sc-v26-chinese-simplified-700.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/noto-sans-sc-v26-chinese-simplified-700.woff2","path":"fonts/noto-sans-sc-v26-chinese-simplified-700.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/noto-sans-sc-v26-chinese-simplified-regular.woff","path":"fonts/noto-sans-sc-v26-chinese-simplified-regular.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/noto-sans-sc-v26-chinese-simplified-regular.woff2","path":"fonts/noto-sans-sc-v26-chinese-simplified-regular.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/ubuntu-mono-v15-latin-regular.woff","path":"fonts/ubuntu-mono-v15-latin-regular.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/ubuntu-mono-v15-latin-regular.woff2","path":"fonts/ubuntu-mono-v15-latin-regular.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/images/redefine-avatar.svg","path":"images/redefine-avatar.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/images/redefine-favicon.svg","path":"images/redefine-favicon.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/images/redefine-logo.svg","path":"images/redefine-logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/images/redefine-logo.webp","path":"images/redefine-logo.webp","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/images/wallhaven-wqery6-dark.webp","path":"images/wallhaven-wqery6-dark.webp","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/images/wallhaven-wqery6-light.webp","path":"images/wallhaven-wqery6-light.webp","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-duotone-900.ttf","path":"webfonts/fa-duotone-900.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-duotone-900.woff2","path":"webfonts/fa-duotone-900.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-light-300.ttf","path":"webfonts/fa-light-300.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-light-300.woff2","path":"webfonts/fa-light-300.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-sharp-solid-900.ttf","path":"webfonts/fa-sharp-solid-900.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-sharp-solid-900.woff2","path":"webfonts/fa-sharp-solid-900.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-thin-100.ttf","path":"webfonts/fa-thin-100.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-thin-100.woff2","path":"webfonts/fa-thin-100.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-v4compatibility.ttf","path":"webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-v4compatibility.woff2","path":"webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/assets/build/styles.css","path":"assets/build/styles.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/common/redefine-theme.styl","path":"css/common/redefine-theme.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/home-sidebar.styl","path":"css/layout/home-sidebar.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/Chillax-Variable.eot","path":"fonts/Chillax/Chillax-Variable.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/Chillax-Variable.ttf","path":"fonts/Chillax/Chillax-Variable.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/Chillax-Variable.woff","path":"fonts/Chillax/Chillax-Variable.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/Chillax-Variable.woff2","path":"fonts/Chillax/Chillax-Variable.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/chillax.css","path":"fonts/Chillax/chillax.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-Variable.eot","path":"fonts/Satoshi/Satoshi-Variable.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-Variable.ttf","path":"fonts/Satoshi/Satoshi-Variable.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-Variable.woff","path":"fonts/Satoshi/Satoshi-Variable.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-Variable.woff2","path":"fonts/Satoshi/Satoshi-Variable.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-VariableItalic.eot","path":"fonts/Satoshi/Satoshi-VariableItalic.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-VariableItalic.ttf","path":"fonts/Satoshi/Satoshi-VariableItalic.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-VariableItalic.woff","path":"fonts/Satoshi/Satoshi-VariableItalic.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-VariableItalic.woff2","path":"fonts/Satoshi/Satoshi-VariableItalic.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/satoshi.css","path":"fonts/Satoshi/satoshi.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/layouts/categoryList.js","path":"js/layouts/categoryList.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/layouts/lazyload.js","path":"js/layouts/lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/layouts/navbarShrink.js","path":"js/layouts/navbarShrink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/layouts/toc.js","path":"js/layouts/toc.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/APlayer.min.js","path":"js/libs/APlayer.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/APlayer.min.js.map","path":"js/libs/APlayer.min.js.map","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/Swup.min.js","path":"js/libs/Swup.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/Swup.min.js.map","path":"js/libs/Swup.min.js.map","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupPreloadPlugin.min.js","path":"js/libs/SwupPreloadPlugin.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupPreloadPlugin.min.js.map","path":"js/libs/SwupPreloadPlugin.min.js.map","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupProgressPlugin.min.js","path":"js/libs/SwupProgressPlugin.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupScriptsPlugin.min.js","path":"js/libs/SwupScriptsPlugin.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupScrollPlugin.min.js","path":"js/libs/SwupScrollPlugin.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupScrollPlugin.min.js.map","path":"js/libs/SwupScrollPlugin.min.js.map","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupSlideTheme.min.js","path":"js/libs/SwupSlideTheme.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/Typed.min.js","path":"js/libs/Typed.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/mermaid.min.js","path":"js/libs/mermaid.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/mermaid.min.js.map","path":"js/libs/mermaid.min.js.map","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/minimasonry.min.js","path":"js/libs/minimasonry.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/odometer.min.js","path":"js/libs/odometer.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/waline.mjs","path":"js/libs/waline.mjs","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/waline.mjs.map","path":"js/libs/waline.mjs.map","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/aplayer.js","path":"js/plugins/aplayer.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/hbe.js","path":"js/plugins/hbe.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/masonry.js","path":"js/plugins/masonry.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/mermaid.js","path":"js/plugins/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/tabs.js","path":"js/plugins/tabs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/typed.js","path":"js/plugins/typed.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/codeBlock.js","path":"js/tools/codeBlock.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/imageViewer.js","path":"js/tools/imageViewer.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/lightDarkSwitch.js","path":"js/tools/lightDarkSwitch.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/localSearch.js","path":"js/tools/localSearch.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/runtime.js","path":"js/tools/runtime.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/scrollTopBottom.js","path":"js/tools/scrollTopBottom.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/tocToggle.js","path":"js/tools/tocToggle.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/common/codeblock/code-block.styl","path":"css/common/codeblock/code-block.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-redefine/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/test1.md","hash":"2356780b6dcd07029bfaeae9b5b0e4d0398bf0c6","modified":1698921903935},{"_id":"source/categories/index.md","hash":"d5f1317984d7bcf34e852ea406275e8e2d2a91d0","modified":1698921052506},{"_id":"source/tags/index.md","hash":"6ff8c6b2f63bf64abb7373b6d325c0a4141b22cb","modified":1698921782364},{"_id":"source/_posts/test.md","hash":"866d40d3ad863c0691fb67c9819cb1e1ad18dee2","modified":1698921872143},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1698914372262},{"_id":"node_modules/hexo-theme-redefine/CODE_OF_CONDUCT.md","hash":"61a6276ef54989b7a1325f3ecb3183a4dfdf50cb","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/.editorconfig","hash":"a1c91f0a086bf92fddb02ccf23578ec2b51c099c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/README.md","hash":"a679736ed45b2e148abe95c69d6e6df5095e276b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/CONTRIBUTING.md","hash":"c6ef834f602b7ae02e2863a2a857e0ce8d392f15","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/package.json","hash":"3189082e30da57820f184a840406ef06224f48fe","modified":1698914809753},{"_id":"node_modules/hexo-theme-redefine/README_zh-CN.md","hash":"617f5f58561aaa59366d8beb5843a89059033a43","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/_config.yml","hash":"4560af6cad7977457fa597b8e479a415de364228","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/languages/en.yml","hash":"26b0abd54ece4073eb9716bc4afddc0bf6e5b7a7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/languages/ja.yml","hash":"cac82dd1dbcf086a6b022e26db1202e5496477a6","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/tailwind.config.js","hash":"ea2653b0bbde6e865f3fb01f0e11700829f3ca42","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/languages/zh-CN.yml","hash":"eac90103634a331b094758cffec9c448df374771","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/DONATION.md","hash":"528ed729881a6bd4382fb40277419ea5b2247f46","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/README_zh-TW.md","hash":"331dcbda93df4ba1e82bb241381d421e1c7d6936","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/404.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/archive-content.ejs","hash":"10d1423d77d7c128170c9179f9903c57a020ff03","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/category-content.ejs","hash":"5c4fdc9c2b7f225edb7ebb2abf6925b81c5e698f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/category-list.ejs","hash":"4bd20b18bdf10dfdce5ddcddfac2605800d18973","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/article-content.ejs","hash":"b9c202dc978cabffbd7642dce8c25836e94dcd42","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/languages/zh-TW.yml","hash":"1231bb0e2858235005761d2080e3c848cf14d97c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/tag-content.ejs","hash":"6134aa2a112b9d8daa3eeaf9a1ee41bbeaf7eb24","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/dataHandle.js","hash":"3a069d3f529dceed3fd98e99d5940989f1087305","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/.github/ISSUE_TEMPLATE/bug-report--english-version-.md","hash":"6b7cd67ce8911fdc0863da1b54e404514c7e85e5","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/.github/ISSUE_TEMPLATE/功能建议--中文版本-.md","hash":"ef69a31bcdbe2f749fd4990a4a85d51c300cd2dd","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/.github/ISSUE_TEMPLATE/feature-request--english-version-.md","hash":"243dbc4cf0678ca4f89fc2559eab3ace9fa881a7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/layout.ejs","hash":"e13ebcba0323e0641457d04009c6b548b914ef3d","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/page.ejs","hash":"0d43cc355011db0c5815610205851efd3ccbf691","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/.github/ISSUE_TEMPLATE/bug-提交--中文版本-.md","hash":"77f0505fac56079f78f197e061586f82993d7652","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/.github/workflows/npm-publish.yml","hash":"2b1771ae2a71e3c148b09d507f9be47d04e6e623","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_meta/article-copyright.ejs","hash":"99abeff9caf74f72696b03fff0d079f6a6d373b4","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_meta/home-article.ejs","hash":"b54a0df26341fa5f26a6e1eedb91cd11014d50c5","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/.github/workflows/aliyun_cdn.yml","hash":"5b857a504539b739df992fa2894ba72fde6985ca","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_meta/article-info.ejs","hash":"1d551beb7cc47d6c841ce63a7f0f0ffb30c1770b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_plugins/swup.ejs","hash":"9fbfd2872dfbe92ec715357d5238647987d8cbdf","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/404-template.ejs","hash":"e3574f623ea22ec3e90413909321a9a3b447f7e2","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/footer.ejs","hash":"12ac57a0d3683cc6f6b382779e5b3fd75fe7c01f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/home-banner.ejs","hash":"2d8b5501eeda2dc521cb411c30ecce43ecabf3df","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/head.ejs","hash":"2fda75fcd1d53357561022a202042cd3c57d11d7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_plugins/aplayer.ejs","hash":"c8f275cdbbe14b4673c69f7c1463b1f830ec8e40","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/home-content.ejs","hash":"43e1a8eb958a11d8944b5c8236fa35e7400a0074","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/home-background.ejs","hash":"1ced31279e1ff946eed8497692bd11c6b81a4b46","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/page-template.ejs","hash":"5d03f543ae291598ee227af758da73304a51633e","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/scripts.ejs","hash":"6e8b93048dafe13279a321ba0d7b44b54b76b93a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/archive-list.ejs","hash":"e5a76d50661b913d2dbfd0163cf0fd83ac4ceca2","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/friends-link.ejs","hash":"bacaf6f0e958fa7d9be17a59d3a8bae4b9119501","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/local-search.ejs","hash":"72c9acca0280f0e63e6a5d31618dd2707bdbec3f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/navbar.ejs","hash":"55f072d45967fc3dc522ff8e56c8b17d9f63c964","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/paginator.ejs","hash":"a237e7b858e0cf32ca67553d540f7c5f7239a8d0","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/post-tools.ejs","hash":"c2d193e84e0781423ce1c018ee2be1116359d694","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/progress-bar.ejs","hash":"0a9fee70154e068dc4f3e11bc378d9762d41753e","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/masonry.ejs","hash":"6b8ec5cff3dcf9f494b32237e6911c6e1e9dd9a1","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/essays.ejs","hash":"98728d1728bf30bc29c7c72af02805bf2d960ae7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/events/welcome.js","hash":"3e8592663e68e1af13f58f74593dff832d3498a8","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/tagcloud.ejs","hash":"f9748bef46031c9a4875a60662e96cdb443e9771","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/home-sidebar.ejs","hash":"e04b6d13f7e1fff51928f4c2d2005e4d8eb7e210","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/side-tools.ejs","hash":"3b6b75a902ba673f8f0a144db63bd144d0d5b648","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/filters/imgHandle.js","hash":"b396fe7b6cbc331f2952aa7561f96c1f250d8c52","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/events/404.js","hash":"169245d7b2af1ff401cf76e718c28b4e38f637c7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/filters/lazyloadHandle.js","hash":"f8ae44311e6463e887c07a41910ebade8766bac2","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/filters/linkHandle.js","hash":"7d8cb128dbfed1a4ef9b07142a63ba0c6c383628","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/filters/tableHandle.js","hash":"c500c45cd9221788df1f31939c5399eabb62ebb5","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/helpers/articleRecommend.js","hash":"6a39431c17cac9f07d0239989fc99fce343f9684","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_widgets/toc.ejs","hash":"46ef94dca9be59d163f6b4cba16e1695e8020bc3","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/filters/stylHandle.js","hash":"8a8bf069ce096bd7b42952c8e50c3c89758cbc13","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/filters/encrypt.js","hash":"0daf029e7441426afcab94f5f9e1ed316e3b71f6","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/helpers/seoGenerate.js","hash":"e0059a60cc5978be6792dcf795a2ece3a509f41a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/helpers/configExport.js","hash":"c1e5b36a8d8e97218c8cc1aab77ec38d5457c846","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/helpers/autoCanonical.js","hash":"f3ea74759129c71041371a1d77c687eb6aa88d3a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/modules/btn.js","hash":"3e4c1b01a1f922f712895e9ac06c030231b35cf2","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/modules/btns.js","hash":"a91492e772287114527a3fbc85f0c7c1c1b15eb3","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/modules/note-large.js","hash":"ff5709e1d8f1f940461e434ad89ff1437c2e80d3","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/modules/note.js","hash":"06a7ce9daa5e1064264ad7efe1665552c9f1b44b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/modules/tabs.js","hash":"74e3b0cdd009206f7b78b04dcb96eccd86e7a996","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/helpers/themeHelpers.js","hash":"a9b04dc09d23f0dba620c61f6cbc9eff1614dd65","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/LICENSE","hash":"a2f9ffbf32eeb6284afa81bc4fb4c27b80d044e9","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/assets/hbe.style.css","hash":"29be8fc47be885e9954e310cbc68dfadd3b4cee6","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/regular.min.css","hash":"d27c4fed54dacff688010e51f611d950dd6e0aca","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/sharp-solid.min.css","hash":"7d1a13c6b8178b29f5bcb1a639a1998fc9de16c4","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/light.min.css","hash":"18a176eb2486db4e938e568083fa578b641ccc83","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/solid.min.css","hash":"e727feabedb171fb0b398151870d7739ef4e2432","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/assets/odometer-theme-minimal.css","hash":"793c31feb38e241a5ff6ecc5e65e61751507d728","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/v4-font-face.min.css","hash":"0be987628c8b485b39f064da41c90f15c0596c1f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/modules/folding.js","hash":"cfa6646c1350c557430149bd52578c6cac59063b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/thin.min.css","hash":"3d46be31379b07ffb24d69c6c915725eaa2e89e9","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/v5-font-face.min.css","hash":"260ea7a5e0b89963a5dcf2600a4decdf0f408f3f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/fonts.css","hash":"850cf3679dfc1f5b7fe44b1377f2f85f1ec8531f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/brands.min.css","hash":"5119c35bbd273d2ea2501997827f6d644da93164","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/style.styl","hash":"d9450b06a5391ba6f62690bfef2071a1c8e7e893","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/v4-shims.min.css","hash":"96f037860b8e9b59af8e47571ea98791616dbfd8","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/svg-with-js.min.css","hash":"f4c08e37c4d44b3ed7a3f377d1cb5d7fca4d04bc","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/ubuntu-mono-v15-latin-regular.woff2","hash":"e583803593916547b1101a56c216526fa2d26d1c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/images/loading.svg","hash":"938c2a41c8ba18e37ed659e481696e40a4c8f3a4","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/images/redefine-avatar.svg","hash":"d0d20061bda08894a82d7691b660be7c6aaa0608","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/images/redefine-favicon.svg","hash":"420f930a1df64a3c4391ff80326a8a2d7d5a6418","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/images/redefine-logo.svg","hash":"472776b6f013aad44706fee6c94201c96ee83932","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/images/redefine-logo.webp","hash":"0a07e3fb6d9125dee44798c8c110187b16fb42a9","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/ubuntu-mono-v15-latin-regular.woff","hash":"c7abad03bf081ed35bb434cb5b34b5c59c852f16","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/main.js","hash":"a9ce4d8a91ddc7811cf9715be1f857cd899d7382","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/images/wallhaven-wqery6-light.webp","hash":"d25389973d0359b78f1e9c74a850ef425690ba40","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/utils.js","hash":"f53b1be9aaa89c133ad1e3f5fab487ed7c1f6f22","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/images/wallhaven-wqery6-dark.webp","hash":"d0066e0b025ae748448a3d6a96165d45a55d2f22","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-v4compatibility.woff2","hash":"d02b1adc81fd5bec023e25a7770779b99d6dd742","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/comments/giscus.ejs","hash":"5a20975c17daeed5a602dedd0682a29d7c56e42f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-v4compatibility.ttf","hash":"b54531dd09c5089eb93b12ce8f90ff521855ff8a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/comments/gitalk.ejs","hash":"4c9e6d12f58f7f445d4eab768a52e81be4f87ae3","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/scripts/filters/lib/hbe.default.js","hash":"fee2c92011ef007121b992193bbab0f3b196d873","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/comments/twikoo.ejs","hash":"2945e818e4406fbb5628a465023c7e4d445c0975","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/comments/comment.ejs","hash":"4ca12a0bcb85a03dec368c5e12eebf2905aeb404","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/common/animated.styl","hash":"ab52b066c427cee62d67e4da136878114c7b1afe","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/layout/_partials/comments/waline.ejs","hash":"f73f63f41776915890fd59771afc58adae85da63","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/common/basic.styl","hash":"0493e7ae8c2b07cf1172fa1b68ea1ec74795878b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/archive-content.styl","hash":"4e329547447c716c986e0b4a4f54afc59fc6b486","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/article-content.styl","hash":"1e13a524ae358594d56bd644c1c3082d5334588c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/category-content.styl","hash":"4f9a5559b5269ec74b5f49ac113268f747bf0243","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/assets/build/styles.css","hash":"c75dca367f119cd945930596c2652e8b638e724a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/category-list.styl","hash":"9959507beb382779a0bef9bf19bda9117a9568d6","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/common/markdown.styl","hash":"035d2cf95e50d85977d4ec9045c28d0337fd74ab","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/home-content.styl","hash":"4ffdfcd2f89c11e1ba662c2068fffe5f1379a603","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/home-sidebar.styl","hash":"3a63a4f1beb1462b78e41419c8c7c2ce5abf1d8c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/page.styl","hash":"e5c0b44623d18d0c2674069b3796546dd9857b8d","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/tag-content.styl","hash":"6c9ec582c1d8699bdff5a4cd1524121cc6ca8522","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/common/variables.styl","hash":"369616699fd9a0ca831e4b6a6f07171ff1cd63fc","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/common/redefine-theme.styl","hash":"5bf88f1d98c21358678ac0bdb570f4b8adbb492a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/Chillax-Variable.woff","hash":"fc0e791429c274c4c9312d810e7ae9503cab34ab","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/Chillax-Variable.woff2","hash":"fc5d99b40db9deca7d151f9bd16b96ff160828b7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-Variable.woff","hash":"d731068e2b28d4f1dfe5b4dbe8cce9c082fa8572","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/chillax.css","hash":"ac7d8777d601070e08fb262ec6d7bc97c508afa7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-VariableItalic.woff","hash":"e44272b921c0a14e77c640cc4cf209c4b80cb205","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-VariableItalic.woff2","hash":"dafa429c1d0a4b053b8fbb8c70478b8dbcb9ee9c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/layouts/navbarShrink.js","hash":"7c8c51f586b6595eae8460d8ae0b96e2946f708f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/layouts/lazyload.js","hash":"c06323d68bbdebbb685db5010e7655b8ed0caf42","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/layouts/toc.js","hash":"7a768982f6cb1f40552cce063d5743fe862db762","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/satoshi.css","hash":"59b058f8bc9144c7799b86af728cf44dc7b3921c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/Swup.min.js","hash":"cc054d34e74a1feecfae75064f6a4d6107607396","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/layouts/categoryList.js","hash":"eb1af2cd0726f56ff7861222ea543315fe295a17","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupProgressPlugin.min.js","hash":"fd30fe1c43072017f67bbaac18b962a5ac218711","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupScriptsPlugin.min.js","hash":"b17f3434035f1339d6f9cd5c8a055d2a1b6602e9","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-Variable.woff2","hash":"2d34d398b398a7fd88d21fae7642cdca908bf3ee","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupPreloadPlugin.min.js.map","hash":"40513fec1323b601667876a97a9ef8a0c88bff63","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupScrollPlugin.min.js.map","hash":"63cf04ba556b256379e103ef7d3ba12d629449a4","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupSlideTheme.min.js","hash":"e9d143780e879d958164b1356b7f918ec25e838a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupScrollPlugin.min.js","hash":"6c3afca9bb98f79d14516c093f27e3e50a3fd82e","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/Typed.min.js","hash":"e8ce2b674a637b0c0396a3106c1aedf10186249c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/odometer.min.js","hash":"fe5beb60997c84ab2f91b54535c4221443cdd21f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/minimasonry.min.js","hash":"9681cc509cb8aa733d36aad032e6e8acdb33c08c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/SwupPreloadPlugin.min.js","hash":"d911512891ecbe1935203bcd3d93427ad75e45c8","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/hbe.js","hash":"abd3b27238e26dc3bdd65e0e69fa514fa432a75b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/tabs.js","hash":"964ec5c25a8d78763ba2ba9bfbd5b1b49ed05381","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/pjax.min.js","hash":"3d796e5be9cdd4067c94e190ea2482d7fdb4856c","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/masonry.js","hash":"a36ff4b985f52367040e7176cc94e5f5c67b648b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/codeBlock.js","hash":"344e6c83e6ffda22f6e5bc724d603066b49a7d8b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/imageViewer.js","hash":"99362b206dfa7cba7aa334e56d85af3392b2af27","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/typed.js","hash":"01799d5c07633f33b1d2893f524054074d56ec65","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/mermaid.js","hash":"303254d382869ed618025fcb328426bd10314583","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/localSearch.js","hash":"f6e59f65c676457198c2cf5d78bd06052499ee38","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/tocToggle.js","hash":"33a2e97b630db736948a6b45d2d8cd18f5a5c36f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/runtime.js","hash":"eb0374b6f033f7ac25f49b1b079aa163e14b0fcd","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/scrollTopBottom.js","hash":"9e54fa4310bb98ea5ba61780a9ef56d05d475203","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/common/codeblock/highlight.styl","hash":"39a8032d5ca2872ef9268856a77d212200d07651","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/common/codeblock/code-block.styl","hash":"0593c3555640bb9132caaccac9821225ea3b97c8","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_modules/buttons.styl","hash":"18bd3c1d00e2cc6416cef69433b207ae5c947ba1","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_modules/folding.styl","hash":"8ce08bc6bec684c1e5ebb6221e0dd3ded47010d5","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/plugins/aplayer.js","hash":"150ceb910584ccd0b4a9558d9e2360c1409c1149","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/common/codeblock/code-theme.styl","hash":"05e95f07589b1f78081f95cef4749a7041f24b81","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_modules/tabs.styl","hash":"dbf47ca4ceb2951843b3170ec893077216158191","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/404.styl","hash":"16215f6fe664d1ddc5744a626405bc774dc30f70","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/archive-list.styl","hash":"83e56a7640af063b8f47d09ca8b3e3517c986b1a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/article-copyright-info.styl","hash":"810d182789bce6fc27a30e2eafc21d3d292fb9af","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/article-meta-info.styl","hash":"1f680910751b36c4445a48c5a48eda3187412eaf","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/footer.styl","hash":"b9028c74a9f75536d5a7cee77a25a5d77469515a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/home-banner.styl","hash":"80ad49c75995120b0872d11561f081df8995ba97","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_modules/aplayer.styl","hash":"f3943142b2415a0ff7c2c36729e8f8939b548222","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/local-search.styl","hash":"a9c99c57b27afbe7f00f1f14f0e46c41748affb5","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/navbar.styl","hash":"350e65e2e79f377b6a5bc4230c2eb3bbd2bc244a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/page-template.styl","hash":"2ce7bf6476ffb2e5f58943cac0bb77bf976bc9c3","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/paginator.styl","hash":"53421b731f3d7ed34a3a4c87405e06ae3d6519e0","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/post-tools.styl","hash":"d602c2fe191d2c639f7cd8c4d0ee618f8c80f5c1","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/progress-bar.styl","hash":"f94780762572055a0eb56b41e0e676262b38cf6a","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/side-tools.styl","hash":"995982b8c228f7386d352042f64587d06663716e","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/tools/lightDarkSwitch.js","hash":"97b7e68f871dc218fceca77b85ac051c7c6306af","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/tagcloud.styl","hash":"d66f59c0b2d5b9ed64ef50bffee3a3d0bef1f114","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_modules/notes.styl","hash":"1fd993ad830c24c10b41d5487bf4d241094055ce","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/toc.styl","hash":"13949981a5afa2b0483da1836af5999d992961f9","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/comments/comment.styl","hash":"5d1b3424845a065b3082fe577081da60845db05e","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/image-viewer.styl","hash":"1d4282ed56294302f10c3435127252fef0af46da","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/comments/waline.styl","hash":"24ad25f1344b51f0ccb436644e70d95e84fd8f40","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/comments/twikoo.styl","hash":"448cbc045bcffa2d666094b81dd99eb980676fff","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/css/layout/_partials/comments/gitalk.styl","hash":"85f26189ec6dee13a0a743687e7b5391f170c33f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-brands-400.woff2","hash":"a358912d781e6249a8d291e4ce9ebd0a9ab9452e","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-VariableItalic.ttf","hash":"62c34444221ff17e93a8e1cadfea5a8c68ea705b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-Variable.ttf","hash":"d49872a745842f389bc9d24b73d0a3090fce50b1","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-VariableItalic.eot","hash":"7525ee5ad63e4bb198910286ff176587f43fc5c3","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Satoshi/Satoshi-Variable.eot","hash":"2b6ff9014b62876c03d8f579bf00ffcc6ac44bd8","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/Swup.min.js.map","hash":"f74755d9318a86939791027767f631472b876207","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/fontawesome.min.css","hash":"44e6d666b45a6875e4fce11159876129e7a1cceb","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-brands-400.ttf","hash":"ba9322d66c19f635e15e458cc39fcb509818332f","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/Chillax-Variable.eot","hash":"50a4e2ab17155fe7449e0ee488a6242180f3b256","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/Chillax/Chillax-Variable.ttf","hash":"01aafadc0ca4ace59127a5594a8f534e83b84879","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/waline.mjs","hash":"b53165275a5606f6d26bba216f4b218dcc790837","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-sharp-solid-900.woff2","hash":"74d0af1108ab8157993ca03cef80e89e35e2408d","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-solid-900.woff2","hash":"e73d164db2aff2c91d18c07da03e8db9d0c5dfd4","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/duotone.min.css","hash":"0becc4b085bd9d377a8ff4b5160f8e19c8ec27a0","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-regular-400.woff2","hash":"486fed640153de1de84f460834c73daef060ed20","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-duotone-900.woff2","hash":"2cc24434345b80a844a6bda1139539fe41e4df53","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-light-300.woff2","hash":"def760895375328ccdcf62b2b9b9001a21947acd","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fontawesome/all.min.css","hash":"630bf0e29410ec27622f65d1270c6bc435cdff21","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-thin-100.woff2","hash":"e0a4482c20f6b67784df54965539a317a3bd681b","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-sharp-solid-900.ttf","hash":"0d710cd7bd1b7ff574e88bb812de82babe45e415","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-solid-900.ttf","hash":"40b536c3667547db70ee9ca6f3c94fbc33e0cab7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/mermaid.min.js","hash":"c11ca6043d8dae028448a808105f8c888faac8f5","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-regular-400.ttf","hash":"cdec068700dc440530e5bbeff7e8bb33a01b4132","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/waline.mjs.map","hash":"a58abd8799bfa9580d5835ea6a79862c059aedcd","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-light-300.ttf","hash":"cc5d9f4f994c82e23f58cdde1eec8792d81633c7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-thin-100.ttf","hash":"c1fee6e6986b14533ce022afada5fbe10c0f6562","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/webfonts/fa-duotone-900.ttf","hash":"e0313a772ea710cb5ea4bd08f5dedb0a0025f8ca","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/noto-sans-sc-v26-chinese-simplified-regular.woff2","hash":"eb3b3063cf2be7bd96146051168f11327f4e28d7","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/noto-sans-sc-v26-chinese-simplified-700.woff2","hash":"3a046e40a1b2a8537a2d60db4f3b4f915852a722","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/noto-sans-sc-v26-chinese-simplified-regular.woff","hash":"7c2e7b6873eabd4dc1fe2aee5c6d542fe8743356","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/fonts/noto-sans-sc-v26-chinese-simplified-700.woff","hash":"11df5a4313f3730378dd78fcfcb444d845b389e1","modified":499162500000},{"_id":"node_modules/hexo-theme-redefine/source/js/libs/mermaid.min.js.map","hash":"7d303cf926754817c4360f92e6c39b8c390cdbdb","modified":499162500000},{"_id":"public/images/loading.svg","hash":"a0d7478cd95cdcfc4ecec5d6c0a9f3d2a9c03b51","modified":1698923018197},{"_id":"public/images/redefine-avatar.svg","hash":"574ea402ffbba0205744e8080f9ca755d5989988","modified":1698923018197},{"_id":"public/images/redefine-favicon.svg","hash":"cdbbde55b1a9107c122e6ff05d0962cfd2ff242e","modified":1698923018197},{"_id":"public/images/redefine-logo.svg","hash":"04f9649050979d2e3dad989455c987f8dcbd3f79","modified":1698923018197},{"_id":"public/search.xml","hash":"7f471170c654ab9f91983caf4752dadee09e1340","modified":1702643433543},{"_id":"public/404.html","hash":"c8f70a2f54f466f9bb14e76505a902b798bcd9e0","modified":1698981283233},{"_id":"public/categories/index.html","hash":"a398aeab36e54a3a2e4a4d6c8f2ae3ca41b4099b","modified":1702643433543},{"_id":"public/tags/index.html","hash":"6939668463f29ae62c8b0fe0b08776be90c8b557","modified":1702643433543},{"_id":"public/2023/11/02/test1/index.html","hash":"91445a36c60ca8e15b2a66c2e2a0950660e07b06","modified":1699322898830},{"_id":"public/2023/11/02/test/index.html","hash":"b670fa597820070209816c3592cea5ebf546796c","modified":1698981283233},{"_id":"public/2023/11/02/hello-world/index.html","hash":"c8ecf1307e479dd2563a509b6cb2dbf9c18d5f0d","modified":1699958333135},{"_id":"public/categories/test1-test11/index.html","hash":"57ade7c76386a66dec1a4366796f711b3a29b11e","modified":1698981283233},{"_id":"public/categories/test2-test22/index.html","hash":"1881f253ae6ee20e6561e0cc40cb6de0c2355f91","modified":1698981283233},{"_id":"public/archives/index.html","hash":"7308a0c2b2fe7c969db64e2850a6fb2751203cc3","modified":1702643433543},{"_id":"public/archives/2023/index.html","hash":"6cdcbcdd6fe510ad87d556600c11ec7a19061546","modified":1702643433543},{"_id":"public/archives/2023/11/index.html","hash":"26fc8b37b0de73d4858f5faf01ade13555ee9552","modified":1702643433543},{"_id":"public/tags/java/index.html","hash":"946c9173941b09b28b73d4df8e395f10e77526f2","modified":1698981283233},{"_id":"public/index.html","hash":"f5e622bf24dbf69bc675bd0c1e807afb2f0ad680","modified":1702643433543},{"_id":"public/tags/test1/index.html","hash":"c957d3dd5efd7fdce3d62005696e4544bd883d8d","modified":1698981283233},{"_id":"public/tags/test2/index.html","hash":"e70629d25a7107471a4ee2aea28f2106468437b5","modified":1698981283233},{"_id":"public/tags/test3/index.html","hash":"38061f54e63d9f3674b35ffd57f95dc1bc72f2fd","modified":1698981283233},{"_id":"public/fonts/ubuntu-mono-v15-latin-regular.woff2","hash":"e583803593916547b1101a56c216526fa2d26d1c","modified":1698923018197},{"_id":"public/images/redefine-logo.webp","hash":"0a07e3fb6d9125dee44798c8c110187b16fb42a9","modified":1698923018197},{"_id":"public/fonts/ubuntu-mono-v15-latin-regular.woff","hash":"c7abad03bf081ed35bb434cb5b34b5c59c852f16","modified":1698923018197},{"_id":"public/images/wallhaven-wqery6-light.webp","hash":"d25389973d0359b78f1e9c74a850ef425690ba40","modified":1698923018197},{"_id":"public/images/wallhaven-wqery6-dark.webp","hash":"d0066e0b025ae748448a3d6a96165d45a55d2f22","modified":1698923018197},{"_id":"public/webfonts/fa-v4compatibility.woff2","hash":"d02b1adc81fd5bec023e25a7770779b99d6dd742","modified":1698923018197},{"_id":"public/webfonts/fa-v4compatibility.ttf","hash":"b54531dd09c5089eb93b12ce8f90ff521855ff8a","modified":1698923018197},{"_id":"public/fonts/Chillax/Chillax-Variable.woff","hash":"fc0e791429c274c4c9312d810e7ae9503cab34ab","modified":1698923018197},{"_id":"public/fonts/Chillax/Chillax-Variable.woff2","hash":"fc5d99b40db9deca7d151f9bd16b96ff160828b7","modified":1698923018197},{"_id":"public/fonts/Satoshi/Satoshi-Variable.woff2","hash":"2d34d398b398a7fd88d21fae7642cdca908bf3ee","modified":1698923018197},{"_id":"public/fonts/Satoshi/Satoshi-Variable.woff","hash":"d731068e2b28d4f1dfe5b4dbe8cce9c082fa8572","modified":1698923018197},{"_id":"public/fonts/Satoshi/Satoshi-VariableItalic.woff2","hash":"dafa429c1d0a4b053b8fbb8c70478b8dbcb9ee9c","modified":1698923018197},{"_id":"public/fonts/Satoshi/Satoshi-VariableItalic.woff","hash":"e44272b921c0a14e77c640cc4cf209c4b80cb205","modified":1698923018197},{"_id":"public/js/libs/SwupPreloadPlugin.min.js.map","hash":"40513fec1323b601667876a97a9ef8a0c88bff63","modified":1698923018197},{"_id":"public/js/libs/SwupScrollPlugin.min.js.map","hash":"63cf04ba556b256379e103ef7d3ba12d629449a4","modified":1698923018197},{"_id":"public/css/hbe.style.css","hash":"29be8fc47be885e9954e310cbc68dfadd3b4cee6","modified":1698923018197},{"_id":"public/lib/hbe.js","hash":"abd3b27238e26dc3bdd65e0e69fa514fa432a75b","modified":1698923018197},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"a358912d781e6249a8d291e4ce9ebd0a9ab9452e","modified":1698923018197},{"_id":"public/fonts/Satoshi/Satoshi-Variable.eot","hash":"2b6ff9014b62876c03d8f579bf00ffcc6ac44bd8","modified":1698923018197},{"_id":"public/fonts/Satoshi/Satoshi-Variable.ttf","hash":"d49872a745842f389bc9d24b73d0a3090fce50b1","modified":1698923018197},{"_id":"public/fonts/Satoshi/Satoshi-VariableItalic.eot","hash":"7525ee5ad63e4bb198910286ff176587f43fc5c3","modified":1698923018197},{"_id":"public/fonts/Satoshi/Satoshi-VariableItalic.ttf","hash":"62c34444221ff17e93a8e1cadfea5a8c68ea705b","modified":1698923018197},{"_id":"public/js/libs/Swup.min.js.map","hash":"f74755d9318a86939791027767f631472b876207","modified":1698923018197},{"_id":"public/assets/hbe.style.css","hash":"e94a573eb11412493b6146a057535776d068efb7","modified":1698923018197},{"_id":"public/assets/odometer-theme-minimal.css","hash":"c526d6574eeb0c56d560a2f44c806c0117de78fe","modified":1698923018197},{"_id":"public/fontawesome/light.min.css","hash":"18a176eb2486db4e938e568083fa578b641ccc83","modified":1698923018197},{"_id":"public/fontawesome/regular.min.css","hash":"d27c4fed54dacff688010e51f611d950dd6e0aca","modified":1698923018197},{"_id":"public/fontawesome/solid.min.css","hash":"e727feabedb171fb0b398151870d7739ef4e2432","modified":1698923018197},{"_id":"public/fontawesome/sharp-solid.min.css","hash":"7d1a13c6b8178b29f5bcb1a639a1998fc9de16c4","modified":1698923018197},{"_id":"public/fontawesome/v4-font-face.min.css","hash":"0be987628c8b485b39f064da41c90f15c0596c1f","modified":1698923018197},{"_id":"public/fontawesome/thin.min.css","hash":"3d46be31379b07ffb24d69c6c915725eaa2e89e9","modified":1698923018197},{"_id":"public/fontawesome/v5-font-face.min.css","hash":"260ea7a5e0b89963a5dcf2600a4decdf0f408f3f","modified":1698923018197},{"_id":"public/fonts/fonts.css","hash":"e8e37fb156e0aa71d287c5ea3dc11bbea3526a26","modified":1698923018197},{"_id":"public/js/main.js","hash":"33d4eda80e13a85d915f32a552ce61a1c408823d","modified":1698923018197},{"_id":"public/js/utils.js","hash":"b036e70c3a82bbe857815a9f655beca69e84ba4f","modified":1698923018197},{"_id":"public/assets/build/styles.css","hash":"bd611373f863f049cc64e161ec4c9d593336276a","modified":1698923018197},{"_id":"public/css/common/basic.css","hash":"87cfc93087eb71edd99c1a61c21c38a5f6a503c0","modified":1698923018197},{"_id":"public/css/common/animated.css","hash":"6bce6cd2bc3ba5374216b35d1da320bdbeaac795","modified":1698923018197},{"_id":"public/css/common/markdown.css","hash":"cdfd138c6246c28f2b61d0bd71fb90f73db94912","modified":1698923018197},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1698923018197},{"_id":"public/css/common/redefine-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1698923018197},{"_id":"public/css/layout/category-content.css","hash":"a898437c815ba43a331087c818dd15c064e9b925","modified":1698923018197},{"_id":"public/css/common/variables.css","hash":"c1ac304995abc0926b8720762628c5e230fea220","modified":1698923018197},{"_id":"public/css/layout/home-sidebar.css","hash":"67f507681c161d10d021d7b45743e5998806f620","modified":1698923018197},{"_id":"public/css/layout/home-content.css","hash":"6f1f2393054a49dad65ab447efff3709f32bc19b","modified":1698923018197},{"_id":"public/css/layout/category-list.css","hash":"d6e072db9b3507558749ed5098fe679061cd9e1a","modified":1698923018197},{"_id":"public/css/layout/page.css","hash":"de400d3d30b347e3c5de4e3e751eeb68fac1c836","modified":1698923018197},{"_id":"public/css/layout/tag-content.css","hash":"8e1a506ab561653511fc1bf1c4f65876a44e773f","modified":1698923018197},{"_id":"public/fonts/Chillax/chillax.css","hash":"ab7791916b4cebe5fa5b7f5a609a604232ae29e3","modified":1698923018197},{"_id":"public/fonts/Satoshi/satoshi.css","hash":"327fe4653ffe8c65e104a318569da93cefed7d58","modified":1698923018197},{"_id":"public/js/layouts/lazyload.js","hash":"8fc0b1c3e24b83a18b2511883254fc5fc25d5e70","modified":1698923018197},{"_id":"public/js/layouts/categoryList.js","hash":"25567ff3f0f0487ba8f668724e8c521971d72a56","modified":1698923018197},{"_id":"public/js/layouts/navbarShrink.js","hash":"b3c49352720c364550909824e3786a5de73563bc","modified":1698923018197},{"_id":"public/js/layouts/toc.js","hash":"69454335f930692ef2410b73b672056f1802e980","modified":1698923018197},{"_id":"public/js/libs/SwupPreloadPlugin.min.js","hash":"d911512891ecbe1935203bcd3d93427ad75e45c8","modified":1698923018197},{"_id":"public/js/libs/SwupProgressPlugin.min.js","hash":"fd30fe1c43072017f67bbaac18b962a5ac218711","modified":1698923018197},{"_id":"public/js/libs/SwupScriptsPlugin.min.js","hash":"b17f3434035f1339d6f9cd5c8a055d2a1b6602e9","modified":1698923018197},{"_id":"public/js/libs/SwupSlideTheme.min.js","hash":"e9d143780e879d958164b1356b7f918ec25e838a","modified":1698923018197},{"_id":"public/js/libs/Typed.min.js","hash":"e8ce2b674a637b0c0396a3106c1aedf10186249c","modified":1698923018197},{"_id":"public/js/libs/SwupScrollPlugin.min.js","hash":"6c3afca9bb98f79d14516c093f27e3e50a3fd82e","modified":1698923018197},{"_id":"public/js/libs/minimasonry.min.js","hash":"9681cc509cb8aa733d36aad032e6e8acdb33c08c","modified":1698923018197},{"_id":"public/js/libs/odometer.min.js","hash":"fe5beb60997c84ab2f91b54535c4221443cdd21f","modified":1698923018197},{"_id":"public/js/plugins/hbe.js","hash":"355e47f91cec6a0027efc6a4963dbd6bcee27e58","modified":1698923018197},{"_id":"public/js/plugins/aplayer.js","hash":"708e071fa0721a57cef092595931cfc98e1c9402","modified":1698923018197},{"_id":"public/js/plugins/masonry.js","hash":"9ab5b3924f286d42d7f866ab37071939ca74ef80","modified":1698923018197},{"_id":"public/js/tools/codeBlock.js","hash":"499e316872070f87679ec8b43364be43ffbcddd0","modified":1698923018197},{"_id":"public/js/plugins/mermaid.js","hash":"8a83ea6c83ec2990e65983326efa163cae3cd050","modified":1698923018197},{"_id":"public/js/plugins/tabs.js","hash":"5be23a96d4640f43694c9d5dd9136e641b936269","modified":1698923018197},{"_id":"public/js/tools/imageViewer.js","hash":"835ace82225cc8a6a96b9b0040cc2b2c45a1f663","modified":1698923018197},{"_id":"public/js/plugins/typed.js","hash":"47f38f90e95a473a27b074f2bc394be258189f50","modified":1698923018197},{"_id":"public/js/tools/lightDarkSwitch.js","hash":"a65951ef152c76efcb7031e0079fcbc611c8e46a","modified":1698923018197},{"_id":"public/js/tools/localSearch.js","hash":"d341081c8c10603c472c9e9161cf5d1b8df5ed74","modified":1698923018197},{"_id":"public/js/tools/scrollTopBottom.js","hash":"741346407d9c57ded4cde9a1d7a5ac04abc8a75b","modified":1698923018197},{"_id":"public/js/tools/runtime.js","hash":"29eb60d41fecdcf1094dfe72945684f984da6484","modified":1698923018197},{"_id":"public/css/common/codeblock/code-theme.css","hash":"a47d6cb4d8c4d4564e2ddbfff03c51feadf7635c","modified":1698923018197},{"_id":"public/css/common/codeblock/code-block.css","hash":"62c6bd6f9826676b1ba6952910daf3bc3a4b7a25","modified":1698923018197},{"_id":"public/js/tools/tocToggle.js","hash":"fcf470faff8b0e9e531ccb06b173655d0807420a","modified":1698923018197},{"_id":"public/css/style.css","hash":"e428e8fe47e6d7708cfa18b5d3ccd01468a3d0db","modified":1698923018197},{"_id":"public/fontawesome/brands.min.css","hash":"5119c35bbd273d2ea2501997827f6d644da93164","modified":1698923018197},{"_id":"public/fontawesome/duotone.min.css","hash":"0becc4b085bd9d377a8ff4b5160f8e19c8ec27a0","modified":1698923018197},{"_id":"public/fontawesome/fontawesome.min.css","hash":"44e6d666b45a6875e4fce11159876129e7a1cceb","modified":1698923018197},{"_id":"public/fontawesome/svg-with-js.min.css","hash":"f4c08e37c4d44b3ed7a3f377d1cb5d7fca4d04bc","modified":1698923018197},{"_id":"public/fontawesome/all.min.css","hash":"630bf0e29410ec27622f65d1270c6bc435cdff21","modified":1698923018197},{"_id":"public/fontawesome/v4-shims.min.css","hash":"96f037860b8e9b59af8e47571ea98791616dbfd8","modified":1698923018197},{"_id":"public/css/layout/article-content.css","hash":"71f898c394f669b762b667e4106194693ab9ce66","modified":1698923018197},{"_id":"public/js/libs/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1698923018197},{"_id":"public/js/libs/Swup.min.js","hash":"cc054d34e74a1feecfae75064f6a4d6107607396","modified":1698923018197},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1698923018197},{"_id":"public/js/libs/pjax.min.js","hash":"3d796e5be9cdd4067c94e190ea2482d7fdb4856c","modified":1698923018197},{"_id":"public/css/common/codeblock/highlight.css","hash":"0be5aa2b6c75b9264a8052a61bb5e0ee826484bc","modified":1698923018197},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"ba9322d66c19f635e15e458cc39fcb509818332f","modified":1698923018197},{"_id":"public/fonts/Chillax/Chillax-Variable.eot","hash":"50a4e2ab17155fe7449e0ee488a6242180f3b256","modified":1698923018197},{"_id":"public/fonts/Chillax/Chillax-Variable.ttf","hash":"01aafadc0ca4ace59127a5594a8f534e83b84879","modified":1698923018197},{"_id":"public/js/libs/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1698923018197},{"_id":"public/js/libs/waline.mjs","hash":"b53165275a5606f6d26bba216f4b218dcc790837","modified":1698923018197},{"_id":"public/js/libs/mermaid.min.js","hash":"c11ca6043d8dae028448a808105f8c888faac8f5","modified":1698923018197},{"_id":"public/webfonts/fa-sharp-solid-900.woff2","hash":"74d0af1108ab8157993ca03cef80e89e35e2408d","modified":1698923018197},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"e73d164db2aff2c91d18c07da03e8db9d0c5dfd4","modified":1698923018197},{"_id":"public/webfonts/fa-duotone-900.woff2","hash":"2cc24434345b80a844a6bda1139539fe41e4df53","modified":1698923018197},{"_id":"public/webfonts/fa-light-300.woff2","hash":"def760895375328ccdcf62b2b9b9001a21947acd","modified":1698923018197},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"486fed640153de1de84f460834c73daef060ed20","modified":1698923018197},{"_id":"public/webfonts/fa-thin-100.woff2","hash":"e0a4482c20f6b67784df54965539a317a3bd681b","modified":1698923018197},{"_id":"public/webfonts/fa-sharp-solid-900.ttf","hash":"0d710cd7bd1b7ff574e88bb812de82babe45e415","modified":1698923018197},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"40b536c3667547db70ee9ca6f3c94fbc33e0cab7","modified":1698923018197},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"cdec068700dc440530e5bbeff7e8bb33a01b4132","modified":1698923018197},{"_id":"public/js/libs/waline.mjs.map","hash":"a58abd8799bfa9580d5835ea6a79862c059aedcd","modified":1698923018197},{"_id":"public/webfonts/fa-light-300.ttf","hash":"cc5d9f4f994c82e23f58cdde1eec8792d81633c7","modified":1698923018197},{"_id":"public/webfonts/fa-thin-100.ttf","hash":"c1fee6e6986b14533ce022afada5fbe10c0f6562","modified":1698923018197},{"_id":"public/webfonts/fa-duotone-900.ttf","hash":"e0313a772ea710cb5ea4bd08f5dedb0a0025f8ca","modified":1698923018197},{"_id":"public/fonts/noto-sans-sc-v26-chinese-simplified-regular.woff2","hash":"eb3b3063cf2be7bd96146051168f11327f4e28d7","modified":1698923018197},{"_id":"public/fonts/noto-sans-sc-v26-chinese-simplified-700.woff2","hash":"3a046e40a1b2a8537a2d60db4f3b4f915852a722","modified":1698923018197},{"_id":"public/fonts/noto-sans-sc-v26-chinese-simplified-regular.woff","hash":"7c2e7b6873eabd4dc1fe2aee5c6d542fe8743356","modified":1698923018197},{"_id":"public/fonts/noto-sans-sc-v26-chinese-simplified-700.woff","hash":"11df5a4313f3730378dd78fcfcb444d845b389e1","modified":1698923018197},{"_id":"public/js/libs/mermaid.min.js.map","hash":"7d303cf926754817c4360f92e6c39b8c390cdbdb","modified":1698923018197},{"_id":"source/about/index.md","hash":"ba297d64672e5d51bdab18853b9430fc0732edb4","modified":1698982349339},{"_id":"public/about/index.html","hash":"7c0b315ccfb3c5809cfd8d8a0f6a0c3062488b2b","modified":1699240755421},{"_id":"source/_posts/1-vue3应用的创建-使用.md","hash":"eab17aa3173e4b26d0c01a592c4f20e9eb5b1c65","modified":1699255060344},{"_id":"public/2023/11/06/1-vue3应用的创建-使用/index.html","hash":"c796128cde0be29aede1d43a2e629134e3ed057c","modified":1699255071461},{"_id":"public/tags/vue3/index.html","hash":"2699c10a192e8efb9f509ab270f82ecadb73124e","modified":1702643433543},{"_id":"source/_posts/3-vue3响应式.md","hash":"dcb4f85e1c69250ebeef0c4a6cb7e0031c7a6dac","modified":1701169268130},{"_id":"source/_posts/2-vue指令语法.md","hash":"cbd3b20a0ee3bc70694c443093ea1bc76b3f66c6","modified":1701227365446},{"_id":"source/_posts/1-vue3应用的创建&使用.md","hash":"68a2d11d2df8cbbf1fcad1b619e6bd3b8f8e1921","modified":1701169273018},{"_id":"public/2023/11/06/3-vue3响应式/index.html","hash":"f507f02aa3cf99edc0e0fcd87bdab1d220e9b57b","modified":1702643433543},{"_id":"public/2023/11/06/2-vue指令语法/index.html","hash":"62127e333c73ccba1ea1343bd45becfa4e92745e","modified":1702643433543},{"_id":"public/2023/11/06/1-vue3应用的创建&使用/index.html","hash":"eb7f38aa7e5b6c705f673cad3be7e8de7f584bf6","modified":1702643433543},{"_id":"public/categories/vue3-文档/index.html","hash":"046968cdb726c2a5bb538825eb8c768f0bf20104","modified":1702643433543},{"_id":"public/tags/vue3-vue/index.html","hash":"134ba870d925128400ee74c8ce9c451bd7395c06","modified":1699322898830},{"_id":"source/_posts/5-为什么vue组件添加scoped后某些组件样式不生效.md","hash":"fac111ba7100798b56570396d5d3f032ffab245c","modified":1701169276997},{"_id":"source/_posts/4-vue3计算属性.md","hash":"5661b79ee7c423178886c021302b5b1674b05b54","modified":1701169265933},{"_id":"public/2023/11/14/5-为什么vue组件添加scoped后某些组件样式不生效/index.html","hash":"84349e4b695d2dbb9d17af138027c3353b1913d9","modified":1702643433543},{"_id":"public/2023/11/07/4-vue3计算属性/index.html","hash":"f00ec57243c6095a1db36e73b2de112aa2d84793","modified":1702643433543},{"_id":"public/tags/vue/index.html","hash":"2b0e1e1ff4c4ef685bc0cb45186967a8942da223","modified":1702643433543},{"_id":"public/categories/vue-样式/index.html","hash":"c2f661a3355352cd30abff625fc97c62b0c5f83e","modified":1701227404762},{"_id":"source/_posts/7-v-for.md","hash":"990a29aad57070f1a479a38f87add4b2b72110eb","modified":1701341513756},{"_id":"source/_posts/6-vue class与style绑定.md","hash":"ca2f449e3d3acfbfe5fb0bec127c631920ab001f","modified":1701225760401},{"_id":"public/2023/11/28/6-vue class与style绑定/index.html","hash":"ec326999782ca53597718c39c5b04f148190dbd3","modified":1702643433543},{"_id":"public/2023/11/29/7-v-for/index.html","hash":"3ceec58d4e4c9365ca806a568b2c1285794594f7","modified":1702643433543},{"_id":"public/categories/vue-样式/vue3-文档/index.html","hash":"268c7ccacfdd93af49d90af36076b2ac573f37e1","modified":1701227404762},{"_id":"source/_posts/9-vue事件处理.md","hash":"a0cc932a3b89d26446d6afaefe4976101830a099","modified":1701401201490},{"_id":"source/_posts/8-js事件.md","hash":"863506cf935ce5551505aa050512b043db45ef84","modified":1701341370830},{"_id":"public/2023/11/30/9-vue事件处理/index.html","hash":"5541d4bb15001ac5efae2ba595a178efc498e156","modified":1702643433543},{"_id":"public/2023/11/29/8-js事件/index.html","hash":"6fbb482c58fa0560a4239906944c2683a4fbb885","modified":1702643433543},{"_id":"public/categories/vue/index.html","hash":"95f8069fd905b22c8f7117f52fbdab26ced65134","modified":1701746134811},{"_id":"public/categories/JavaScript-事件/index.html","hash":"41cdbb1fdc79b7575ec929f162baef7c397aab49","modified":1701342126703},{"_id":"public/tags/JavaScript/index.html","hash":"2e03b275ef14559f4d713caa084b46fc00200859","modified":1701342126703},{"_id":"source/_posts/11-vue3生命周期.md","hash":"e22fff47faef88148fe5ff6971c4f1d0ebec55ba","modified":1701944413492},{"_id":"source/_posts/10-v-model.md","hash":"10b654e2fae414b2b856209ad24e00ac9efa5c7a","modified":1701745970924},{"_id":"public/2023/12/05/10-v-model/index.html","hash":"e3a0f401acffe3637f8f8e21fdd3d0af0099a9b7","modified":1702643433543},{"_id":"public/2023/12/05/11-vue3生命周期/index.html","hash":"e9458b565f862724915d6bbfb8ec84a30430eb94","modified":1702643433543},{"_id":"public/archives/page/2/index.html","hash":"f13b8cab73289c6bc9bae3d3389376c1b496031d","modified":1702643433543},{"_id":"public/archives/2023/page/2/index.html","hash":"d30e430a7f95d13a8e4ba61b5f03f9a9d4d1f300","modified":1702643433543},{"_id":"public/archives/2023/12/index.html","hash":"d814c5578cab80ef935e6d6008967a4056ff2a26","modified":1702643433543},{"_id":"public/page/2/index.html","hash":"39e16db3cf085b25c768700ef619c240b29e7da4","modified":1702643433543},{"_id":"source/_posts/14-vue3组件基础.md","hash":"c462b475e8044edb5a8ddc8c94b4b64b8c39b35c","modified":1702462416258},{"_id":"source/_posts/13-vue3模板引用.md","hash":"e456d559a04c959f763a08d034573efc54ec515d","modified":1702290799504},{"_id":"source/_posts/12-vue3侦听器.md","hash":"dc4495c38216b13db04ebc86c76bb4db9445e337","modified":1702030545184},{"_id":"public/2023/12/11/14-vue3组件基础/index.html","hash":"2dc6e8a4f961c19076131ec96aa884788772d44f","modified":1702643433543},{"_id":"public/2023/12/08/13-vue3模板引用/index.html","hash":"201836e859168f09a96eb1695a0e2b0660d82c18","modified":1702643433543},{"_id":"public/2023/12/07/12-vue3侦听器/index.html","hash":"fc9bf45b861f78c22e60b22261b3dcf55ae0557a","modified":1702643433543},{"_id":"public/tags/vue/page/2/index.html","hash":"e1fa0e06ddd20675f3348df97585dca20b773e0e","modified":1702643433543},{"_id":"source/_posts/16-vue3 props & emits.md","hash":"2195eee61ed686a6a3a04ac77d4fed897357d3ff","modified":1702643402046},{"_id":"source/_posts/15-vue3组件注册.md","hash":"f1b163e9a7b97d33eb83d8e091eafb791e4afad6","modified":1702643418399},{"_id":"source/_posts/17-vue3组件v-model.md","hash":"d0a4858f1e379cabc2cf7ba30bf199887053553c","modified":1702643369157},{"_id":"public/2023/12/15/17-vue3组件v-model/index.html","hash":"e5dc35a539a0160341858e9c902f450a084b3b48","modified":1702643433543},{"_id":"public/2023/12/15/16-vue3 props & emits/index.html","hash":"94d7fcf41f47dcd57dc141fc5a5328adda218221","modified":1702643433543},{"_id":"public/2023/12/13/15-vue3组件注册/index.html","hash":"1d31cd9636b41f53f87fd2f21095cbf86e54d8ca","modified":1702643433543}],"Category":[{"name":"test1 - test11","_id":"cloh2wf2e0005v4w6fv4m6xnn"},{"name":"test2 - test22","_id":"cloh2wf2f0007v4w68pcc7m34"},{"name":"vue3 - 文档","_id":"clomnfqd60008m5w6ejsc6la0"},{"name":"vue3 - vue3文档","_id":"clomngy3g000cm5w6fo3og6wg"},{"name":"vue - 样式","_id":"cloy7augi000eblw6bj2j9q3l"},{"name":"vue3 - 文档","parent":"cloy7augi000eblw6bj2j9q3l","_id":"clpj6vfno00037uw664nhch3a"},{"name":"vue","_id":"clpl36b6w000159w67kn8ddbu"},{"name":"JavaScript - 事件","_id":"clpl36b6y000659w6a6si3o5a"}],"Data":[],"Page":[{"title":"categories","date":"2023-11-02T09:58:43.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-11-02 17:58:43\n---\n","updated":"2023-11-02T10:30:52.506Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cloh2wf290000v4w64xgn4zkb","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2023-11-02T10:43:02.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-11-02 18:43:02\n---\n","updated":"2023-11-02T10:43:02.364Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cloh2wf2a0001v4w6a6i7hjni","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2023-11-03T02:23:39.000Z","_content":"# About me\n>\n>我是一枚01年的前端程序媛，23年从华东师大毕业，现工作于京东。\n>\n>本站用于记录日常的学习，很高兴和大家分享～(●’◡’●)ﾉ\n\n# Learning path\n>\n>路漫漫其修远兮，吾将上下而求索\n>\n>- 目前主要用 Vue2\n>- Vue3 & 微信小程序 会用但不熟\n>- React 在学习中\n>- 微前端用过 iframe，打算试试 qiankun\n>- 后端 & 数据库 有时间也要学\n>- ......\n\n# Hobbies\n>\n>兴趣广泛，热爱生活 ♥\n>\n>- 美食：吃吃吃什么的最治愈啦！\n>- 唱歌：喜欢欧美流行乐，Ariana Grande & Taylor Swift 的歌是心头爱\n>- 跳舞：最近在跳爵士舞，处于驯服四肢的阶段 ◔ ‸◔？\n>- 运动：钟爱散步、跳操等低强度养生运动\n>- 读书：爱读心理学书籍和小说经典\n\n# Contact\n>\n>qq邮箱：<2695969122@qq.com>\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-11-03 10:23:39\n---\n# About me\n>\n>我是一枚01年的前端程序媛，23年从华东师大毕业，现工作于京东。\n>\n>本站用于记录日常的学习，很高兴和大家分享～(●’◡’●)ﾉ\n\n# Learning path\n>\n>路漫漫其修远兮，吾将上下而求索\n>\n>- 目前主要用 Vue2\n>- Vue3 & 微信小程序 会用但不熟\n>- React 在学习中\n>- 微前端用过 iframe，打算试试 qiankun\n>- 后端 & 数据库 有时间也要学\n>- ......\n\n# Hobbies\n>\n>兴趣广泛，热爱生活 ♥\n>\n>- 美食：吃吃吃什么的最治愈啦！\n>- 唱歌：喜欢欧美流行乐，Ariana Grande & Taylor Swift 的歌是心头爱\n>- 跳舞：最近在跳爵士舞，处于驯服四肢的阶段 ◔ ‸◔？\n>- 运动：钟爱散步、跳操等低强度养生运动\n>- 读书：爱读心理学书籍和小说经典\n\n# Contact\n>\n>qq邮箱：<2695969122@qq.com>\n","updated":"2023-11-03T03:32:29.339Z","path":"about/index.html","_id":"clohzs1xz0000u1w63v6l80y3","comments":1,"layout":"page","content":"<h1 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h1><blockquote>\n<p>我是一枚01年的前端程序媛，23年从华东师大毕业，现工作于京东。</p>\n<p>本站用于记录日常的学习，很高兴和大家分享～(●’◡’●)ﾉ</p>\n</blockquote>\n<h1 id=\"Learning-path\"><a href=\"#Learning-path\" class=\"headerlink\" title=\"Learning path\"></a>Learning path</h1><blockquote>\n<p>路漫漫其修远兮，吾将上下而求索</p>\n<ul>\n<li>目前主要用 Vue2</li>\n<li>Vue3 &amp; 微信小程序 会用但不熟</li>\n<li>React 在学习中</li>\n<li>微前端用过 iframe，打算试试 qiankun</li>\n<li>后端 &amp; 数据库 有时间也要学</li>\n<li>……</li>\n</ul>\n</blockquote>\n<h1 id=\"Hobbies\"><a href=\"#Hobbies\" class=\"headerlink\" title=\"Hobbies\"></a>Hobbies</h1><blockquote>\n<p>兴趣广泛，热爱生活 ♥</p>\n<ul>\n<li>美食：吃吃吃什么的最治愈啦！</li>\n<li>唱歌：喜欢欧美流行乐，Ariana Grande &amp; Taylor Swift 的歌是心头爱</li>\n<li>跳舞：最近在跳爵士舞，处于驯服四肢的阶段 ◔ ‸◔？</li>\n<li>运动：钟爱散步、跳操等低强度养生运动</li>\n<li>读书：爱读心理学书籍和小说经典</li>\n</ul>\n</blockquote>\n<h1 id=\"Contact\"><a href=\"#Contact\" class=\"headerlink\" title=\"Contact\"></a>Contact</h1><blockquote>\n<p>qq邮箱：<a class=\"link\"   href=\"mailto:&#x32;&#x36;&#57;&#53;&#x39;&#54;&#x39;&#49;&#50;&#50;&#x40;&#113;&#113;&#x2e;&#x63;&#x6f;&#x6d;\" >&#x32;&#x36;&#57;&#53;&#x39;&#54;&#x39;&#49;&#50;&#50;&#x40;&#113;&#113;&#x2e;&#x63;&#x6f;&#x6d; <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"About-me\"><a href=\"#About-me\" class=\"headerlink\" title=\"About me\"></a>About me</h1><blockquote>\n<p>我是一枚01年的前端程序媛，23年从华东师大毕业，现工作于京东。</p>\n<p>本站用于记录日常的学习，很高兴和大家分享～(●’◡’●)ﾉ</p>\n</blockquote>\n<h1 id=\"Learning-path\"><a href=\"#Learning-path\" class=\"headerlink\" title=\"Learning path\"></a>Learning path</h1><blockquote>\n<p>路漫漫其修远兮，吾将上下而求索</p>\n<ul>\n<li>目前主要用 Vue2</li>\n<li>Vue3 &amp; 微信小程序 会用但不熟</li>\n<li>React 在学习中</li>\n<li>微前端用过 iframe，打算试试 qiankun</li>\n<li>后端 &amp; 数据库 有时间也要学</li>\n<li>……</li>\n</ul>\n</blockquote>\n<h1 id=\"Hobbies\"><a href=\"#Hobbies\" class=\"headerlink\" title=\"Hobbies\"></a>Hobbies</h1><blockquote>\n<p>兴趣广泛，热爱生活 ♥</p>\n<ul>\n<li>美食：吃吃吃什么的最治愈啦！</li>\n<li>唱歌：喜欢欧美流行乐，Ariana Grande &amp; Taylor Swift 的歌是心头爱</li>\n<li>跳舞：最近在跳爵士舞，处于驯服四肢的阶段 ◔ ‸◔？</li>\n<li>运动：钟爱散步、跳操等低强度养生运动</li>\n<li>读书：爱读心理学书籍和小说经典</li>\n</ul>\n</blockquote>\n<h1 id=\"Contact\"><a href=\"#Contact\" class=\"headerlink\" title=\"Contact\"></a>Contact</h1><blockquote>\n<p>qq邮箱：<a class=\"link\"   href=\"mailto:&#x32;&#x36;&#57;&#53;&#x39;&#54;&#x39;&#49;&#50;&#50;&#x40;&#113;&#113;&#x2e;&#x63;&#x6f;&#x6d;\" >&#x32;&#x36;&#57;&#53;&#x39;&#54;&#x39;&#49;&#50;&#50;&#x40;&#113;&#113;&#x2e;&#x63;&#x6f;&#x6d; <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n</blockquote>\n"}],"Post":[{"title":"2-vue指令语法","date":"2023-11-06T08:04:06.000Z","_content":"\n## 指令\n\n种类：v-html, v-bind, v-on, v-model, v-slot ...\n\n指令语法如下图所示：\n![指令语法](https://img20.360buyimg.com/img/jfs/t1/89597/35/41403/16292/65489fc5Fb2d8b302/d64ca449c9e1d57b.png)\n\n### 动态参数\n\n（1）动态参数的值应为字符串或 null（null 会移除该绑定）\n\n（2）动态参数的名称避免使用大写字母，因为会被强制转为小写（someAttr -> someattr）\n\n``` html\n<a :[attributeName]=\"url\"> ... </a>\n\n<a @[eventName]=\"doSomething\">\n```\n\n### 修饰符\n\n修饰符为以点开头的特殊后缀，比如：.prevent 修饰符会告知 v-on 指令对触发的事件调用 event.preventDefault()\n\n``` html\n<div @submit.prevent=\"onSubmit\"></div>\n```\n\n## v-html\n\nspan 的内容会被替换为 rawHtml 属性的值，其中的数据绑定会被忽略（注意：使用这种方法容易造成 XSS 漏洞）\n\n``` html\n<span v-html=\"rawHtml\"></span>\n```\n\n## v-bind\n\n``` html\n<div v-bind:id=\"dynamicId\"></div>\n<!--简写-->\n<div :id=\"dynamicId\"></div>\n```\n\n### 动态绑定多个值\n\n``` js\nconst objOfAttrs = {\n    id: 'container',\n    class: 'wrapper'\n};\n```\n\n``` html\n<div :objOfAttrs></div>\n```\n\n比如：动态 style class\n\n``` html\n<div :style=\"{class1: isClass1, class2: isClass2}\"></div>\n```\n\n## v-on\n\n``` html\n<div v-on:click=\"onClick\"></div>\n<!--简写-->\n<div @click=\"onClick\"></div>\n```\n\n## v-if\n\nv-if, v-else-if, v-else\n\n注意：v-if 的优先级大于 v-for，二者不建议同时使用（详见 v-for）\n\n### template 上的 v-if\n\n如果想要切换不止一个元素，可以在元素外包一个 ``<template>``，并用 v-if 控制（v-show 不能在 template 上使用）\n\n因为 ``<template>`` 是一个不可见的包装器元素，渲染的结果中不会包含该元素\n\n### v-if & v-show\n\n（1）原理：v-if 切换时，条件区块会被销毁与重建；v-show 切换时，只会切换 display 属性\n\n（2）惰性：v-if 是惰性的，如果初始为 false 则不渲染；v-show 初始始终会渲染\n\n（3）场景：v-if 初始渲染开销较好，不会频繁切换时使用；v-show 切换开销较小，频繁切换时使用\n","source":"_posts/2-vue指令语法.md","raw":"---\ntitle: 2-vue指令语法\ndate: 2023-11-06 16:04:06\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## 指令\n\n种类：v-html, v-bind, v-on, v-model, v-slot ...\n\n指令语法如下图所示：\n![指令语法](https://img20.360buyimg.com/img/jfs/t1/89597/35/41403/16292/65489fc5Fb2d8b302/d64ca449c9e1d57b.png)\n\n### 动态参数\n\n（1）动态参数的值应为字符串或 null（null 会移除该绑定）\n\n（2）动态参数的名称避免使用大写字母，因为会被强制转为小写（someAttr -> someattr）\n\n``` html\n<a :[attributeName]=\"url\"> ... </a>\n\n<a @[eventName]=\"doSomething\">\n```\n\n### 修饰符\n\n修饰符为以点开头的特殊后缀，比如：.prevent 修饰符会告知 v-on 指令对触发的事件调用 event.preventDefault()\n\n``` html\n<div @submit.prevent=\"onSubmit\"></div>\n```\n\n## v-html\n\nspan 的内容会被替换为 rawHtml 属性的值，其中的数据绑定会被忽略（注意：使用这种方法容易造成 XSS 漏洞）\n\n``` html\n<span v-html=\"rawHtml\"></span>\n```\n\n## v-bind\n\n``` html\n<div v-bind:id=\"dynamicId\"></div>\n<!--简写-->\n<div :id=\"dynamicId\"></div>\n```\n\n### 动态绑定多个值\n\n``` js\nconst objOfAttrs = {\n    id: 'container',\n    class: 'wrapper'\n};\n```\n\n``` html\n<div :objOfAttrs></div>\n```\n\n比如：动态 style class\n\n``` html\n<div :style=\"{class1: isClass1, class2: isClass2}\"></div>\n```\n\n## v-on\n\n``` html\n<div v-on:click=\"onClick\"></div>\n<!--简写-->\n<div @click=\"onClick\"></div>\n```\n\n## v-if\n\nv-if, v-else-if, v-else\n\n注意：v-if 的优先级大于 v-for，二者不建议同时使用（详见 v-for）\n\n### template 上的 v-if\n\n如果想要切换不止一个元素，可以在元素外包一个 ``<template>``，并用 v-if 控制（v-show 不能在 template 上使用）\n\n因为 ``<template>`` 是一个不可见的包装器元素，渲染的结果中不会包含该元素\n\n### v-if & v-show\n\n（1）原理：v-if 切换时，条件区块会被销毁与重建；v-show 切换时，只会切换 display 属性\n\n（2）惰性：v-if 是惰性的，如果初始为 false 则不渲染；v-show 初始始终会渲染\n\n（3）场景：v-if 初始渲染开销较好，不会频繁切换时使用；v-show 切换开销较小，频繁切换时使用\n","slug":"2-vue指令语法","published":1,"updated":"2023-11-29T03:09:25.446Z","_id":"clomn21kc0005m5w60q8kcman","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><p>种类：v-html, v-bind, v-on, v-model, v-slot …</p>\n<p>指令语法如下图所示：<br><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://img20.360buyimg.com/img/jfs/t1/89597/35/41403/16292/65489fc5Fb2d8b302/d64ca449c9e1d57b.png\"\n                      alt=\"指令语法\"\n                ></p>\n<h3 id=\"动态参数\"><a href=\"#动态参数\" class=\"headerlink\" title=\"动态参数\"></a>动态参数</h3><p>（1）动态参数的值应为字符串或 null（null 会移除该绑定）</p>\n<p>（2）动态参数的名称避免使用大写字母，因为会被强制转为小写（someAttr -&gt; someattr）</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:</span>[<span class=\"attr\">attributeName</span>]=<span class=\"string\">&quot;url&quot;</span>&gt;</span> ... <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> @[<span class=\"attr\">eventName</span>]=<span class=\"string\">&quot;doSomething&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"修饰符\"><a href=\"#修饰符\" class=\"headerlink\" title=\"修饰符\"></a>修饰符</h3><p>修饰符为以点开头的特殊后缀，比如：.prevent 修饰符会告知 v-on 指令对触发的事件调用 event.preventDefault()</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">&quot;onSubmit&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a>v-html</h2><p>span 的内容会被替换为 rawHtml 属性的值，其中的数据绑定会被忽略（注意：使用这种方法容易造成 XSS 漏洞）</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;rawHtml&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h2><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-bind:id</span>=<span class=\"string\">&quot;dynamicId&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--简写--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:id</span>=<span class=\"string\">&quot;dynamicId&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"动态绑定多个值\"><a href=\"#动态绑定多个值\" class=\"headerlink\" title=\"动态绑定多个值\"></a>动态绑定多个值</h3><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> objOfAttrs = &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"string\">&#x27;container&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">class</span>: <span class=\"string\">&#x27;wrapper&#x27;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:objOfAttrs</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>比如：动态 style class</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;class1: isClass1, class2: isClass2&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h2><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;onClick&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--简写--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;onClick&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h2><p>v-if, v-else-if, v-else</p>\n<p>注意：v-if 的优先级大于 v-for，二者不建议同时使用（详见 v-for）</p>\n<h3 id=\"template-上的-v-if\"><a href=\"#template-上的-v-if\" class=\"headerlink\" title=\"template 上的 v-if\"></a>template 上的 v-if</h3><p>如果想要切换不止一个元素，可以在元素外包一个 <code>&lt;template&gt;</code>，并用 v-if 控制（v-show 不能在 template 上使用）</p>\n<p>因为 <code>&lt;template&gt;</code> 是一个不可见的包装器元素，渲染的结果中不会包含该元素</p>\n<h3 id=\"v-if-v-show\"><a href=\"#v-if-v-show\" class=\"headerlink\" title=\"v-if &amp; v-show\"></a>v-if &amp; v-show</h3><p>（1）原理：v-if 切换时，条件区块会被销毁与重建；v-show 切换时，只会切换 display 属性</p>\n<p>（2）惰性：v-if 是惰性的，如果初始为 false 则不渲染；v-show 初始始终会渲染</p>\n<p>（3）场景：v-if 初始渲染开销较好，不会频繁切换时使用；v-show 切换开销较小，频繁切换时使用</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><p>种类：v-html, v-bind, v-on, v-model, v-slot …</p>\n<p>指令语法如下图所示：<br><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://img20.360buyimg.com/img/jfs/t1/89597/35/41403/16292/65489fc5Fb2d8b302/d64ca449c9e1d57b.png\"\n                      alt=\"指令语法\"\n                ></p>\n<h3 id=\"动态参数\"><a href=\"#动态参数\" class=\"headerlink\" title=\"动态参数\"></a>动态参数</h3><p>（1）动态参数的值应为字符串或 null（null 会移除该绑定）</p>\n<p>（2）动态参数的名称避免使用大写字母，因为会被强制转为小写（someAttr -&gt; someattr）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:</span>[<span class=\"attr\">attributeName</span>]=<span class=\"string\">&quot;url&quot;</span>&gt;</span> ... <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> @[<span class=\"attr\">eventName</span>]=<span class=\"string\">&quot;doSomething&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修饰符\"><a href=\"#修饰符\" class=\"headerlink\" title=\"修饰符\"></a>修饰符</h3><p>修饰符为以点开头的特殊后缀，比如：.prevent 修饰符会告知 v-on 指令对触发的事件调用 event.preventDefault()</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">&quot;onSubmit&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a>v-html</h2><p>span 的内容会被替换为 rawHtml 属性的值，其中的数据绑定会被忽略（注意：使用这种方法容易造成 XSS 漏洞）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;rawHtml&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-bind:id</span>=<span class=\"string\">&quot;dynamicId&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--简写--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:id</span>=<span class=\"string\">&quot;dynamicId&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"动态绑定多个值\"><a href=\"#动态绑定多个值\" class=\"headerlink\" title=\"动态绑定多个值\"></a>动态绑定多个值</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> objOfAttrs = &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"string\">&#x27;container&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">class</span>: <span class=\"string\">&#x27;wrapper&#x27;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:objOfAttrs</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>比如：动态 style class</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;class1: isClass1, class2: isClass2&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;onClick&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--简写--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;onClick&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h2><p>v-if, v-else-if, v-else</p>\n<p>注意：v-if 的优先级大于 v-for，二者不建议同时使用（详见 v-for）</p>\n<h3 id=\"template-上的-v-if\"><a href=\"#template-上的-v-if\" class=\"headerlink\" title=\"template 上的 v-if\"></a>template 上的 v-if</h3><p>如果想要切换不止一个元素，可以在元素外包一个 <code>&lt;template&gt;</code>，并用 v-if 控制（v-show 不能在 template 上使用）</p>\n<p>因为 <code>&lt;template&gt;</code> 是一个不可见的包装器元素，渲染的结果中不会包含该元素</p>\n<h3 id=\"v-if-v-show\"><a href=\"#v-if-v-show\" class=\"headerlink\" title=\"v-if &amp; v-show\"></a>v-if &amp; v-show</h3><p>（1）原理：v-if 切换时，条件区块会被销毁与重建；v-show 切换时，只会切换 display 属性</p>\n<p>（2）惰性：v-if 是惰性的，如果初始为 false 则不渲染；v-show 初始始终会渲染</p>\n<p>（3）场景：v-if 初始渲染开销较好，不会频繁切换时使用；v-show 切换开销较小，频繁切换时使用</p>\n"},{"title":"1-vue3应用的创建&使用","date":"2023-11-06T03:27:47.000Z","_content":"\n## 创建应用\n\n``` bash\nnpm create vue@latest\n```\n\n## 通过CDN使用vue\n\n这里使用了提供 npm 包服务的 CDN —— unpkg\n\n``` html\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n```\n\n### DOM 中的根组件模板\n\n当根组件没有设置 template 选项时，Vue 将自动使用容器的 innerHTML 作为模板\n\n这种方式通常用于此种“无构建步骤”（通过 CDN 使用 vue）的应用程序\n\n``` html\n<div id=\"app\">\n  <button @click=\"count++\">{{ count }}</button>\n</div>\n```\n\n``` js\nimport { createApp } from 'vue';\n\nconst app = createApp({\n  data() {\n    return {\n      count: 0\n    }\n  }\n}).mount('#app');\n```\n\n### 全局构建\n\n上述链接使用 *全局构建* 版本的 Vue，所有顶层 API 都暴露为全局 Vue 对象的属性\n\n``` html\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<div id=\"app\">{{ message }}</div>\n\n<script>\n  const { createApp, ref } = Vue;\n/**  1. 创建应用并挂载 */\n  createApp({\n    setup() {\n      const message = ref('Hello world!');\n      return {\n        message\n      };\n    }\n  }).mount('#app');\n  \n  /**  2. 分步骤 */\n  // // a. 创建应用\n  // const app = createApp({\n  //   setup() {\n  //     const message = ref('Hello world!');\n  //     return {\n  //       message\n  //     }\n  //   };\n  // });\n  // // b. 挂载\n  // app.mount('#app');\n</script>\n```\n\n### 导入映射表（Import maps）\n\n不使用完整的 CDN URL 引入，而使用 es6 的导入映射表（import maps）\n\n``` html\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"vue\": \"https://unpkg.com/vue@3/dist/vue.global.js\"\n    }\n  }\n</script>\n<div id=\"app\">{{ message }}</div>\n\n<script type=\"module\">\n  import { createApp, ref } from \"vue\";\n\n  createApp({\n    setup() {\n      const message = ref(\"Hello world!\");\n      return {\n        message\n      };\n    }\n  }).mount('#app');\n</script>\n```\n\n### 拆分模块\n\n将代码拆分为单独的 js 文件以便管理\n\n出于安全原因，es 模块只能通过 http 协议工作，所以需要使用本地的 http 服务器，通过 http 协议提供 index.html。比如：安装 Node.js，在 html 文件所在的文件夹运行 ``npx serve``\n\n``` html\n<!-- index.html -->\n<div id=\"app\"></div>\n\n<script type=\"module\">\n  import { createApp } from 'vue';\n  import MyComponent from './my-component.js';\n  createApp(MyComponent).mount('#app');\n</script>\n```\n\n``` js\n// my-component.js\nimport { ref } from 'vue';\n\nexport default {\n  setup() {\n    const count = ref(0);\n    return { count };\n  },\n  template: `<div>count is {{ count }}</div>`\n}\n```\n","source":"_posts/1-vue3应用的创建&使用.md","raw":"---\ntitle: 1-vue3应用的创建&使用\ndate: 2023-11-06 11:27:47\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## 创建应用\n\n``` bash\nnpm create vue@latest\n```\n\n## 通过CDN使用vue\n\n这里使用了提供 npm 包服务的 CDN —— unpkg\n\n``` html\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n```\n\n### DOM 中的根组件模板\n\n当根组件没有设置 template 选项时，Vue 将自动使用容器的 innerHTML 作为模板\n\n这种方式通常用于此种“无构建步骤”（通过 CDN 使用 vue）的应用程序\n\n``` html\n<div id=\"app\">\n  <button @click=\"count++\">{{ count }}</button>\n</div>\n```\n\n``` js\nimport { createApp } from 'vue';\n\nconst app = createApp({\n  data() {\n    return {\n      count: 0\n    }\n  }\n}).mount('#app');\n```\n\n### 全局构建\n\n上述链接使用 *全局构建* 版本的 Vue，所有顶层 API 都暴露为全局 Vue 对象的属性\n\n``` html\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<div id=\"app\">{{ message }}</div>\n\n<script>\n  const { createApp, ref } = Vue;\n/**  1. 创建应用并挂载 */\n  createApp({\n    setup() {\n      const message = ref('Hello world!');\n      return {\n        message\n      };\n    }\n  }).mount('#app');\n  \n  /**  2. 分步骤 */\n  // // a. 创建应用\n  // const app = createApp({\n  //   setup() {\n  //     const message = ref('Hello world!');\n  //     return {\n  //       message\n  //     }\n  //   };\n  // });\n  // // b. 挂载\n  // app.mount('#app');\n</script>\n```\n\n### 导入映射表（Import maps）\n\n不使用完整的 CDN URL 引入，而使用 es6 的导入映射表（import maps）\n\n``` html\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"vue\": \"https://unpkg.com/vue@3/dist/vue.global.js\"\n    }\n  }\n</script>\n<div id=\"app\">{{ message }}</div>\n\n<script type=\"module\">\n  import { createApp, ref } from \"vue\";\n\n  createApp({\n    setup() {\n      const message = ref(\"Hello world!\");\n      return {\n        message\n      };\n    }\n  }).mount('#app');\n</script>\n```\n\n### 拆分模块\n\n将代码拆分为单独的 js 文件以便管理\n\n出于安全原因，es 模块只能通过 http 协议工作，所以需要使用本地的 http 服务器，通过 http 协议提供 index.html。比如：安装 Node.js，在 html 文件所在的文件夹运行 ``npx serve``\n\n``` html\n<!-- index.html -->\n<div id=\"app\"></div>\n\n<script type=\"module\">\n  import { createApp } from 'vue';\n  import MyComponent from './my-component.js';\n  createApp(MyComponent).mount('#app');\n</script>\n```\n\n``` js\n// my-component.js\nimport { ref } from 'vue';\n\nexport default {\n  setup() {\n    const count = ref(0);\n    return { count };\n  },\n  template: `<div>count is {{ count }}</div>`\n}\n```\n","slug":"1-vue3应用的创建&使用","published":1,"updated":"2023-11-28T11:01:13.018Z","_id":"clomnjwvc000fm5w68cc8bqrv","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"创建应用\"><a href=\"#创建应用\" class=\"headerlink\" title=\"创建应用\"></a>创建应用</h2><div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm create vue@latest</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"通过CDN使用vue\"><a href=\"#通过CDN使用vue\" class=\"headerlink\" title=\"通过CDN使用vue\"></a>通过CDN使用vue</h2><p>这里使用了提供 npm 包服务的 CDN —— unpkg</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"DOM-中的根组件模板\"><a href=\"#DOM-中的根组件模板\" class=\"headerlink\" title=\"DOM 中的根组件模板\"></a>DOM 中的根组件模板</h3><p>当根组件没有设置 template 选项时，Vue 将自动使用容器的 innerHTML 作为模板</p>\n<p>这种方式通常用于此种“无构建步骤”（通过 CDN 使用 vue）的应用程序</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;count++&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(&#123;</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"全局构建\"><a href=\"#全局构建\" class=\"headerlink\" title=\"全局构建\"></a>全局构建</h3><p>上述链接使用 <em>全局构建</em> 版本的 Vue，所有顶层 API 都暴露为全局 Vue 对象的属性</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> &#123; createApp, ref &#125; = <span class=\"title class_\">Vue</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">/**  1. 创建应用并挂载 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">createApp</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> message = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;Hello world!&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        message</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">/**  2. 分步骤 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// // a. 创建应用</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// const app = createApp(&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//   setup() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//     const message = ref(&#x27;Hello world!&#x27;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//     return &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//       message</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//     &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//   &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// // b. 挂载</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// app.mount(&#x27;#app&#x27;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"导入映射表（Import-maps）\"><a href=\"#导入映射表（Import-maps）\" class=\"headerlink\" title=\"导入映射表（Import maps）\"></a>导入映射表（Import maps）</h3><p>不使用完整的 CDN URL 引入，而使用 es6 的导入映射表（import maps）</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;importmap&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"string\">&quot;imports&quot;</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;vue&quot;</span>: <span class=\"string\">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">import</span> &#123; createApp, ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">createApp</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> message = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;Hello world!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        message</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"拆分模块\"><a href=\"#拆分模块\" class=\"headerlink\" title=\"拆分模块\"></a>拆分模块</h3><p>将代码拆分为单独的 js 文件以便管理</p>\n<p>出于安全原因，es 模块只能通过 http 协议工作，所以需要使用本地的 http 服务器，通过 http 协议提供 index.html。比如：安装 Node.js，在 html 文件所在的文件夹运行 <code>npx serve</code></p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">import</span> <span class=\"title class_\">MyComponent</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./my-component.js&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">createApp</span>(<span class=\"title class_\">MyComponent</span>).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// my-component.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; count &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">`&lt;div&gt;count is &#123;&#123; count &#125;&#125;&lt;/div&gt;`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建应用\"><a href=\"#创建应用\" class=\"headerlink\" title=\"创建应用\"></a>创建应用</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm create vue@latest</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"通过CDN使用vue\"><a href=\"#通过CDN使用vue\" class=\"headerlink\" title=\"通过CDN使用vue\"></a>通过CDN使用vue</h2><p>这里使用了提供 npm 包服务的 CDN —— unpkg</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DOM-中的根组件模板\"><a href=\"#DOM-中的根组件模板\" class=\"headerlink\" title=\"DOM 中的根组件模板\"></a>DOM 中的根组件模板</h3><p>当根组件没有设置 template 选项时，Vue 将自动使用容器的 innerHTML 作为模板</p>\n<p>这种方式通常用于此种“无构建步骤”（通过 CDN 使用 vue）的应用程序</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;count++&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(&#123;</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"全局构建\"><a href=\"#全局构建\" class=\"headerlink\" title=\"全局构建\"></a>全局构建</h3><p>上述链接使用 <em>全局构建</em> 版本的 Vue，所有顶层 API 都暴露为全局 Vue 对象的属性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> &#123; createApp, ref &#125; = <span class=\"title class_\">Vue</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">/**  1. 创建应用并挂载 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">createApp</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> message = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;Hello world!&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        message</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">/**  2. 分步骤 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// // a. 创建应用</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// const app = createApp(&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//   setup() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//     const message = ref(&#x27;Hello world!&#x27;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//     return &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//       message</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//     &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//   &#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// // b. 挂载</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// app.mount(&#x27;#app&#x27;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"导入映射表（Import-maps）\"><a href=\"#导入映射表（Import-maps）\" class=\"headerlink\" title=\"导入映射表（Import maps）\"></a>导入映射表（Import maps）</h3><p>不使用完整的 CDN URL 引入，而使用 es6 的导入映射表（import maps）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;importmap&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"string\">&quot;imports&quot;</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;vue&quot;</span>: <span class=\"string\">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">import</span> &#123; createApp, ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">createApp</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> message = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;Hello world!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        message</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拆分模块\"><a href=\"#拆分模块\" class=\"headerlink\" title=\"拆分模块\"></a>拆分模块</h3><p>将代码拆分为单独的 js 文件以便管理</p>\n<p>出于安全原因，es 模块只能通过 http 协议工作，所以需要使用本地的 http 服务器，通过 http 协议提供 index.html。比如：安装 Node.js，在 html 文件所在的文件夹运行 <code>npx serve</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">import</span> <span class=\"title class_\">MyComponent</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./my-component.js&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">createApp</span>(<span class=\"title class_\">MyComponent</span>).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// my-component.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; count &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">`&lt;div&gt;count is &#123;&#123; count &#125;&#125;&lt;/div&gt;`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"3-vue3响应式","date":"2023-11-06T08:41:05.000Z","_content":"\n## ref()\n\nref() 返回一个包含属性 value 的对象\n\n``` js\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const count = ref(0);\n        function increment() {\n            count.value++;\n        }\n        return {\n            count,\n            increment\n        }\n    }\n}\n```\n\n``` html\n<button @click=\"increment\">{{ count }}</button>\n```\n\n### 原理\n\nref 的 .value 属性使得 Vue 可以检测其何时被访问或修改\n\n当一个组件首次渲染时，Vue 会**追踪**在渲染过程中使用的每一个 ref；当一个 ref 被修改时，它会**触发** 追踪它的组件 的重新渲染\n\n``` js\n// 伪代码\nconst myRef = {\n    _value: 0,\n    get value() {\n        track(); // 追踪渲染过程中使用的每一个 ref\n        return this._value;\n    },\n    set value(newValue) {\n        this._value = newValue;\n        trigger(); // 触发追踪它的组件的重新渲染\n    }\n}\n```\n\n### ``<script setup>``\n\n使用 ``<script setup>`` 简化代码\n\n``` html\n<script setup>\nimport { ref } from 'vue';\n\nconst count = ref(0);\n\nfunction increment() {\n    count.value++;\n}\n</script>\n\n<template>\n    <button @click=\"increment\">{{ count }}</button>\n</template>\n```\n\n## DOM 更新时机\n\nDOM 更新后，立即执行回调函数\n\n``` js\nimport { nextTick } from 'vue';\n\nasync function increment() {\n    count.value++;\n    await nextTick();\n    callback();\n}\n```\n\n或者\n\n``` js\nimport { nextTick } from 'vue';\n\nfunction increment() {\n    count.value++;\n    nextTick(() => callback());\n}\n```\n\n## reactive()\n\nreactive() 使对象本身具有响应性，当 ref 的值是一个对象时，会在内层调用 reactive\n\n### 原理\n\nreactive() 返回原始对象的 proxy，允许 Vue 拦截和定义基本操作的行为（如属性查找、赋值、删除等）\n\nreactive() 的返回值和原始对象不相等\n\n``` js\nconst raw = {};\nconst proxy = reactive(raw);\nconsole.log(raw === proxy); // false\n```\n\n### reactive() 的局限性\n\n（1）有限的值类型：只能用于对象类型（对象、数组、Map、Set），不能用于原始类型；\n\n（2）不能替换整个对象：替换整个对象会导致响应式连接丢失；\n\n（3）对解构操作不友好：解构后的变量会丢失响应式连接。\n\n## ref 解包\n\n### ref 作为 reactive 对象属性\n\nref 作为响应式对象的属性时，就像一个普通的属性\n\n``` js\nconst count = ref(0);\nconst state = reactive({ count });\nconsole.log(state.count); // 0\n\nstate.count = 1;\nconsole.log(state.count); // 1\n```\n\n### 在模板中解包\n\n在模板渲染上下文中，只有顶级的 ref 才会被解包\n\n第二个不符合预期是因为，obj.id 未被解包，仍是一个 ref 对象\n\n``` js\nconst count = ref(0);\nconst obj = {\n    id: ref(1)\n};\n```\n\n``` html\n<!-- 符合预期 —— 2 -->\n{{ count + 1 }}\n<!-- 不符合预期 —— [object Object]1 -->\n{{ obj.id + 1 }}\n```\n\n为了解决该问题，需要将 id 结构为顶级属性\n\n``` js\nconst { id } = obj;\n```\n\n``` html\n<!-- 符合预期 —— 2 -->\n{{ id + 1 }}\n```\n","source":"_posts/3-vue3响应式.md","raw":"---\ntitle: 3-vue3响应式\ndate: 2023-11-06 16:41:05\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## ref()\n\nref() 返回一个包含属性 value 的对象\n\n``` js\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const count = ref(0);\n        function increment() {\n            count.value++;\n        }\n        return {\n            count,\n            increment\n        }\n    }\n}\n```\n\n``` html\n<button @click=\"increment\">{{ count }}</button>\n```\n\n### 原理\n\nref 的 .value 属性使得 Vue 可以检测其何时被访问或修改\n\n当一个组件首次渲染时，Vue 会**追踪**在渲染过程中使用的每一个 ref；当一个 ref 被修改时，它会**触发** 追踪它的组件 的重新渲染\n\n``` js\n// 伪代码\nconst myRef = {\n    _value: 0,\n    get value() {\n        track(); // 追踪渲染过程中使用的每一个 ref\n        return this._value;\n    },\n    set value(newValue) {\n        this._value = newValue;\n        trigger(); // 触发追踪它的组件的重新渲染\n    }\n}\n```\n\n### ``<script setup>``\n\n使用 ``<script setup>`` 简化代码\n\n``` html\n<script setup>\nimport { ref } from 'vue';\n\nconst count = ref(0);\n\nfunction increment() {\n    count.value++;\n}\n</script>\n\n<template>\n    <button @click=\"increment\">{{ count }}</button>\n</template>\n```\n\n## DOM 更新时机\n\nDOM 更新后，立即执行回调函数\n\n``` js\nimport { nextTick } from 'vue';\n\nasync function increment() {\n    count.value++;\n    await nextTick();\n    callback();\n}\n```\n\n或者\n\n``` js\nimport { nextTick } from 'vue';\n\nfunction increment() {\n    count.value++;\n    nextTick(() => callback());\n}\n```\n\n## reactive()\n\nreactive() 使对象本身具有响应性，当 ref 的值是一个对象时，会在内层调用 reactive\n\n### 原理\n\nreactive() 返回原始对象的 proxy，允许 Vue 拦截和定义基本操作的行为（如属性查找、赋值、删除等）\n\nreactive() 的返回值和原始对象不相等\n\n``` js\nconst raw = {};\nconst proxy = reactive(raw);\nconsole.log(raw === proxy); // false\n```\n\n### reactive() 的局限性\n\n（1）有限的值类型：只能用于对象类型（对象、数组、Map、Set），不能用于原始类型；\n\n（2）不能替换整个对象：替换整个对象会导致响应式连接丢失；\n\n（3）对解构操作不友好：解构后的变量会丢失响应式连接。\n\n## ref 解包\n\n### ref 作为 reactive 对象属性\n\nref 作为响应式对象的属性时，就像一个普通的属性\n\n``` js\nconst count = ref(0);\nconst state = reactive({ count });\nconsole.log(state.count); // 0\n\nstate.count = 1;\nconsole.log(state.count); // 1\n```\n\n### 在模板中解包\n\n在模板渲染上下文中，只有顶级的 ref 才会被解包\n\n第二个不符合预期是因为，obj.id 未被解包，仍是一个 ref 对象\n\n``` js\nconst count = ref(0);\nconst obj = {\n    id: ref(1)\n};\n```\n\n``` html\n<!-- 符合预期 —— 2 -->\n{{ count + 1 }}\n<!-- 不符合预期 —— [object Object]1 -->\n{{ obj.id + 1 }}\n```\n\n为了解决该问题，需要将 id 结构为顶级属性\n\n``` js\nconst { id } = obj;\n```\n\n``` html\n<!-- 符合预期 —— 2 -->\n{{ id + 1 }}\n```\n","slug":"3-vue3响应式","published":1,"updated":"2023-11-28T11:01:08.130Z","_id":"clomnki9v000im5w67a9mafk9","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref()\"></a>ref()</h2><p>ref() 返回一个包含属性 value 的对象</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            count.<span class=\"property\">value</span>++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            count,</span><br><span class=\"line\">            increment</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;increment&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>ref 的 .value 属性使得 Vue 可以检测其何时被访问或修改</p>\n<p>当一个组件首次渲染时，Vue 会<strong>追踪</strong>在渲染过程中使用的每一个 ref；当一个 ref 被修改时，它会<strong>触发</strong> 追踪它的组件 的重新渲染</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> myRef = &#123;</span><br><span class=\"line\">    <span class=\"attr\">_value</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"keyword\">get</span> <span class=\"title function_\">value</span>() &#123;</span><br><span class=\"line\">        <span class=\"title function_\">track</span>(); <span class=\"comment\">// 追踪渲染过程中使用的每一个 ref</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">_value</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">set</span> <span class=\"title function_\">value</span>(<span class=\"params\">newValue</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">_value</span> = newValue;</span><br><span class=\"line\">        <span class=\"title function_\">trigger</span>(); <span class=\"comment\">// 触发追踪它的组件的重新渲染</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"&lt;script setup&gt;\"></a><code>&lt;script setup&gt;</code></h3><p>使用 <code>&lt;script setup&gt;</code> 简化代码</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    count.<span class=\"property\">value</span>++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;increment&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"DOM-更新时机\"><a href=\"#DOM-更新时机\" class=\"headerlink\" title=\"DOM 更新时机\"></a>DOM 更新时机</h2><p>DOM 更新后，立即执行回调函数</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; nextTick &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    count.<span class=\"property\">value</span>++;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">nextTick</span>();</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<p>或者</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; nextTick &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    count.<span class=\"property\">value</span>++;</span><br><span class=\"line\">    <span class=\"title function_\">nextTick</span>(<span class=\"function\">() =&gt;</span> <span class=\"title function_\">callback</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"reactive\"><a href=\"#reactive\" class=\"headerlink\" title=\"reactive()\"></a>reactive()</h2><p>reactive() 使对象本身具有响应性，当 ref 的值是一个对象时，会在内层调用 reactive</p>\n<h3 id=\"原理-1\"><a href=\"#原理-1\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>reactive() 返回原始对象的 proxy，允许 Vue 拦截和定义基本操作的行为（如属性查找、赋值、删除等）</p>\n<p>reactive() 的返回值和原始对象不相等</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> raw = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> proxy = <span class=\"title function_\">reactive</span>(raw);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(raw === proxy); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"reactive-的局限性\"><a href=\"#reactive-的局限性\" class=\"headerlink\" title=\"reactive() 的局限性\"></a>reactive() 的局限性</h3><p>（1）有限的值类型：只能用于对象类型（对象、数组、Map、Set），不能用于原始类型；</p>\n<p>（2）不能替换整个对象：替换整个对象会导致响应式连接丢失；</p>\n<p>（3）对解构操作不友好：解构后的变量会丢失响应式连接。</p>\n<h2 id=\"ref-解包\"><a href=\"#ref-解包\" class=\"headerlink\" title=\"ref 解包\"></a>ref 解包</h2><h3 id=\"ref-作为-reactive-对象属性\"><a href=\"#ref-作为-reactive-对象属性\" class=\"headerlink\" title=\"ref 作为 reactive 对象属性\"></a>ref 作为 reactive 对象属性</h3><p>ref 作为响应式对象的属性时，就像一个普通的属性</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> state = <span class=\"title function_\">reactive</span>(&#123; count &#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(state.<span class=\"property\">count</span>); <span class=\"comment\">// 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">state.<span class=\"property\">count</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(state.<span class=\"property\">count</span>); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"在模板中解包\"><a href=\"#在模板中解包\" class=\"headerlink\" title=\"在模板中解包\"></a>在模板中解包</h3><p>在模板渲染上下文中，只有顶级的 ref 才会被解包</p>\n<p>第二个不符合预期是因为，obj.id 未被解包，仍是一个 ref 对象</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"title function_\">ref</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 符合预期 —— 2 --&gt;</span></span><br><span class=\"line\">&#123;&#123; count + 1 &#125;&#125;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 不符合预期 —— [object Object]1 --&gt;</span></span><br><span class=\"line\">&#123;&#123; obj.id + 1 &#125;&#125;</span><br></pre></td></tr></table></figure></div>\n\n<p>为了解决该问题，需要将 id 结构为顶级属性</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; id &#125; = obj;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 符合预期 —— 2 --&gt;</span></span><br><span class=\"line\">&#123;&#123; id + 1 &#125;&#125;</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref()\"></a>ref()</h2><p>ref() 返回一个包含属性 value 的对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            count.<span class=\"property\">value</span>++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            count,</span><br><span class=\"line\">            increment</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;increment&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>ref 的 .value 属性使得 Vue 可以检测其何时被访问或修改</p>\n<p>当一个组件首次渲染时，Vue 会<strong>追踪</strong>在渲染过程中使用的每一个 ref；当一个 ref 被修改时，它会<strong>触发</strong> 追踪它的组件 的重新渲染</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 伪代码</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> myRef = &#123;</span><br><span class=\"line\">    <span class=\"attr\">_value</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"keyword\">get</span> <span class=\"title function_\">value</span>() &#123;</span><br><span class=\"line\">        <span class=\"title function_\">track</span>(); <span class=\"comment\">// 追踪渲染过程中使用的每一个 ref</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">_value</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">set</span> <span class=\"title function_\">value</span>(<span class=\"params\">newValue</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">_value</span> = newValue;</span><br><span class=\"line\">        <span class=\"title function_\">trigger</span>(); <span class=\"comment\">// 触发追踪它的组件的重新渲染</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"&lt;script setup&gt;\"></a><code>&lt;script setup&gt;</code></h3><p>使用 <code>&lt;script setup&gt;</code> 简化代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    count.<span class=\"property\">value</span>++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;increment&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"DOM-更新时机\"><a href=\"#DOM-更新时机\" class=\"headerlink\" title=\"DOM 更新时机\"></a>DOM 更新时机</h2><p>DOM 更新后，立即执行回调函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; nextTick &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    count.<span class=\"property\">value</span>++;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">nextTick</span>();</span><br><span class=\"line\">    <span class=\"title function_\">callback</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; nextTick &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">increment</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    count.<span class=\"property\">value</span>++;</span><br><span class=\"line\">    <span class=\"title function_\">nextTick</span>(<span class=\"function\">() =&gt;</span> <span class=\"title function_\">callback</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reactive\"><a href=\"#reactive\" class=\"headerlink\" title=\"reactive()\"></a>reactive()</h2><p>reactive() 使对象本身具有响应性，当 ref 的值是一个对象时，会在内层调用 reactive</p>\n<h3 id=\"原理-1\"><a href=\"#原理-1\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>reactive() 返回原始对象的 proxy，允许 Vue 拦截和定义基本操作的行为（如属性查找、赋值、删除等）</p>\n<p>reactive() 的返回值和原始对象不相等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> raw = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> proxy = <span class=\"title function_\">reactive</span>(raw);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(raw === proxy); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"reactive-的局限性\"><a href=\"#reactive-的局限性\" class=\"headerlink\" title=\"reactive() 的局限性\"></a>reactive() 的局限性</h3><p>（1）有限的值类型：只能用于对象类型（对象、数组、Map、Set），不能用于原始类型；</p>\n<p>（2）不能替换整个对象：替换整个对象会导致响应式连接丢失；</p>\n<p>（3）对解构操作不友好：解构后的变量会丢失响应式连接。</p>\n<h2 id=\"ref-解包\"><a href=\"#ref-解包\" class=\"headerlink\" title=\"ref 解包\"></a>ref 解包</h2><h3 id=\"ref-作为-reactive-对象属性\"><a href=\"#ref-作为-reactive-对象属性\" class=\"headerlink\" title=\"ref 作为 reactive 对象属性\"></a>ref 作为 reactive 对象属性</h3><p>ref 作为响应式对象的属性时，就像一个普通的属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> state = <span class=\"title function_\">reactive</span>(&#123; count &#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(state.<span class=\"property\">count</span>); <span class=\"comment\">// 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">state.<span class=\"property\">count</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(state.<span class=\"property\">count</span>); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在模板中解包\"><a href=\"#在模板中解包\" class=\"headerlink\" title=\"在模板中解包\"></a>在模板中解包</h3><p>在模板渲染上下文中，只有顶级的 ref 才会被解包</p>\n<p>第二个不符合预期是因为，obj.id 未被解包，仍是一个 ref 对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"title function_\">ref</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 符合预期 —— 2 --&gt;</span></span><br><span class=\"line\">&#123;&#123; count + 1 &#125;&#125;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 不符合预期 —— [object Object]1 --&gt;</span></span><br><span class=\"line\">&#123;&#123; obj.id + 1 &#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>为了解决该问题，需要将 id 结构为顶级属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; id &#125; = obj;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 符合预期 —— 2 --&gt;</span></span><br><span class=\"line\">&#123;&#123; id + 1 &#125;&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"4-vue3计算属性","date":"2023-11-07T10:46:36.000Z","_content":"\n## 基础\n\ncomputed() 方法接受一个 getter 函数，返回一个计算属性 ref\n\n因为 ref 会在模板中自动解包，所以在表达式中引用无需 .value\n\n``` html\n<script setup>\nimport { reactive, computed } from 'vue';\n\nconst author = reactive({\n    name: \"Zoella\",\n    books: ['vue2', 'vue3', 'vue4']\n});\n\nconst hasBookPublished = computed(() => {\n    return author.books.length > 0 ? 'yes' : 'no';\n});\n</script>\n\n<template>\n  <div>\n    <span>{{ author.name }}</span> has published books: \n    <span>{{ hasBookPublished }}</span>\n  </div>\n</template>\n```\n\n## 计算属性缓存 VS 方法\n\n``` html\n<p>{{ calculateBooksMessage() }}</p>\n```\n\n``` js\nfunction calculateBooksMessage() {\n  return author.books.length > 0 ? 'yes' : 'no';\n}\n```\n\n计算属性比方法节省性能。\n\n将与上述相同的函数定义为方法，结果和计算属性相同，然而 **计算属性值会基于其响应式依赖被缓存**，只要```author.books```不变，就不会重复执行 getter 函数。但是方法总会在重渲染发生时再次执行函数。\n\n## 可写计算属性\n\n计算属性默认为只读。特殊场景下会用到“可写”的计算属性。\n\n``` html\n<script>\nimport { ref, computed } from 'vue';\n\nconst firstName = ref('John');\nconst lastName = ref('Doe');\n\nconst fullName = computed({\n  // getter\n  get() {\n    return firstName.value + ' ' + lastName.value;\n  },\n  // setter\n  set(newValue) {\n    [firstName.value, lastName.value] = newValue.split('');\n  }\n})\n</script>\n```\n\n当运行 ```fullName.value = 'Zoella Wang'``` 时，setter会被调用，firstName 和 lastName 会随之更新。\n","source":"_posts/4-vue3计算属性.md","raw":"---\ntitle: 4-vue3计算属性\ndate: 2023-11-07 18:46:36\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## 基础\n\ncomputed() 方法接受一个 getter 函数，返回一个计算属性 ref\n\n因为 ref 会在模板中自动解包，所以在表达式中引用无需 .value\n\n``` html\n<script setup>\nimport { reactive, computed } from 'vue';\n\nconst author = reactive({\n    name: \"Zoella\",\n    books: ['vue2', 'vue3', 'vue4']\n});\n\nconst hasBookPublished = computed(() => {\n    return author.books.length > 0 ? 'yes' : 'no';\n});\n</script>\n\n<template>\n  <div>\n    <span>{{ author.name }}</span> has published books: \n    <span>{{ hasBookPublished }}</span>\n  </div>\n</template>\n```\n\n## 计算属性缓存 VS 方法\n\n``` html\n<p>{{ calculateBooksMessage() }}</p>\n```\n\n``` js\nfunction calculateBooksMessage() {\n  return author.books.length > 0 ? 'yes' : 'no';\n}\n```\n\n计算属性比方法节省性能。\n\n将与上述相同的函数定义为方法，结果和计算属性相同，然而 **计算属性值会基于其响应式依赖被缓存**，只要```author.books```不变，就不会重复执行 getter 函数。但是方法总会在重渲染发生时再次执行函数。\n\n## 可写计算属性\n\n计算属性默认为只读。特殊场景下会用到“可写”的计算属性。\n\n``` html\n<script>\nimport { ref, computed } from 'vue';\n\nconst firstName = ref('John');\nconst lastName = ref('Doe');\n\nconst fullName = computed({\n  // getter\n  get() {\n    return firstName.value + ' ' + lastName.value;\n  },\n  // setter\n  set(newValue) {\n    [firstName.value, lastName.value] = newValue.split('');\n  }\n})\n</script>\n```\n\n当运行 ```fullName.value = 'Zoella Wang'``` 时，setter会被调用，firstName 和 lastName 会随之更新。\n","slug":"4-vue3计算属性","published":1,"updated":"2023-11-28T11:01:05.933Z","_id":"cloy7augf0001blw601xvetqn","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><p>computed() 方法接受一个 getter 函数，返回一个计算属性 ref</p>\n<p>因为 ref 会在模板中自动解包，所以在表达式中引用无需 .value</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; reactive, computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> author = <span class=\"title function_\">reactive</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Zoella&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">books</span>: [<span class=\"string\">&#x27;vue2&#x27;</span>, <span class=\"string\">&#x27;vue3&#x27;</span>, <span class=\"string\">&#x27;vue4&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> hasBookPublished = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> author.<span class=\"property\">books</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span> ? <span class=\"string\">&#x27;yes&#x27;</span> : <span class=\"string\">&#x27;no&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; author.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> has published books: </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; hasBookPublished &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"计算属性缓存-VS-方法\"><a href=\"#计算属性缓存-VS-方法\" class=\"headerlink\" title=\"计算属性缓存 VS 方法\"></a>计算属性缓存 VS 方法</h2><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; calculateBooksMessage() &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calculateBooksMessage</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> author.<span class=\"property\">books</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span> ? <span class=\"string\">&#x27;yes&#x27;</span> : <span class=\"string\">&#x27;no&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<p>计算属性比方法节省性能。</p>\n<p>将与上述相同的函数定义为方法，结果和计算属性相同，然而 <strong>计算属性值会基于其响应式依赖被缓存</strong>，只要<code>author.books</code>不变，就不会重复执行 getter 函数。但是方法总会在重渲染发生时再次执行函数。</p>\n<h2 id=\"可写计算属性\"><a href=\"#可写计算属性\" class=\"headerlink\" title=\"可写计算属性\"></a>可写计算属性</h2><p>计算属性默认为只读。特殊场景下会用到“可写”的计算属性。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> firstName = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;John&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> lastName = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;Doe&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> fullName = <span class=\"title function_\">computed</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// getter</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">get</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> firstName.<span class=\"property\">value</span> + <span class=\"string\">&#x27; &#x27;</span> + lastName.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// setter</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">set</span>(<span class=\"params\">newValue</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    [firstName.<span class=\"property\">value</span>, lastName.<span class=\"property\">value</span>] = newValue.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>当运行 <code>fullName.value = &#39;Zoella Wang&#39;</code> 时，setter会被调用，firstName 和 lastName 会随之更新。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><p>computed() 方法接受一个 getter 函数，返回一个计算属性 ref</p>\n<p>因为 ref 会在模板中自动解包，所以在表达式中引用无需 .value</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; reactive, computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> author = <span class=\"title function_\">reactive</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Zoella&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">books</span>: [<span class=\"string\">&#x27;vue2&#x27;</span>, <span class=\"string\">&#x27;vue3&#x27;</span>, <span class=\"string\">&#x27;vue4&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> hasBookPublished = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> author.<span class=\"property\">books</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span> ? <span class=\"string\">&#x27;yes&#x27;</span> : <span class=\"string\">&#x27;no&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; author.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> has published books: </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; hasBookPublished &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"计算属性缓存-VS-方法\"><a href=\"#计算属性缓存-VS-方法\" class=\"headerlink\" title=\"计算属性缓存 VS 方法\"></a>计算属性缓存 VS 方法</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; calculateBooksMessage() &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calculateBooksMessage</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> author.<span class=\"property\">books</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span> ? <span class=\"string\">&#x27;yes&#x27;</span> : <span class=\"string\">&#x27;no&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>计算属性比方法节省性能。</p>\n<p>将与上述相同的函数定义为方法，结果和计算属性相同，然而 <strong>计算属性值会基于其响应式依赖被缓存</strong>，只要<code>author.books</code>不变，就不会重复执行 getter 函数。但是方法总会在重渲染发生时再次执行函数。</p>\n<h2 id=\"可写计算属性\"><a href=\"#可写计算属性\" class=\"headerlink\" title=\"可写计算属性\"></a>可写计算属性</h2><p>计算属性默认为只读。特殊场景下会用到“可写”的计算属性。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> firstName = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;John&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> lastName = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;Doe&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> fullName = <span class=\"title function_\">computed</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// getter</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">get</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> firstName.<span class=\"property\">value</span> + <span class=\"string\">&#x27; &#x27;</span> + lastName.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// setter</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">set</span>(<span class=\"params\">newValue</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    [firstName.<span class=\"property\">value</span>, lastName.<span class=\"property\">value</span>] = newValue.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>当运行 <code>fullName.value = &#39;Zoella Wang&#39;</code> 时，setter会被调用，firstName 和 lastName 会随之更新。</p>\n"},{"title":"5-为什么vue组件添加scoped后某些组件样式不生效","date":"2023-11-14T09:46:52.000Z","_content":"\n## 简述\n\n在父组件中修改子组件的某些样式，发现不生效，删去``<style scoped></style>``中的 scoped 后生效。\n\n## 原因\n\nscoped 实现样式隔离的原理为：\n\n编译时，父组件的所有标签、子组件的根标签、以及所有的样式 都会加上特殊的标识；\n\n因为子组件内部的标签都没有此种标识，所以样式就不会生效。\n\n## 实例\n\n### 不添加 scoped\n\n``` html\n<!-- 父组件 -->\n<template>\n  <div class=\"parent\">\n    <p>Here is parent component</p>\n    <TestScoped />  \n  </div>\n</template>\n<style>\n.parent {\n  color: deepskyblue;\n}\n</style>\n```\n\n``` html\n<!-- 子组件 -->\n<template>\n  <div class=\"son\">\n    <p>Here is son component</p>\n  </div>\n</template>\n```\n\n编译后：\n\n``` html\n<div class=\"parent\">\n    <p>Here is parent component</p>\n    <div class=\"son\">\n        <p>Here is son component</p>\n    </div>\n</div>\n```\n\n``` css\np {\n  color: deepskyblue;\n}\n```\n\n### 添加 scoped\n\n编译后：\n\n``` html\n<div data-v-7ba5bd90 class=\"parent\">\n    <p data-v-7ba5bd90>Here is parent component</p>\n    <div data-v-7ba5bd90 class=\"son\">\n        <!-- 没有标识，所以不生效 -->\n        <p>Here is son component</p>\n    </div>\n</div>\n```\n\n``` css\np[data-v-7ba5bd90] {\n    color: deepskyblue;\n}\n```\n\n## 解决方法\n\n### 深度作用选择器\n\n使用 /deep/ 或者 ::v-deep\n\n``` css\n/deep/ p {\n  color: deepskyblue;\n}\n/* 或者 */\n::v-deep p {\n  color: deepskyblue;\n}\n```\n\n编译后：\n\nhtml 结果不变，样式代码变化\n\n``` css\n[data-v-7ba5bd90] p {\n  color: deepskyblue;\n}\n```\n\n### 使用无 scoped 的 style\n\n``` html\n<style scoped>\np {\n  color: deepskyblue;\n}\n</style>\n\n<style>\n/* 生效样式代码 */\n</style>\n```\n","source":"_posts/5-为什么vue组件添加scoped后某些组件样式不生效.md","raw":"---\ntitle: 5-为什么vue组件添加scoped后某些组件样式不生效\ndate: 2023-11-14 17:46:52\ntags:\n    - vue\ncategories:\n    - vue\n      - 样式\n---\n\n## 简述\n\n在父组件中修改子组件的某些样式，发现不生效，删去``<style scoped></style>``中的 scoped 后生效。\n\n## 原因\n\nscoped 实现样式隔离的原理为：\n\n编译时，父组件的所有标签、子组件的根标签、以及所有的样式 都会加上特殊的标识；\n\n因为子组件内部的标签都没有此种标识，所以样式就不会生效。\n\n## 实例\n\n### 不添加 scoped\n\n``` html\n<!-- 父组件 -->\n<template>\n  <div class=\"parent\">\n    <p>Here is parent component</p>\n    <TestScoped />  \n  </div>\n</template>\n<style>\n.parent {\n  color: deepskyblue;\n}\n</style>\n```\n\n``` html\n<!-- 子组件 -->\n<template>\n  <div class=\"son\">\n    <p>Here is son component</p>\n  </div>\n</template>\n```\n\n编译后：\n\n``` html\n<div class=\"parent\">\n    <p>Here is parent component</p>\n    <div class=\"son\">\n        <p>Here is son component</p>\n    </div>\n</div>\n```\n\n``` css\np {\n  color: deepskyblue;\n}\n```\n\n### 添加 scoped\n\n编译后：\n\n``` html\n<div data-v-7ba5bd90 class=\"parent\">\n    <p data-v-7ba5bd90>Here is parent component</p>\n    <div data-v-7ba5bd90 class=\"son\">\n        <!-- 没有标识，所以不生效 -->\n        <p>Here is son component</p>\n    </div>\n</div>\n```\n\n``` css\np[data-v-7ba5bd90] {\n    color: deepskyblue;\n}\n```\n\n## 解决方法\n\n### 深度作用选择器\n\n使用 /deep/ 或者 ::v-deep\n\n``` css\n/deep/ p {\n  color: deepskyblue;\n}\n/* 或者 */\n::v-deep p {\n  color: deepskyblue;\n}\n```\n\n编译后：\n\nhtml 结果不变，样式代码变化\n\n``` css\n[data-v-7ba5bd90] p {\n  color: deepskyblue;\n}\n```\n\n### 使用无 scoped 的 style\n\n``` html\n<style scoped>\np {\n  color: deepskyblue;\n}\n</style>\n\n<style>\n/* 生效样式代码 */\n</style>\n```\n","slug":"5-为什么vue组件添加scoped后某些组件样式不生效","published":1,"updated":"2023-11-28T11:01:16.997Z","_id":"cloy7augi000dblw60i4q3j4o","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h2><p>在父组件中修改子组件的某些样式，发现不生效，删去<code>&lt;style scoped&gt;&lt;/style&gt;</code>中的 scoped 后生效。</p>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>scoped 实现样式隔离的原理为：</p>\n<p>编译时，父组件的所有标签、子组件的根标签、以及所有的样式 都会加上特殊的标识；</p>\n<p>因为子组件内部的标签都没有此种标识，所以样式就不会生效。</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><h3 id=\"不添加-scoped\"><a href=\"#不添加-scoped\" class=\"headerlink\" title=\"不添加 scoped\"></a>不添加 scoped</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 父组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is parent component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TestScoped</span> /&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.parent</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">color</span>: deepskyblue;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 子组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;son&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is son component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>编译后：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is parent component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;son&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is son component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Css\"><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"添加-scoped\"><a href=\"#添加-scoped\" class=\"headerlink\" title=\"添加 scoped\"></a>添加 scoped</h3><p>编译后：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-v-7ba5bd90</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">data-v-7ba5bd90</span>&gt;</span>Here is parent component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-v-7ba5bd90</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;son&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 没有标识，所以不生效 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is son component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Css\"><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-attr\">[data-v-7ba5bd90]</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><h3 id=\"深度作用选择器\"><a href=\"#深度作用选择器\" class=\"headerlink\" title=\"深度作用选择器\"></a>深度作用选择器</h3><p>使用 &#x2F;deep&#x2F; 或者 ::v-deep</p>\n<div class=\"highlight-container\" data-rel=\"Css\"><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/deep/ <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 或者 */</span></span><br><span class=\"line\">::v-deep p &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<p>编译后：</p>\n<p>html 结果不变，样式代码变化</p>\n<div class=\"highlight-container\" data-rel=\"Css\"><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[data-v-7ba5bd90]</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"使用无-scoped-的-style\"><a href=\"#使用无-scoped-的-style\" class=\"headerlink\" title=\"使用无 scoped 的 style\"></a>使用无 scoped 的 style</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">color</span>: deepskyblue;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"comment\">/* 生效样式代码 */</span></span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h2><p>在父组件中修改子组件的某些样式，发现不生效，删去<code>&lt;style scoped&gt;&lt;/style&gt;</code>中的 scoped 后生效。</p>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>scoped 实现样式隔离的原理为：</p>\n<p>编译时，父组件的所有标签、子组件的根标签、以及所有的样式 都会加上特殊的标识；</p>\n<p>因为子组件内部的标签都没有此种标识，所以样式就不会生效。</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><h3 id=\"不添加-scoped\"><a href=\"#不添加-scoped\" class=\"headerlink\" title=\"不添加 scoped\"></a>不添加 scoped</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 父组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is parent component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TestScoped</span> /&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.parent</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">color</span>: deepskyblue;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 子组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;son&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is son component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>编译后：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is parent component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;son&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is son component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加-scoped\"><a href=\"#添加-scoped\" class=\"headerlink\" title=\"添加 scoped\"></a>添加 scoped</h3><p>编译后：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-v-7ba5bd90</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parent&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">data-v-7ba5bd90</span>&gt;</span>Here is parent component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-v-7ba5bd90</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;son&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 没有标识，所以不生效 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Here is son component<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-attr\">[data-v-7ba5bd90]</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><h3 id=\"深度作用选择器\"><a href=\"#深度作用选择器\" class=\"headerlink\" title=\"深度作用选择器\"></a>深度作用选择器</h3><p>使用 &#x2F;deep&#x2F; 或者 ::v-deep</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/deep/ <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 或者 */</span></span><br><span class=\"line\">::v-deep p &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译后：</p>\n<p>html 结果不变，样式代码变化</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[data-v-7ba5bd90]</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: deepskyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用无-scoped-的-style\"><a href=\"#使用无-scoped-的-style\" class=\"headerlink\" title=\"使用无 scoped 的 style\"></a>使用无 scoped 的 style</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">color</span>: deepskyblue;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"comment\">/* 生效样式代码 */</span></span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"6-vue class与style绑定","date":"2023-11-28T11:03:13.000Z","_content":"\n## 绑定一个返回对象的计算属性\n\n``` js\nconst isActive = ref(true);\nconst error = ref(null);\n\nconst classObject = computed(() => ({\n    active: isActive.value && !error.value,\n    'text-danger': error.value && error.value.type === 'fatal'\n}));\n```\n\n``` html\n<div :class=\"classObject\"></div>\n```\n\n## 子组件继承父组件传入的class\n\n### 有一个根元素的组件\n\n子组件的根元素，在渲染时会添加父组件的 class。\n\n### 有多个根元素的组件\n\n子组件中 ```:class='$attrs.class'``` 的根元素，在渲染时会添加父组件的 class。\n\n``` html\n<!-- 子组件 MyComponent.vue -->\n<p :class=\"$attrs.class\">one root element</p>\n<span>another root element</span>\n```\n\n``` html\n<!-- 父组件 -->\n<MyComponent class=\"fatherClass\"/>\n```\n\n渲染后结果：\n\n``` html\n<p class=\"fatherClass\">one root element</p>\n<span>another root element</span>\n```\n\n## 內联样式\n\n### 绑定对象\n\n``` js\nconst styleObject = reactive({\n    color: \"red\",\n    fontSize: \"13px\"\n});\n```\n\n``` html\n<div :style=\"styleObject\"></div>\n```\n\n### 绑定对象数组\n\n``` html\n<div :style=\"[baseStyle, overriddingStyle]\"></div>\n```\n\n``` js\nconst baseStyle = reactive({\n    color: \"red\",\n    ...\n});\nconst overriddingStyle = reactive({\n    color: \"black\",\n    ...\n});\n```\n","source":"_posts/6-vue class与style绑定.md","raw":"---\ntitle: 6-vue class与style绑定\ndate: 2023-11-28 19:03:13\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue\n      - 样式\n    - vue3\n      - 文档\n---\n\n## 绑定一个返回对象的计算属性\n\n``` js\nconst isActive = ref(true);\nconst error = ref(null);\n\nconst classObject = computed(() => ({\n    active: isActive.value && !error.value,\n    'text-danger': error.value && error.value.type === 'fatal'\n}));\n```\n\n``` html\n<div :class=\"classObject\"></div>\n```\n\n## 子组件继承父组件传入的class\n\n### 有一个根元素的组件\n\n子组件的根元素，在渲染时会添加父组件的 class。\n\n### 有多个根元素的组件\n\n子组件中 ```:class='$attrs.class'``` 的根元素，在渲染时会添加父组件的 class。\n\n``` html\n<!-- 子组件 MyComponent.vue -->\n<p :class=\"$attrs.class\">one root element</p>\n<span>another root element</span>\n```\n\n``` html\n<!-- 父组件 -->\n<MyComponent class=\"fatherClass\"/>\n```\n\n渲染后结果：\n\n``` html\n<p class=\"fatherClass\">one root element</p>\n<span>another root element</span>\n```\n\n## 內联样式\n\n### 绑定对象\n\n``` js\nconst styleObject = reactive({\n    color: \"red\",\n    fontSize: \"13px\"\n});\n```\n\n``` html\n<div :style=\"styleObject\"></div>\n```\n\n### 绑定对象数组\n\n``` html\n<div :style=\"[baseStyle, overriddingStyle]\"></div>\n```\n\n``` js\nconst baseStyle = reactive({\n    color: \"red\",\n    ...\n});\nconst overriddingStyle = reactive({\n    color: \"black\",\n    ...\n});\n```\n","slug":"6-vue class与style绑定","published":1,"updated":"2023-11-29T02:42:40.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpj6vfnn00007uw6eiabhjv2","content":"<h2 id=\"绑定一个返回对象的计算属性\"><a href=\"#绑定一个返回对象的计算属性\" class=\"headerlink\" title=\"绑定一个返回对象的计算属性\"></a>绑定一个返回对象的计算属性</h2><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isActive = <span class=\"title function_\">ref</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> error = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> classObject = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">active</span>: isActive.<span class=\"property\">value</span> &amp;&amp; !error.<span class=\"property\">value</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;text-danger&#x27;</span>: error.<span class=\"property\">value</span> &amp;&amp; error.<span class=\"property\">value</span>.<span class=\"property\">type</span> === <span class=\"string\">&#x27;fatal&#x27;</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;classObject&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"子组件继承父组件传入的class\"><a href=\"#子组件继承父组件传入的class\" class=\"headerlink\" title=\"子组件继承父组件传入的class\"></a>子组件继承父组件传入的class</h2><h3 id=\"有一个根元素的组件\"><a href=\"#有一个根元素的组件\" class=\"headerlink\" title=\"有一个根元素的组件\"></a>有一个根元素的组件</h3><p>子组件的根元素，在渲染时会添加父组件的 class。</p>\n<h3 id=\"有多个根元素的组件\"><a href=\"#有多个根元素的组件\" class=\"headerlink\" title=\"有多个根元素的组件\"></a>有多个根元素的组件</h3><p>子组件中 <code>:class=&#39;$attrs.class&#39;</code> 的根元素，在渲染时会添加父组件的 class。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 子组件 MyComponent.vue --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;$attrs.class&quot;</span>&gt;</span>one root element<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>another root element<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 父组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fatherClass&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>渲染后结果：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fatherClass&quot;</span>&gt;</span>one root element<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>another root element<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"內联样式\"><a href=\"#內联样式\" class=\"headerlink\" title=\"內联样式\"></a>內联样式</h2><h3 id=\"绑定对象\"><a href=\"#绑定对象\" class=\"headerlink\" title=\"绑定对象\"></a>绑定对象</h3><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> styleObject = <span class=\"title function_\">reactive</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"string\">&quot;red&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">fontSize</span>: <span class=\"string\">&quot;13px&quot;</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;styleObject&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"绑定对象数组\"><a href=\"#绑定对象数组\" class=\"headerlink\" title=\"绑定对象数组\"></a>绑定对象数组</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;[baseStyle, overriddingStyle]&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> baseStyle = <span class=\"title function_\">reactive</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"string\">&quot;red&quot;</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> overriddingStyle = <span class=\"title function_\">reactive</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"string\">&quot;black&quot;</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"绑定一个返回对象的计算属性\"><a href=\"#绑定一个返回对象的计算属性\" class=\"headerlink\" title=\"绑定一个返回对象的计算属性\"></a>绑定一个返回对象的计算属性</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isActive = <span class=\"title function_\">ref</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> error = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> classObject = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">active</span>: isActive.<span class=\"property\">value</span> &amp;&amp; !error.<span class=\"property\">value</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;text-danger&#x27;</span>: error.<span class=\"property\">value</span> &amp;&amp; error.<span class=\"property\">value</span>.<span class=\"property\">type</span> === <span class=\"string\">&#x27;fatal&#x27;</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;classObject&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"子组件继承父组件传入的class\"><a href=\"#子组件继承父组件传入的class\" class=\"headerlink\" title=\"子组件继承父组件传入的class\"></a>子组件继承父组件传入的class</h2><h3 id=\"有一个根元素的组件\"><a href=\"#有一个根元素的组件\" class=\"headerlink\" title=\"有一个根元素的组件\"></a>有一个根元素的组件</h3><p>子组件的根元素，在渲染时会添加父组件的 class。</p>\n<h3 id=\"有多个根元素的组件\"><a href=\"#有多个根元素的组件\" class=\"headerlink\" title=\"有多个根元素的组件\"></a>有多个根元素的组件</h3><p>子组件中 <code>:class=&#39;$attrs.class&#39;</code> 的根元素，在渲染时会添加父组件的 class。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 子组件 MyComponent.vue --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;$attrs.class&quot;</span>&gt;</span>one root element<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>another root element<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 父组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fatherClass&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>渲染后结果：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fatherClass&quot;</span>&gt;</span>one root element<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>another root element<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"內联样式\"><a href=\"#內联样式\" class=\"headerlink\" title=\"內联样式\"></a>內联样式</h2><h3 id=\"绑定对象\"><a href=\"#绑定对象\" class=\"headerlink\" title=\"绑定对象\"></a>绑定对象</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> styleObject = <span class=\"title function_\">reactive</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"string\">&quot;red&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">fontSize</span>: <span class=\"string\">&quot;13px&quot;</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;styleObject&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"绑定对象数组\"><a href=\"#绑定对象数组\" class=\"headerlink\" title=\"绑定对象数组\"></a>绑定对象数组</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;[baseStyle, overriddingStyle]&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> baseStyle = <span class=\"title function_\">reactive</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"string\">&quot;red&quot;</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> overriddingStyle = <span class=\"title function_\">reactive</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: <span class=\"string\">&quot;black&quot;</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"7-v-for","date":"2023-11-29T02:41:57.000Z","_content":"\n## 基础\n\n``` html\n<li v-for=\"(item, index) in items\"></li>\n```\n\n可以使用 of 代替 in：\n\n``` html\n<li v-for=\"(item, index) of items\"></li>\n```\n\n支持解构语法：\n\n``` html\n<li v-for=\"{message} in items\">\n    {{ message }}\n</li>\n\n<li v-for=\"({message}, index) in items\">\n    {{ message }}\n</li>\n```\n\n## 遍历对象属性\n\n使用 v-for 遍历对象属性，遍历的顺序和 Object.keys() 返回值的顺序一致\n\n三个参数依次为 索引、属性名、属性值：\n\n``` js\nconst myObject = reactive({\n  title: 'How to do lists in Vue',\n  author: 'Jane Doe',\n  publishedAt: '2016-04-10'\n});\n```\n\n``` html\n<li v-for=\"(index, key, value) in myObject\">\n{{ index }}. {{ key }}: {{ value }}\n</li>\n```\n\n结果为：\n\n``` txt\n0. title: How to do lists in Vue\n1. author: Jane Doe\n2. publishedAt: 2016-04-10\n```\n\n## v-for 与 v-if\n\nv-if 比 v-for 优先级高\n\n错误用法：\n\n``` html\n<!-- 此时 v-if 的 todo 还没有定义 -->\n<li v-for=\"todo in todos\" v-if=\"!todo.isComplete\">\n{{ todo.name }}\n</li>\n```\n\n正确用法：\n\n``` html\n<template v-for=\"todo in todos\">\n   <li v-if=\"!todo.isComplete\">\n   {{ todo.name }}\n   </li>\n</template>\n```\n\n## 通过 key 管理状态\n\nVue 默认按照 “就地更新” 的策略更新通过 v-for 渲染的列表。当数据项的顺序改变时，Vue 不会随之移动 DOM 元素的顺序，而是就地更新每个元素，确保它们在原本指定的索引位置上渲染。\n\n默认模式是高效的，但只适用于 **列表渲染输出的结果不依赖子组件状态或者临时 DOM 状态 (例如表单输入值) 的情况**。\n\n推荐在任何时候为 v-for 提供一个 key attribute，除非所迭代的 DOM 内容非常简单。\n","source":"_posts/7-v-for.md","raw":"---\ntitle: 7-v-for\ndate: 2023-11-29 10:41:57\ntags: \n    - vue\ncategories:\n    - vue\n---\n\n## 基础\n\n``` html\n<li v-for=\"(item, index) in items\"></li>\n```\n\n可以使用 of 代替 in：\n\n``` html\n<li v-for=\"(item, index) of items\"></li>\n```\n\n支持解构语法：\n\n``` html\n<li v-for=\"{message} in items\">\n    {{ message }}\n</li>\n\n<li v-for=\"({message}, index) in items\">\n    {{ message }}\n</li>\n```\n\n## 遍历对象属性\n\n使用 v-for 遍历对象属性，遍历的顺序和 Object.keys() 返回值的顺序一致\n\n三个参数依次为 索引、属性名、属性值：\n\n``` js\nconst myObject = reactive({\n  title: 'How to do lists in Vue',\n  author: 'Jane Doe',\n  publishedAt: '2016-04-10'\n});\n```\n\n``` html\n<li v-for=\"(index, key, value) in myObject\">\n{{ index }}. {{ key }}: {{ value }}\n</li>\n```\n\n结果为：\n\n``` txt\n0. title: How to do lists in Vue\n1. author: Jane Doe\n2. publishedAt: 2016-04-10\n```\n\n## v-for 与 v-if\n\nv-if 比 v-for 优先级高\n\n错误用法：\n\n``` html\n<!-- 此时 v-if 的 todo 还没有定义 -->\n<li v-for=\"todo in todos\" v-if=\"!todo.isComplete\">\n{{ todo.name }}\n</li>\n```\n\n正确用法：\n\n``` html\n<template v-for=\"todo in todos\">\n   <li v-if=\"!todo.isComplete\">\n   {{ todo.name }}\n   </li>\n</template>\n```\n\n## 通过 key 管理状态\n\nVue 默认按照 “就地更新” 的策略更新通过 v-for 渲染的列表。当数据项的顺序改变时，Vue 不会随之移动 DOM 元素的顺序，而是就地更新每个元素，确保它们在原本指定的索引位置上渲染。\n\n默认模式是高效的，但只适用于 **列表渲染输出的结果不依赖子组件状态或者临时 DOM 状态 (例如表单输入值) 的情况**。\n\n推荐在任何时候为 v-for 提供一个 key attribute，除非所迭代的 DOM 内容非常简单。\n","slug":"7-v-for","published":1,"updated":"2023-11-30T10:51:53.756Z","_id":"clpj6vfno00017uw61ro9869t","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) in items&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>可以使用 of 代替 in：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) of items&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>支持解构语法：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;&#123;message&#125; in items&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; message &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(&#123;message&#125;, index) in items&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; message &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"遍历对象属性\"><a href=\"#遍历对象属性\" class=\"headerlink\" title=\"遍历对象属性\"></a>遍历对象属性</h2><p>使用 v-for 遍历对象属性，遍历的顺序和 Object.keys() 返回值的顺序一致</p>\n<p>三个参数依次为 索引、属性名、属性值：</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myObject = <span class=\"title function_\">reactive</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;How to do lists in Vue&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">author</span>: <span class=\"string\">&#x27;Jane Doe&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">publishedAt</span>: <span class=\"string\">&#x27;2016-04-10&#x27;</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(index, key, value) in myObject&quot;</span>&gt;</span></span><br><span class=\"line\">&#123;&#123; index &#125;&#125;. &#123;&#123; key &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>结果为：</p>\n<div class=\"highlight-container\" data-rel=\"Txt\"><figure class=\"iseeu highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0. title: How to do lists in Vue</span><br><span class=\"line\">1. author: Jane Doe</span><br><span class=\"line\">2. publishedAt: 2016-04-10</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"v-for-与-v-if\"><a href=\"#v-for-与-v-if\" class=\"headerlink\" title=\"v-for 与 v-if\"></a>v-for 与 v-if</h2><p>v-if 比 v-for 优先级高</p>\n<p>错误用法：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 此时 v-if 的 todo 还没有定义 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;todo in todos&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!todo.isComplete&quot;</span>&gt;</span></span><br><span class=\"line\">&#123;&#123; todo.name &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>正确用法：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;todo in todos&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!todo.isComplete&quot;</span>&gt;</span></span><br><span class=\"line\">   &#123;&#123; todo.name &#125;&#125;</span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"通过-key-管理状态\"><a href=\"#通过-key-管理状态\" class=\"headerlink\" title=\"通过 key 管理状态\"></a>通过 key 管理状态</h2><p>Vue 默认按照 “就地更新” 的策略更新通过 v-for 渲染的列表。当数据项的顺序改变时，Vue 不会随之移动 DOM 元素的顺序，而是就地更新每个元素，确保它们在原本指定的索引位置上渲染。</p>\n<p>默认模式是高效的，但只适用于 <strong>列表渲染输出的结果不依赖子组件状态或者临时 DOM 状态 (例如表单输入值) 的情况</strong>。</p>\n<p>推荐在任何时候为 v-for 提供一个 key attribute，除非所迭代的 DOM 内容非常简单。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) in items&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以使用 of 代替 in：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(item, index) of items&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>支持解构语法：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;&#123;message&#125; in items&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; message &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(&#123;message&#125;, index) in items&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; message &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"遍历对象属性\"><a href=\"#遍历对象属性\" class=\"headerlink\" title=\"遍历对象属性\"></a>遍历对象属性</h2><p>使用 v-for 遍历对象属性，遍历的顺序和 Object.keys() 返回值的顺序一致</p>\n<p>三个参数依次为 索引、属性名、属性值：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myObject = <span class=\"title function_\">reactive</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">title</span>: <span class=\"string\">&#x27;How to do lists in Vue&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">author</span>: <span class=\"string\">&#x27;Jane Doe&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">publishedAt</span>: <span class=\"string\">&#x27;2016-04-10&#x27;</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(index, key, value) in myObject&quot;</span>&gt;</span></span><br><span class=\"line\">&#123;&#123; index &#125;&#125;. &#123;&#123; key &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>结果为：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0. title: How to do lists in Vue</span><br><span class=\"line\">1. author: Jane Doe</span><br><span class=\"line\">2. publishedAt: 2016-04-10</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-for-与-v-if\"><a href=\"#v-for-与-v-if\" class=\"headerlink\" title=\"v-for 与 v-if\"></a>v-for 与 v-if</h2><p>v-if 比 v-for 优先级高</p>\n<p>错误用法：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 此时 v-if 的 todo 还没有定义 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;todo in todos&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!todo.isComplete&quot;</span>&gt;</span></span><br><span class=\"line\">&#123;&#123; todo.name &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>正确用法：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;todo in todos&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!todo.isComplete&quot;</span>&gt;</span></span><br><span class=\"line\">   &#123;&#123; todo.name &#125;&#125;</span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"通过-key-管理状态\"><a href=\"#通过-key-管理状态\" class=\"headerlink\" title=\"通过 key 管理状态\"></a>通过 key 管理状态</h2><p>Vue 默认按照 “就地更新” 的策略更新通过 v-for 渲染的列表。当数据项的顺序改变时，Vue 不会随之移动 DOM 元素的顺序，而是就地更新每个元素，确保它们在原本指定的索引位置上渲染。</p>\n<p>默认模式是高效的，但只适用于 <strong>列表渲染输出的结果不依赖子组件状态或者临时 DOM 状态 (例如表单输入值) 的情况</strong>。</p>\n<p>推荐在任何时候为 v-for 提供一个 key attribute，除非所迭代的 DOM 内容非常简单。</p>\n"},{"title":"8-js事件","date":"2023-11-29T09:38:02.000Z","_content":"\n事件捕获和事件冒泡 是浏览器处理DOM元素事件的两种方式（顺序：先捕获，再冒泡）。\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>\n      <div>click me</div>\n  </body>\n</html>\n```\n\n## 事件捕获\n\n事件捕获从文档根节点开始，逐级向下传播到目标元素。\n\n点击 div，事件传播方向：document -> html -> body -> div\n\n## 事件冒泡\n\n事件冒泡指当目标元素触发了某事件时，事件会从该元素开始逐级向上传播，直到文档根节点。\n\n点击 div，事件传播方向：div -> body -> html -> document\n\n## 事件模型\n\n### DOM0 事件模型\n\nDOM0 只在冒泡阶段处理事件处理程序。\n\n``` html\n<div onclick=\"handleClick\">click</div>\n<script>\n  function handleClick() {\n    alert('clicked');\n  }\n</script>\n```\n\n### DOM2 事件模型\n\nDOM2 在捕获阶段和冒泡阶段都可以处理事件处理程序（更灵活可控）。\n\n使用：addEventListener() 和 removeEventListener()\n\n``` html\n<div id=\"myBtn\">click</div>\n<script>\n  function handleClick() {\n    alert('clicked');\n  }\n  const btn = document.getElementById('myBtn');\n  btn.addEventListener('click', handleClick);\n</script>\n```\n\n### IE 事件模型\n\n功能类似于 DOM0，使用方式上类似于 DOM2。\n\n使用 attachEvent() 和 detachEvent() 方法。\n\n``` html\n<div id=\"myBtn\">click</div>\n<script>\n  function handleClick() {\n    alert('clicked');\n  }\n  const btn = document.getElementById('myBtn');\n  btn.attachEvent('click', handleClick);\n</script>\n```\n\n## js 实现事件修饰符\n\n### 阻止默认行为 preventDefault\n\n比如阻止链接的跳转或表单的提交\n\n``` js\ndocument.getElementById('btn').addEventListener('click', (event) => {\n  event.preventDefault();\n});\n```\n\n### 阻止事件冒泡 stopPropagation()\n\n阻止事件传到父元素\n\n``` js\ndocument.getElementById('btn').addEventListener('click', (event) => {\n  event.stopPropagation();\n});\n```\n\n### 一次性事件处理\n\n``` js\nfunction handleClick(event) {\n  this.removeEventListener('click', handleClick); // 点击一次移除监听器\n}\ndocument.getElementById('btn').addEventListener('click', handleClick);\n```\n\n### 获取键盘按键\n\n``` js\ndocument.addEventListener('keydown', (event) => {\n  console.log(event.key);\n});\n```\n\n### 获取鼠标按键\n\n``` js\ndocument.addEventListener('mousedown', (event) => {\n  console.log(event.key);\n});\n```\n","source":"_posts/8-js事件.md","raw":"---\ntitle: 8-js事件\ndate: 2023-11-29 17:38:02\ntags:\n    - JavaScript\ncategories:\n    - JavaScript\n      - 事件\n---\n\n事件捕获和事件冒泡 是浏览器处理DOM元素事件的两种方式（顺序：先捕获，再冒泡）。\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>\n      <div>click me</div>\n  </body>\n</html>\n```\n\n## 事件捕获\n\n事件捕获从文档根节点开始，逐级向下传播到目标元素。\n\n点击 div，事件传播方向：document -> html -> body -> div\n\n## 事件冒泡\n\n事件冒泡指当目标元素触发了某事件时，事件会从该元素开始逐级向上传播，直到文档根节点。\n\n点击 div，事件传播方向：div -> body -> html -> document\n\n## 事件模型\n\n### DOM0 事件模型\n\nDOM0 只在冒泡阶段处理事件处理程序。\n\n``` html\n<div onclick=\"handleClick\">click</div>\n<script>\n  function handleClick() {\n    alert('clicked');\n  }\n</script>\n```\n\n### DOM2 事件模型\n\nDOM2 在捕获阶段和冒泡阶段都可以处理事件处理程序（更灵活可控）。\n\n使用：addEventListener() 和 removeEventListener()\n\n``` html\n<div id=\"myBtn\">click</div>\n<script>\n  function handleClick() {\n    alert('clicked');\n  }\n  const btn = document.getElementById('myBtn');\n  btn.addEventListener('click', handleClick);\n</script>\n```\n\n### IE 事件模型\n\n功能类似于 DOM0，使用方式上类似于 DOM2。\n\n使用 attachEvent() 和 detachEvent() 方法。\n\n``` html\n<div id=\"myBtn\">click</div>\n<script>\n  function handleClick() {\n    alert('clicked');\n  }\n  const btn = document.getElementById('myBtn');\n  btn.attachEvent('click', handleClick);\n</script>\n```\n\n## js 实现事件修饰符\n\n### 阻止默认行为 preventDefault\n\n比如阻止链接的跳转或表单的提交\n\n``` js\ndocument.getElementById('btn').addEventListener('click', (event) => {\n  event.preventDefault();\n});\n```\n\n### 阻止事件冒泡 stopPropagation()\n\n阻止事件传到父元素\n\n``` js\ndocument.getElementById('btn').addEventListener('click', (event) => {\n  event.stopPropagation();\n});\n```\n\n### 一次性事件处理\n\n``` js\nfunction handleClick(event) {\n  this.removeEventListener('click', handleClick); // 点击一次移除监听器\n}\ndocument.getElementById('btn').addEventListener('click', handleClick);\n```\n\n### 获取键盘按键\n\n``` js\ndocument.addEventListener('keydown', (event) => {\n  console.log(event.key);\n});\n```\n\n### 获取鼠标按键\n\n``` js\ndocument.addEventListener('mousedown', (event) => {\n  console.log(event.key);\n});\n```\n","slug":"8-js事件","published":1,"updated":"2023-11-30T10:49:30.830Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpl36b6u000059w6aufu8ufh","content":"<p>事件捕获和事件冒泡 是浏览器处理DOM元素事件的两种方式（顺序：先捕获，再冒泡）。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>click me<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"事件捕获\"><a href=\"#事件捕获\" class=\"headerlink\" title=\"事件捕获\"></a>事件捕获</h2><p>事件捕获从文档根节点开始，逐级向下传播到目标元素。</p>\n<p>点击 div，事件传播方向：document -&gt; html -&gt; body -&gt; div</p>\n<h2 id=\"事件冒泡\"><a href=\"#事件冒泡\" class=\"headerlink\" title=\"事件冒泡\"></a>事件冒泡</h2><p>事件冒泡指当目标元素触发了某事件时，事件会从该元素开始逐级向上传播，直到文档根节点。</p>\n<p>点击 div，事件传播方向：div -&gt; body -&gt; html -&gt; document</p>\n<h2 id=\"事件模型\"><a href=\"#事件模型\" class=\"headerlink\" title=\"事件模型\"></a>事件模型</h2><h3 id=\"DOM0-事件模型\"><a href=\"#DOM0-事件模型\" class=\"headerlink\" title=\"DOM0 事件模型\"></a>DOM0 事件模型</h3><p>DOM0 只在冒泡阶段处理事件处理程序。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;handleClick&quot;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"DOM2-事件模型\"><a href=\"#DOM2-事件模型\" class=\"headerlink\" title=\"DOM2 事件模型\"></a>DOM2 事件模型</h3><p>DOM2 在捕获阶段和冒泡阶段都可以处理事件处理程序（更灵活可控）。</p>\n<p>使用：addEventListener() 和 removeEventListener()</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myBtn&quot;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;myBtn&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  btn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, handleClick);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"IE-事件模型\"><a href=\"#IE-事件模型\" class=\"headerlink\" title=\"IE 事件模型\"></a>IE 事件模型</h3><p>功能类似于 DOM0，使用方式上类似于 DOM2。</p>\n<p>使用 attachEvent() 和 detachEvent() 方法。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myBtn&quot;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;myBtn&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  btn.<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;click&#x27;</span>, handleClick);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"js-实现事件修饰符\"><a href=\"#js-实现事件修饰符\" class=\"headerlink\" title=\"js 实现事件修饰符\"></a>js 实现事件修饰符</h2><h3 id=\"阻止默认行为-preventDefault\"><a href=\"#阻止默认行为-preventDefault\" class=\"headerlink\" title=\"阻止默认行为 preventDefault\"></a>阻止默认行为 preventDefault</h3><p>比如阻止链接的跳转或表单的提交</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"阻止事件冒泡-stopPropagation\"><a href=\"#阻止事件冒泡-stopPropagation\" class=\"headerlink\" title=\"阻止事件冒泡 stopPropagation()\"></a>阻止事件冒泡 stopPropagation()</h3><p>阻止事件传到父元素</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">stopPropagation</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"一次性事件处理\"><a href=\"#一次性事件处理\" class=\"headerlink\" title=\"一次性事件处理\"></a>一次性事件处理</h3><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, handleClick); <span class=\"comment\">// 点击一次移除监听器</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, handleClick);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"获取键盘按键\"><a href=\"#获取键盘按键\" class=\"headerlink\" title=\"获取键盘按键\"></a>获取键盘按键</h3><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keydown&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">key</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"获取鼠标按键\"><a href=\"#获取鼠标按键\" class=\"headerlink\" title=\"获取鼠标按键\"></a>获取鼠标按键</h3><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousedown&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">key</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<p>事件捕获和事件冒泡 是浏览器处理DOM元素事件的两种方式（顺序：先捕获，再冒泡）。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>click me<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"事件捕获\"><a href=\"#事件捕获\" class=\"headerlink\" title=\"事件捕获\"></a>事件捕获</h2><p>事件捕获从文档根节点开始，逐级向下传播到目标元素。</p>\n<p>点击 div，事件传播方向：document -&gt; html -&gt; body -&gt; div</p>\n<h2 id=\"事件冒泡\"><a href=\"#事件冒泡\" class=\"headerlink\" title=\"事件冒泡\"></a>事件冒泡</h2><p>事件冒泡指当目标元素触发了某事件时，事件会从该元素开始逐级向上传播，直到文档根节点。</p>\n<p>点击 div，事件传播方向：div -&gt; body -&gt; html -&gt; document</p>\n<h2 id=\"事件模型\"><a href=\"#事件模型\" class=\"headerlink\" title=\"事件模型\"></a>事件模型</h2><h3 id=\"DOM0-事件模型\"><a href=\"#DOM0-事件模型\" class=\"headerlink\" title=\"DOM0 事件模型\"></a>DOM0 事件模型</h3><p>DOM0 只在冒泡阶段处理事件处理程序。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;handleClick&quot;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DOM2-事件模型\"><a href=\"#DOM2-事件模型\" class=\"headerlink\" title=\"DOM2 事件模型\"></a>DOM2 事件模型</h3><p>DOM2 在捕获阶段和冒泡阶段都可以处理事件处理程序（更灵活可控）。</p>\n<p>使用：addEventListener() 和 removeEventListener()</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myBtn&quot;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;myBtn&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  btn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, handleClick);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"IE-事件模型\"><a href=\"#IE-事件模型\" class=\"headerlink\" title=\"IE 事件模型\"></a>IE 事件模型</h3><p>功能类似于 DOM0，使用方式上类似于 DOM2。</p>\n<p>使用 attachEvent() 和 detachEvent() 方法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myBtn&quot;</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;myBtn&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  btn.<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;click&#x27;</span>, handleClick);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"js-实现事件修饰符\"><a href=\"#js-实现事件修饰符\" class=\"headerlink\" title=\"js 实现事件修饰符\"></a>js 实现事件修饰符</h2><h3 id=\"阻止默认行为-preventDefault\"><a href=\"#阻止默认行为-preventDefault\" class=\"headerlink\" title=\"阻止默认行为 preventDefault\"></a>阻止默认行为 preventDefault</h3><p>比如阻止链接的跳转或表单的提交</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"阻止事件冒泡-stopPropagation\"><a href=\"#阻止事件冒泡-stopPropagation\" class=\"headerlink\" title=\"阻止事件冒泡 stopPropagation()\"></a>阻止事件冒泡 stopPropagation()</h3><p>阻止事件传到父元素</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">stopPropagation</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"一次性事件处理\"><a href=\"#一次性事件处理\" class=\"headerlink\" title=\"一次性事件处理\"></a>一次性事件处理</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">handleClick</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, handleClick); <span class=\"comment\">// 点击一次移除监听器</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, handleClick);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取键盘按键\"><a href=\"#获取键盘按键\" class=\"headerlink\" title=\"获取键盘按键\"></a>获取键盘按键</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keydown&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">key</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取鼠标按键\"><a href=\"#获取鼠标按键\" class=\"headerlink\" title=\"获取鼠标按键\"></a>获取鼠标按键</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousedown&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(event.<span class=\"property\">key</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"9-vue事件处理","date":"2023-11-30T10:50:13.000Z","_content":"\nv-on:click=\"\" 缩写为 @click\n\n## 在內联事件处理器中访问事件参数\n\n在內联事件中访问原生 DOM 事件：\n\n### 向处理器中传入一个 $event 变量\n\n``` html\n<button @click=\"warn('message1', $event)\">\nSubmit\n</button>\n```\n\n### 使用内联箭头函数\n\n``` html\n<button @click=\"(event) => warn('message1', event)\">\nSubmit\n</button>\n```\n\n``` js\nfunction warn(message, event) {\n  // 在此处可以访问原生事件\n  if (event) {\n    event.preventDefault()\n  }\n  alert(message)\n}\n```\n\n## 事件修饰符\n\n- stop：调用 event.stopPropagation()，阻止事件继续传播。\n- prevent：调用 event.preventDefault()，阻止事件的默认行为。\n- self：只当事件是从原始目标元素本身触发时触发回调，如果事件是从内部元素冒泡上来的则不触发。\n- capture：添加事件监听器时使用 capture 模式，即在捕获阶段触发而不是冒泡阶段。\n- once：只触发一次事件，之后移除该监听器。\n- passive：提升页面滚动性能，告诉浏览器事件处理函数不会调用 event.preventDefault()。\n\n### （1）.stop\n\n``` html\n<div @click.stop=\"handleOuterClick\">\n  <button @click=\"handleInnerClick\">内部按钮</button>\n</div>\n```\n\n当内部按钮被点击时，handleOuterClick 不会被触发，因为事件不会继续向外部元素传播。\n\n### （2）.prevent\n\n``` html\n<form @submit.prevent=\"handleSubmit\">\n  <button type=\"submit\">提交</button>\n</form>\n```\n\nhandleSubmit 方法中的 event.preventDefault() 将会被调用，从而阻止表单的默认提交行为。\n\n### （3）.self\n\n``` html\n<div @click.self=\"handleClick\">只有当点击该div本身时触发</div>\n```\n\n只有当点击该 div 元素本身时，handleClick 方法才会被触发；div 内部其他元素冒泡上来的事件不会触发。\n\n### （4）.once\n\n``` html\n<button @click.once=\"handleClick\">点击我，只触发一次</button>\n```\n\n当按钮被点击后，handleClick 方法只会被触发一次，之后该事件监听器会被移除。\n\n### （5）.capture\n\n``` html\n<div @click.capture=\"handleCaptureClick\">捕获阶段触发</div>\n```\n\n事件监听器将在捕获阶段（从外向内）触发，而不是在冒泡阶段触发。\n\n### （6）.passive\n\n``` html\n<div @touchstart.passive=\"handleTouchStart\">优化页面滚动性能</div>\n```\n\n告诉浏览器 handleTouchStart 方法不会调用 event.preventDefault()，从而有助于提升页面滚动的性能。\n\n## 按键修饰符\n\n```@keyup.enter``` 中的 .enter 就是按键修饰符。\n\n### 常规按键\n\n- enter\n- tab\n- delete (捕获“Delete”和“Backspace”两个按键)\n- esc\n- space\n- up\n- down\n- left\n- right\n\n### 系统按键\n\n系统按键和常规按键不同的是，与 keyup 一起使用时，只有当系统按键被 **按下** 并松开其他键才会触发。\n\n- ctrl\n- alt\n- shift\n- meta\n\n举例：\n\n``` html\n<!-- 常规按键 -->\n<!-- 当 Alt + Enter 抬起时，触发 submit 事件 -->\n<input @keyup.alt.enter=\"submit\" />\n\n<!-- 系统按键 -->\n<!-- 当 按下 ctrl 时触发 -->\n<div @click.ctrl=\"doSth\">A</div>\n<!-- 当 按住 ctrl + 抬起其他键 时触发 -->\n<div @keyup.ctrl=\"doSth\">A</div>\n```\n\n### .exact 修饰符\n\n.exact 用于确定触发事件的确定组合。\n\n举例：\n\n``` html\n<!-- 当抬起 Ctrl 时，即使同时抬起其他系统按键也会触发 -->\n<button @keyup.ctrl=\"doSth\">A</button>\n\n<!-- 仅当抬起 Ctrl 且未抬起任何其他键时才会触发 -->\n<button @keyup.ctrl.exact=\"doSth\">A</button>\n\n<!-- 仅当没有抬起任何系统按键时触发 -->\n<button @keyup.exact=\"doSth\">A</button>\n```\n","source":"_posts/9-vue事件处理.md","raw":"---\ntitle: 9-vue事件处理\ndate: 2023-11-30 18:50:13\ntags: \n    - vue\ncategories:\n    - vue\n---\n\nv-on:click=\"\" 缩写为 @click\n\n## 在內联事件处理器中访问事件参数\n\n在內联事件中访问原生 DOM 事件：\n\n### 向处理器中传入一个 $event 变量\n\n``` html\n<button @click=\"warn('message1', $event)\">\nSubmit\n</button>\n```\n\n### 使用内联箭头函数\n\n``` html\n<button @click=\"(event) => warn('message1', event)\">\nSubmit\n</button>\n```\n\n``` js\nfunction warn(message, event) {\n  // 在此处可以访问原生事件\n  if (event) {\n    event.preventDefault()\n  }\n  alert(message)\n}\n```\n\n## 事件修饰符\n\n- stop：调用 event.stopPropagation()，阻止事件继续传播。\n- prevent：调用 event.preventDefault()，阻止事件的默认行为。\n- self：只当事件是从原始目标元素本身触发时触发回调，如果事件是从内部元素冒泡上来的则不触发。\n- capture：添加事件监听器时使用 capture 模式，即在捕获阶段触发而不是冒泡阶段。\n- once：只触发一次事件，之后移除该监听器。\n- passive：提升页面滚动性能，告诉浏览器事件处理函数不会调用 event.preventDefault()。\n\n### （1）.stop\n\n``` html\n<div @click.stop=\"handleOuterClick\">\n  <button @click=\"handleInnerClick\">内部按钮</button>\n</div>\n```\n\n当内部按钮被点击时，handleOuterClick 不会被触发，因为事件不会继续向外部元素传播。\n\n### （2）.prevent\n\n``` html\n<form @submit.prevent=\"handleSubmit\">\n  <button type=\"submit\">提交</button>\n</form>\n```\n\nhandleSubmit 方法中的 event.preventDefault() 将会被调用，从而阻止表单的默认提交行为。\n\n### （3）.self\n\n``` html\n<div @click.self=\"handleClick\">只有当点击该div本身时触发</div>\n```\n\n只有当点击该 div 元素本身时，handleClick 方法才会被触发；div 内部其他元素冒泡上来的事件不会触发。\n\n### （4）.once\n\n``` html\n<button @click.once=\"handleClick\">点击我，只触发一次</button>\n```\n\n当按钮被点击后，handleClick 方法只会被触发一次，之后该事件监听器会被移除。\n\n### （5）.capture\n\n``` html\n<div @click.capture=\"handleCaptureClick\">捕获阶段触发</div>\n```\n\n事件监听器将在捕获阶段（从外向内）触发，而不是在冒泡阶段触发。\n\n### （6）.passive\n\n``` html\n<div @touchstart.passive=\"handleTouchStart\">优化页面滚动性能</div>\n```\n\n告诉浏览器 handleTouchStart 方法不会调用 event.preventDefault()，从而有助于提升页面滚动的性能。\n\n## 按键修饰符\n\n```@keyup.enter``` 中的 .enter 就是按键修饰符。\n\n### 常规按键\n\n- enter\n- tab\n- delete (捕获“Delete”和“Backspace”两个按键)\n- esc\n- space\n- up\n- down\n- left\n- right\n\n### 系统按键\n\n系统按键和常规按键不同的是，与 keyup 一起使用时，只有当系统按键被 **按下** 并松开其他键才会触发。\n\n- ctrl\n- alt\n- shift\n- meta\n\n举例：\n\n``` html\n<!-- 常规按键 -->\n<!-- 当 Alt + Enter 抬起时，触发 submit 事件 -->\n<input @keyup.alt.enter=\"submit\" />\n\n<!-- 系统按键 -->\n<!-- 当 按下 ctrl 时触发 -->\n<div @click.ctrl=\"doSth\">A</div>\n<!-- 当 按住 ctrl + 抬起其他键 时触发 -->\n<div @keyup.ctrl=\"doSth\">A</div>\n```\n\n### .exact 修饰符\n\n.exact 用于确定触发事件的确定组合。\n\n举例：\n\n``` html\n<!-- 当抬起 Ctrl 时，即使同时抬起其他系统按键也会触发 -->\n<button @keyup.ctrl=\"doSth\">A</button>\n\n<!-- 仅当抬起 Ctrl 且未抬起任何其他键时才会触发 -->\n<button @keyup.ctrl.exact=\"doSth\">A</button>\n\n<!-- 仅当没有抬起任何系统按键时触发 -->\n<button @keyup.exact=\"doSth\">A</button>\n```\n","slug":"9-vue事件处理","published":1,"updated":"2023-12-01T03:26:41.490Z","_id":"clpl36b6x000359w69m8dg8y3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>v-on:click&#x3D;”” 缩写为 @click</p>\n<h2 id=\"在內联事件处理器中访问事件参数\"><a href=\"#在內联事件处理器中访问事件参数\" class=\"headerlink\" title=\"在內联事件处理器中访问事件参数\"></a>在內联事件处理器中访问事件参数</h2><p>在內联事件中访问原生 DOM 事件：</p>\n<h3 id=\"向处理器中传入一个-event-变量\"><a href=\"#向处理器中传入一个-event-变量\" class=\"headerlink\" title=\"向处理器中传入一个 $event 变量\"></a>向处理器中传入一个 $event 变量</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;warn(&#x27;message1&#x27;, $event)&quot;</span>&gt;</span></span><br><span class=\"line\">Submit</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"使用内联箭头函数\"><a href=\"#使用内联箭头函数\" class=\"headerlink\" title=\"使用内联箭头函数\"></a>使用内联箭头函数</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;(event) =&gt; warn(&#x27;message1&#x27;, event)&quot;</span>&gt;</span></span><br><span class=\"line\">Submit</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">warn</span>(<span class=\"params\">message, event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在此处可以访问原生事件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (event) &#123;</span><br><span class=\"line\">    event.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(message)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"事件修饰符\"><a href=\"#事件修饰符\" class=\"headerlink\" title=\"事件修饰符\"></a>事件修饰符</h2><ul>\n<li>stop：调用 event.stopPropagation()，阻止事件继续传播。</li>\n<li>prevent：调用 event.preventDefault()，阻止事件的默认行为。</li>\n<li>self：只当事件是从原始目标元素本身触发时触发回调，如果事件是从内部元素冒泡上来的则不触发。</li>\n<li>capture：添加事件监听器时使用 capture 模式，即在捕获阶段触发而不是冒泡阶段。</li>\n<li>once：只触发一次事件，之后移除该监听器。</li>\n<li>passive：提升页面滚动性能，告诉浏览器事件处理函数不会调用 event.preventDefault()。</li>\n</ul>\n<h3 id=\"（1）-stop\"><a href=\"#（1）-stop\" class=\"headerlink\" title=\"（1）.stop\"></a>（1）.stop</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">&quot;handleOuterClick&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleInnerClick&quot;</span>&gt;</span>内部按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>当内部按钮被点击时，handleOuterClick 不会被触发，因为事件不会继续向外部元素传播。</p>\n<h3 id=\"（2）-prevent\"><a href=\"#（2）-prevent\" class=\"headerlink\" title=\"（2）.prevent\"></a>（2）.prevent</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">&quot;handleSubmit&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>handleSubmit 方法中的 event.preventDefault() 将会被调用，从而阻止表单的默认提交行为。</p>\n<h3 id=\"（3）-self\"><a href=\"#（3）-self\" class=\"headerlink\" title=\"（3）.self\"></a>（3）.self</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click.self</span>=<span class=\"string\">&quot;handleClick&quot;</span>&gt;</span>只有当点击该div本身时触发<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>只有当点击该 div 元素本身时，handleClick 方法才会被触发；div 内部其他元素冒泡上来的事件不会触发。</p>\n<h3 id=\"（4）-once\"><a href=\"#（4）-once\" class=\"headerlink\" title=\"（4）.once\"></a>（4）.once</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.once</span>=<span class=\"string\">&quot;handleClick&quot;</span>&gt;</span>点击我，只触发一次<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>当按钮被点击后，handleClick 方法只会被触发一次，之后该事件监听器会被移除。</p>\n<h3 id=\"（5）-capture\"><a href=\"#（5）-capture\" class=\"headerlink\" title=\"（5）.capture\"></a>（5）.capture</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click.capture</span>=<span class=\"string\">&quot;handleCaptureClick&quot;</span>&gt;</span>捕获阶段触发<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>事件监听器将在捕获阶段（从外向内）触发，而不是在冒泡阶段触发。</p>\n<h3 id=\"（6）-passive\"><a href=\"#（6）-passive\" class=\"headerlink\" title=\"（6）.passive\"></a>（6）.passive</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">touchstart.passive</span>=<span class=\"string\">&quot;handleTouchStart&quot;</span>&gt;</span>优化页面滚动性能<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>告诉浏览器 handleTouchStart 方法不会调用 event.preventDefault()，从而有助于提升页面滚动的性能。</p>\n<h2 id=\"按键修饰符\"><a href=\"#按键修饰符\" class=\"headerlink\" title=\"按键修饰符\"></a>按键修饰符</h2><div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><figcaption><span>中的 .enter 就是按键修饰符。</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 常规按键</span><br><span class=\"line\"></span><br><span class=\"line\">- enter</span><br><span class=\"line\">- tab</span><br><span class=\"line\">- delete (捕获“Delete”和“Backspace”两个按键)</span><br><span class=\"line\">- esc</span><br><span class=\"line\">- space</span><br><span class=\"line\">- up</span><br><span class=\"line\">- down</span><br><span class=\"line\">- left</span><br><span class=\"line\">- right</span><br><span class=\"line\"></span><br><span class=\"line\">### 系统按键</span><br><span class=\"line\"></span><br><span class=\"line\">系统按键和常规按键不同的是，与 keyup 一起使用时，只有当系统按键被 **按下** 并松开其他键才会触发。</span><br><span class=\"line\"></span><br><span class=\"line\">- ctrl</span><br><span class=\"line\">- alt</span><br><span class=\"line\">- shift</span><br><span class=\"line\">- meta</span><br><span class=\"line\"></span><br><span class=\"line\">举例：</span><br><span class=\"line\"></span><br><span class=\"line\">``` html</span><br><span class=\"line\">&lt;!-- 常规按键 --&gt;</span><br><span class=\"line\">&lt;!-- 当 Alt + Enter 抬起时，触发 submit 事件 --&gt;</span><br><span class=\"line\">&lt;input @keyup.alt.enter=&quot;submit&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 系统按键 --&gt;</span><br><span class=\"line\">&lt;!-- 当 按下 ctrl 时触发 --&gt;</span><br><span class=\"line\">&lt;div @click.ctrl=&quot;doSth&quot;&gt;A&lt;/div&gt;</span><br><span class=\"line\">&lt;!-- 当 按住 ctrl + 抬起其他键 时触发 --&gt;</span><br><span class=\"line\">&lt;div @keyup.ctrl=&quot;doSth&quot;&gt;A&lt;/div&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"exact-修饰符\"><a href=\"#exact-修饰符\" class=\"headerlink\" title=\".exact 修饰符\"></a>.exact 修饰符</h3><p>.exact 用于确定触发事件的确定组合。</p>\n<p>举例：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 当抬起 Ctrl 时，即使同时抬起其他系统按键也会触发 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">keyup.ctrl</span>=<span class=\"string\">&quot;doSth&quot;</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 仅当抬起 Ctrl 且未抬起任何其他键时才会触发 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">keyup.ctrl.exact</span>=<span class=\"string\">&quot;doSth&quot;</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 仅当没有抬起任何系统按键时触发 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">keyup.exact</span>=<span class=\"string\">&quot;doSth&quot;</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<p>v-on:click&#x3D;”” 缩写为 @click</p>\n<h2 id=\"在內联事件处理器中访问事件参数\"><a href=\"#在內联事件处理器中访问事件参数\" class=\"headerlink\" title=\"在內联事件处理器中访问事件参数\"></a>在內联事件处理器中访问事件参数</h2><p>在內联事件中访问原生 DOM 事件：</p>\n<h3 id=\"向处理器中传入一个-event-变量\"><a href=\"#向处理器中传入一个-event-变量\" class=\"headerlink\" title=\"向处理器中传入一个 $event 变量\"></a>向处理器中传入一个 $event 变量</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;warn(&#x27;message1&#x27;, $event)&quot;</span>&gt;</span></span><br><span class=\"line\">Submit</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用内联箭头函数\"><a href=\"#使用内联箭头函数\" class=\"headerlink\" title=\"使用内联箭头函数\"></a>使用内联箭头函数</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;(event) =&gt; warn(&#x27;message1&#x27;, event)&quot;</span>&gt;</span></span><br><span class=\"line\">Submit</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">warn</span>(<span class=\"params\">message, event</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在此处可以访问原生事件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (event) &#123;</span><br><span class=\"line\">    event.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(message)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"事件修饰符\"><a href=\"#事件修饰符\" class=\"headerlink\" title=\"事件修饰符\"></a>事件修饰符</h2><ul>\n<li>stop：调用 event.stopPropagation()，阻止事件继续传播。</li>\n<li>prevent：调用 event.preventDefault()，阻止事件的默认行为。</li>\n<li>self：只当事件是从原始目标元素本身触发时触发回调，如果事件是从内部元素冒泡上来的则不触发。</li>\n<li>capture：添加事件监听器时使用 capture 模式，即在捕获阶段触发而不是冒泡阶段。</li>\n<li>once：只触发一次事件，之后移除该监听器。</li>\n<li>passive：提升页面滚动性能，告诉浏览器事件处理函数不会调用 event.preventDefault()。</li>\n</ul>\n<h3 id=\"（1）-stop\"><a href=\"#（1）-stop\" class=\"headerlink\" title=\"（1）.stop\"></a>（1）.stop</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">&quot;handleOuterClick&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleInnerClick&quot;</span>&gt;</span>内部按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>当内部按钮被点击时，handleOuterClick 不会被触发，因为事件不会继续向外部元素传播。</p>\n<h3 id=\"（2）-prevent\"><a href=\"#（2）-prevent\" class=\"headerlink\" title=\"（2）.prevent\"></a>（2）.prevent</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">&quot;handleSubmit&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>handleSubmit 方法中的 event.preventDefault() 将会被调用，从而阻止表单的默认提交行为。</p>\n<h3 id=\"（3）-self\"><a href=\"#（3）-self\" class=\"headerlink\" title=\"（3）.self\"></a>（3）.self</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click.self</span>=<span class=\"string\">&quot;handleClick&quot;</span>&gt;</span>只有当点击该div本身时触发<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>只有当点击该 div 元素本身时，handleClick 方法才会被触发；div 内部其他元素冒泡上来的事件不会触发。</p>\n<h3 id=\"（4）-once\"><a href=\"#（4）-once\" class=\"headerlink\" title=\"（4）.once\"></a>（4）.once</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.once</span>=<span class=\"string\">&quot;handleClick&quot;</span>&gt;</span>点击我，只触发一次<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>当按钮被点击后，handleClick 方法只会被触发一次，之后该事件监听器会被移除。</p>\n<h3 id=\"（5）-capture\"><a href=\"#（5）-capture\" class=\"headerlink\" title=\"（5）.capture\"></a>（5）.capture</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click.capture</span>=<span class=\"string\">&quot;handleCaptureClick&quot;</span>&gt;</span>捕获阶段触发<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>事件监听器将在捕获阶段（从外向内）触发，而不是在冒泡阶段触发。</p>\n<h3 id=\"（6）-passive\"><a href=\"#（6）-passive\" class=\"headerlink\" title=\"（6）.passive\"></a>（6）.passive</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">touchstart.passive</span>=<span class=\"string\">&quot;handleTouchStart&quot;</span>&gt;</span>优化页面滚动性能<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>告诉浏览器 handleTouchStart 方法不会调用 event.preventDefault()，从而有助于提升页面滚动的性能。</p>\n<h2 id=\"按键修饰符\"><a href=\"#按键修饰符\" class=\"headerlink\" title=\"按键修饰符\"></a>按键修饰符</h2><figure class=\"highlight plaintext\"><figcaption><span>中的 .enter 就是按键修饰符。</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 常规按键</span><br><span class=\"line\"></span><br><span class=\"line\">- enter</span><br><span class=\"line\">- tab</span><br><span class=\"line\">- delete (捕获“Delete”和“Backspace”两个按键)</span><br><span class=\"line\">- esc</span><br><span class=\"line\">- space</span><br><span class=\"line\">- up</span><br><span class=\"line\">- down</span><br><span class=\"line\">- left</span><br><span class=\"line\">- right</span><br><span class=\"line\"></span><br><span class=\"line\">### 系统按键</span><br><span class=\"line\"></span><br><span class=\"line\">系统按键和常规按键不同的是，与 keyup 一起使用时，只有当系统按键被 **按下** 并松开其他键才会触发。</span><br><span class=\"line\"></span><br><span class=\"line\">- ctrl</span><br><span class=\"line\">- alt</span><br><span class=\"line\">- shift</span><br><span class=\"line\">- meta</span><br><span class=\"line\"></span><br><span class=\"line\">举例：</span><br><span class=\"line\"></span><br><span class=\"line\">``` html</span><br><span class=\"line\">&lt;!-- 常规按键 --&gt;</span><br><span class=\"line\">&lt;!-- 当 Alt + Enter 抬起时，触发 submit 事件 --&gt;</span><br><span class=\"line\">&lt;input @keyup.alt.enter=&quot;submit&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 系统按键 --&gt;</span><br><span class=\"line\">&lt;!-- 当 按下 ctrl 时触发 --&gt;</span><br><span class=\"line\">&lt;div @click.ctrl=&quot;doSth&quot;&gt;A&lt;/div&gt;</span><br><span class=\"line\">&lt;!-- 当 按住 ctrl + 抬起其他键 时触发 --&gt;</span><br><span class=\"line\">&lt;div @keyup.ctrl=&quot;doSth&quot;&gt;A&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"exact-修饰符\"><a href=\"#exact-修饰符\" class=\"headerlink\" title=\".exact 修饰符\"></a>.exact 修饰符</h3><p>.exact 用于确定触发事件的确定组合。</p>\n<p>举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 当抬起 Ctrl 时，即使同时抬起其他系统按键也会触发 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">keyup.ctrl</span>=<span class=\"string\">&quot;doSth&quot;</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 仅当抬起 Ctrl 且未抬起任何其他键时才会触发 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">keyup.ctrl.exact</span>=<span class=\"string\">&quot;doSth&quot;</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 仅当没有抬起任何系统按键时触发 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">keyup.exact</span>=<span class=\"string\">&quot;doSth&quot;</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"10-v-model","date":"2023-12-05T02:31:56.000Z","_content":"\n## 基础\n\n``` html\n<input\n    :value=\"text\"\n    @input=\"event => text = event.target.value\" />\n```\n\n用 v-model 简化：\n\n``` html\n<input v-model=\"text\" />\n```\n\n## 类型\n\n### 单行\n\n``` html\n<p>{{ message }}</p>\n<input v-model=\"message\" placeholder=\"edit\" />\n```\n\n### 多行\n\n``` html\n<p>{{ message }}</p>\n<textarea v-model=\"message\" placeholder=\"edit\"></textarea>\n```\n\n### 复选框\n\nlabel 标签 for 属性的作用：用户点击 label 标签时，浏览器会将焦点转移到与 for 属性值相匹配的表单控件上，从而提高表单的可访问性和易用性。\n\n``` html\n<div>Checked names: {{ checkedNames }}</div>\n\n<input type=\"checkbox\" id=\"jack\" value=\"Jack\" v-model=\"checkedNames\">\n<label for=\"jack\">Jack</label>\n\n<input type=\"checkbox\" id=\"john\" value=\"John\" v-model=\"checkedNames\">\n<label for=\"john\">John</label>\n\n<input type=\"checkbox\" id=\"mike\" value=\"Mike\" v-model=\"checkedNames\">\n<label for=\"mike\">Mike</label>\n```\n\n### 单选\n\n``` html\n<div>Picked: {{ picked }}</div>\n\n<input type=\"radio\" id=\"one\" value=\"One\" v-model=\"picked\" />\n<label for=\"one\">One</label>\n\n<input type=\"radio\" id=\"two\" value=\"Two\" v-model=\"picked\" />\n<label for=\"two\">Two</label>\n```\n\n### 选择器\n\n单个：\n\n``` html\n<div>Selected: {{ selected }}</div>\n\n<select v-model=\"selected\">\n  <option disabled value=\"\">Please select one</option>\n  <option>A</option>\n  <option>B</option>\n  <option>C</option>\n</select>\n```\n\n多个（将值绑定到数组上）：\n\n``` html\n<div>Selected: {{ selected }}</div>\n\n<select v-model=\"selected\" multiple>\n  <option>A</option>\n  <option>B</option>\n  <option>C</option>\n</select>\n```\n\n## 修饰符\n\n### .lazy\n\n.lazy 修饰符表示在 \"change\" 事件而不是 \"input\" 事件触发时更新：\n\n这意味着数据将在失去焦点后才会同步到视图中，而不是每次输入时都同步。可以用于减少输入框频繁更新视图的情况，尤其是在处理大量输入时可以提高性能。\n\n``` html\n<input v-model.lazy=\"msg\" />\n```\n\n### .number\n\n让用户输入自动转换为数字，如果该值无法被 parseFloat() 处理，则将返回原始值。\n\nnumber 修饰符会在输入框有 type=\"number\" 时自动启用。\n\n``` html\n<input v-model.lazy=\"msg\" />\n```\n\n### .trim\n\n默认自动去除用户输入内容中两端的空格：\n\n``` html\n<input v-model.trim=\"msg\" />\n```\n","source":"_posts/10-v-model.md","raw":"---\ntitle: 10-v-model\ndate: 2023-12-05 10:31:56\ntags: \n    - vue\ncategories:\n    - vue\n---\n\n## 基础\n\n``` html\n<input\n    :value=\"text\"\n    @input=\"event => text = event.target.value\" />\n```\n\n用 v-model 简化：\n\n``` html\n<input v-model=\"text\" />\n```\n\n## 类型\n\n### 单行\n\n``` html\n<p>{{ message }}</p>\n<input v-model=\"message\" placeholder=\"edit\" />\n```\n\n### 多行\n\n``` html\n<p>{{ message }}</p>\n<textarea v-model=\"message\" placeholder=\"edit\"></textarea>\n```\n\n### 复选框\n\nlabel 标签 for 属性的作用：用户点击 label 标签时，浏览器会将焦点转移到与 for 属性值相匹配的表单控件上，从而提高表单的可访问性和易用性。\n\n``` html\n<div>Checked names: {{ checkedNames }}</div>\n\n<input type=\"checkbox\" id=\"jack\" value=\"Jack\" v-model=\"checkedNames\">\n<label for=\"jack\">Jack</label>\n\n<input type=\"checkbox\" id=\"john\" value=\"John\" v-model=\"checkedNames\">\n<label for=\"john\">John</label>\n\n<input type=\"checkbox\" id=\"mike\" value=\"Mike\" v-model=\"checkedNames\">\n<label for=\"mike\">Mike</label>\n```\n\n### 单选\n\n``` html\n<div>Picked: {{ picked }}</div>\n\n<input type=\"radio\" id=\"one\" value=\"One\" v-model=\"picked\" />\n<label for=\"one\">One</label>\n\n<input type=\"radio\" id=\"two\" value=\"Two\" v-model=\"picked\" />\n<label for=\"two\">Two</label>\n```\n\n### 选择器\n\n单个：\n\n``` html\n<div>Selected: {{ selected }}</div>\n\n<select v-model=\"selected\">\n  <option disabled value=\"\">Please select one</option>\n  <option>A</option>\n  <option>B</option>\n  <option>C</option>\n</select>\n```\n\n多个（将值绑定到数组上）：\n\n``` html\n<div>Selected: {{ selected }}</div>\n\n<select v-model=\"selected\" multiple>\n  <option>A</option>\n  <option>B</option>\n  <option>C</option>\n</select>\n```\n\n## 修饰符\n\n### .lazy\n\n.lazy 修饰符表示在 \"change\" 事件而不是 \"input\" 事件触发时更新：\n\n这意味着数据将在失去焦点后才会同步到视图中，而不是每次输入时都同步。可以用于减少输入框频繁更新视图的情况，尤其是在处理大量输入时可以提高性能。\n\n``` html\n<input v-model.lazy=\"msg\" />\n```\n\n### .number\n\n让用户输入自动转换为数字，如果该值无法被 parseFloat() 处理，则将返回原始值。\n\nnumber 修饰符会在输入框有 type=\"number\" 时自动启用。\n\n``` html\n<input v-model.lazy=\"msg\" />\n```\n\n### .trim\n\n默认自动去除用户输入内容中两端的空格：\n\n``` html\n<input v-model.trim=\"msg\" />\n```\n","slug":"10-v-model","published":1,"updated":"2023-12-05T03:12:50.924Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clprrpltp00009ww69lob2abv","content":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:value</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">input</span>=<span class=\"string\">&quot;event =&gt; text = event.target.value&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>用 v-model 简化：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h2><h3 id=\"单行\"><a href=\"#单行\" class=\"headerlink\" title=\"单行\"></a>单行</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;message&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;edit&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"多行\"><a href=\"#多行\" class=\"headerlink\" title=\"多行\"></a>多行</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;message&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;edit&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"复选框\"><a href=\"#复选框\" class=\"headerlink\" title=\"复选框\"></a>复选框</h3><p>label 标签 for 属性的作用：用户点击 label 标签时，浏览器会将焦点转移到与 for 属性值相匹配的表单控件上，从而提高表单的可访问性和易用性。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Checked names: &#123;&#123; checkedNames &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;jack&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Jack&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;jack&quot;</span>&gt;</span>Jack<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;john&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;John&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;john&quot;</span>&gt;</span>John<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mike&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Mike&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;mike&quot;</span>&gt;</span>Mike<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"单选\"><a href=\"#单选\" class=\"headerlink\" title=\"单选\"></a>单选</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Picked: &#123;&#123; picked &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;one&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;One&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;picked&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;one&quot;</span>&gt;</span>One<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;two&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Two&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;picked&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;two&quot;</span>&gt;</span>Two<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h3><p>单个：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Selected: &#123;&#123; selected &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;selected&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">disabled</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Please select one<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>C<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>多个（将值绑定到数组上）：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Selected: &#123;&#123; selected &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;selected&quot;</span> <span class=\"attr\">multiple</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>C<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"修饰符\"><a href=\"#修饰符\" class=\"headerlink\" title=\"修饰符\"></a>修饰符</h2><h3 id=\"lazy\"><a href=\"#lazy\" class=\"headerlink\" title=\".lazy\"></a>.lazy</h3><p>.lazy 修饰符表示在 “change” 事件而不是 “input” 事件触发时更新：</p>\n<p>这意味着数据将在失去焦点后才会同步到视图中，而不是每次输入时都同步。可以用于减少输入框频繁更新视图的情况，尤其是在处理大量输入时可以提高性能。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">&quot;msg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"number\"><a href=\"#number\" class=\"headerlink\" title=\".number\"></a>.number</h3><p>让用户输入自动转换为数字，如果该值无法被 parseFloat() 处理，则将返回原始值。</p>\n<p>number 修饰符会在输入框有 type&#x3D;”number” 时自动启用。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">&quot;msg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\".trim\"></a>.trim</h3><p>默认自动去除用户输入内容中两端的空格：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model.trim</span>=<span class=\"string\">&quot;msg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:value</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">input</span>=<span class=\"string\">&quot;event =&gt; text = event.target.value&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>用 v-model 简化：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h2><h3 id=\"单行\"><a href=\"#单行\" class=\"headerlink\" title=\"单行\"></a>单行</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;message&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;edit&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多行\"><a href=\"#多行\" class=\"headerlink\" title=\"多行\"></a>多行</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;message&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;edit&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"复选框\"><a href=\"#复选框\" class=\"headerlink\" title=\"复选框\"></a>复选框</h3><p>label 标签 for 属性的作用：用户点击 label 标签时，浏览器会将焦点转移到与 for 属性值相匹配的表单控件上，从而提高表单的可访问性和易用性。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Checked names: &#123;&#123; checkedNames &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;jack&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Jack&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;jack&quot;</span>&gt;</span>Jack<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;john&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;John&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;john&quot;</span>&gt;</span>John<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mike&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Mike&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;mike&quot;</span>&gt;</span>Mike<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"单选\"><a href=\"#单选\" class=\"headerlink\" title=\"单选\"></a>单选</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Picked: &#123;&#123; picked &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;one&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;One&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;picked&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;one&quot;</span>&gt;</span>One<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;two&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Two&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;picked&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;two&quot;</span>&gt;</span>Two<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h3><p>单个：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Selected: &#123;&#123; selected &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;selected&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">disabled</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Please select one<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>C<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>多个（将值绑定到数组上）：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Selected: &#123;&#123; selected &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;selected&quot;</span> <span class=\"attr\">multiple</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>C<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修饰符\"><a href=\"#修饰符\" class=\"headerlink\" title=\"修饰符\"></a>修饰符</h2><h3 id=\"lazy\"><a href=\"#lazy\" class=\"headerlink\" title=\".lazy\"></a>.lazy</h3><p>.lazy 修饰符表示在 “change” 事件而不是 “input” 事件触发时更新：</p>\n<p>这意味着数据将在失去焦点后才会同步到视图中，而不是每次输入时都同步。可以用于减少输入框频繁更新视图的情况，尤其是在处理大量输入时可以提高性能。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">&quot;msg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"number\"><a href=\"#number\" class=\"headerlink\" title=\".number\"></a>.number</h3><p>让用户输入自动转换为数字，如果该值无法被 parseFloat() 处理，则将返回原始值。</p>\n<p>number 修饰符会在输入框有 type&#x3D;”number” 时自动启用。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">&quot;msg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\".trim\"></a>.trim</h3><p>默认自动去除用户输入内容中两端的空格：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model.trim</span>=<span class=\"string\">&quot;msg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"11-vue3生命周期","date":"2023-12-05T03:14:09.000Z","_content":"\n## vue3 生命周期图示\n\n<img src=\"https://cn.vuejs.org/assets/lifecycle.16e4c08e.png\" />\n\n## 注册生命钩子\n\n### 用法\n\n``` html\n<script setup>\nimport { onMounted } from 'vue';\n\nonMounted(() => {\n    console.log('now mounted');\n});\n</script>\n```\n\n调用 onMounted 时，Vue 会自动将回调函数注册到当前正被初始化的组件实例上，所以该钩子应当被同步注册。\n\n这并不意味对 onMounted 的调用必须放在 setup() 或 ```<script setup>``` 内的词法上下文中。\n\nonMounted() 也可以在一个外部函数中调用，只要调用栈是同步的，且最终起源自 setup() 就可以。\n","source":"_posts/11-vue3生命周期.md","raw":"---\ntitle: 11-vue3生命周期\ndate: 2023-12-05 11:14:09\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## vue3 生命周期图示\n\n<img src=\"https://cn.vuejs.org/assets/lifecycle.16e4c08e.png\" />\n\n## 注册生命钩子\n\n### 用法\n\n``` html\n<script setup>\nimport { onMounted } from 'vue';\n\nonMounted(() => {\n    console.log('now mounted');\n});\n</script>\n```\n\n调用 onMounted 时，Vue 会自动将回调函数注册到当前正被初始化的组件实例上，所以该钩子应当被同步注册。\n\n这并不意味对 onMounted 的调用必须放在 setup() 或 ```<script setup>``` 内的词法上下文中。\n\nonMounted() 也可以在一个外部函数中调用，只要调用栈是同步的，且最终起源自 setup() 就可以。\n","slug":"11-vue3生命周期","published":1,"updated":"2023-12-07T10:20:13.492Z","_id":"clprrpltr00019ww6gvarfi6m","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"vue3-生命周期图示\"><a href=\"#vue3-生命周期图示\" class=\"headerlink\" title=\"vue3 生命周期图示\"></a>vue3 生命周期图示</h2><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cn.vuejs.org/assets/lifecycle.16e4c08e.png\"\n                      \n                >\n\n<h2 id=\"注册生命钩子\"><a href=\"#注册生命钩子\" class=\"headerlink\" title=\"注册生命钩子\"></a>注册生命钩子</h2><h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;now mounted&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>调用 onMounted 时，Vue 会自动将回调函数注册到当前正被初始化的组件实例上，所以该钩子应当被同步注册。</p>\n<p>这并不意味对 onMounted 的调用必须放在 setup() 或 <code>&lt;script setup&gt;</code> 内的词法上下文中。</p>\n<p>onMounted() 也可以在一个外部函数中调用，只要调用栈是同步的，且最终起源自 setup() 就可以。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vue3-生命周期图示\"><a href=\"#vue3-生命周期图示\" class=\"headerlink\" title=\"vue3 生命周期图示\"></a>vue3 生命周期图示</h2><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cn.vuejs.org/assets/lifecycle.16e4c08e.png\"\n                      \n                >\n\n<h2 id=\"注册生命钩子\"><a href=\"#注册生命钩子\" class=\"headerlink\" title=\"注册生命钩子\"></a>注册生命钩子</h2><h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;now mounted&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>调用 onMounted 时，Vue 会自动将回调函数注册到当前正被初始化的组件实例上，所以该钩子应当被同步注册。</p>\n<p>这并不意味对 onMounted 的调用必须放在 setup() 或 <code>&lt;script setup&gt;</code> 内的词法上下文中。</p>\n<p>onMounted() 也可以在一个外部函数中调用，只要调用栈是同步的，且最终起源自 setup() 就可以。</p>\n"},{"title":"12-vue3侦听器","date":"2023-12-07T10:22:34.000Z","_content":"\n## 基本用法\n\n``` html\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst initVal = ref('');\n\nwatch(initVal, (newVal, oldVal) => {\n    ...\n});\n</script>\n```\n\n## 侦听数据源类型\n\nref（包括计算属性 computed）、响应式对象、getter 函数、多个数据源组成的数组\n\n``` js\nconst x = ref(0), y = ref(0);\n\n// ref\nwatch(x, (newX) => {\n    console.log(`x is ${newX}`);\n});\n\n// getter 函数\nwatch(\n    () => x.value + y.value,\n    (sum) => {\n        console.log(`sum is ${sum}`);\n    }\n);\n\n// 多个数据源组成的数组\nwatch(\n    [x, () => y.value],\n    ([newX, newY], [oldX, oldY]) => {\n        console.log(`x is ${newX} y is ${newY}`);\n    }\n);\n```\n\n## 侦听响应式对象的属性值\n\n不能直接监听响应式对象的属性值，而是使用返回该属性的 getter 函数\n\n``` js\nconst obj = reactive({ count: 0 });\n\n// 错误，因为 obj.count 是一个 number\nwatch(obj.count, () => {\n    .console.log(`count is: ${count}`)\n});\n\n// 正确，使用一个 getter 函数\nwatch(\n    () => obj.count,\n    (count) => {\n      console.log(`count is: ${count}`)\n    }\n);\n```\n\n## 深层侦听器\n\n给 watch 传响应式对象，会隐式创建深层监听器\n\n``` js\nconst obj = reactive({ count: 0 });\n\nwatch(obj, (newVal, oldVal) => {\n    ...\n});\n\nobj.count++; // 属性变更时触发\n```\n\n返回一个响应对象的 getter 函数，只在返回不同对象时才会触发回调\n\n``` js\nwatch(\n    () => source.obj,\n    () => {\n        ... // 仅当 test.obj 被替换时触发\n    }\n);\n```\n\n可以显示添加 deep，转为深层侦听器\n\n``` js\nwatch(\n    () => source.obj,\n    () => {\n        ... // 仅当 test.obj 被替换时触发\n    },\n    { deep: true }\n);\n```\n\n## 创建时立即执行的侦听器\n\n创建侦听器时，立即执行\n\n``` js\nwatch(source, \n    (newVal, oldVal) => {}, \n    { immediate: true });\n```\n","source":"_posts/12-vue3侦听器.md","raw":"---\ntitle: 12-vue3侦听器\ndate: 2023-12-07 18:22:34\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## 基本用法\n\n``` html\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst initVal = ref('');\n\nwatch(initVal, (newVal, oldVal) => {\n    ...\n});\n</script>\n```\n\n## 侦听数据源类型\n\nref（包括计算属性 computed）、响应式对象、getter 函数、多个数据源组成的数组\n\n``` js\nconst x = ref(0), y = ref(0);\n\n// ref\nwatch(x, (newX) => {\n    console.log(`x is ${newX}`);\n});\n\n// getter 函数\nwatch(\n    () => x.value + y.value,\n    (sum) => {\n        console.log(`sum is ${sum}`);\n    }\n);\n\n// 多个数据源组成的数组\nwatch(\n    [x, () => y.value],\n    ([newX, newY], [oldX, oldY]) => {\n        console.log(`x is ${newX} y is ${newY}`);\n    }\n);\n```\n\n## 侦听响应式对象的属性值\n\n不能直接监听响应式对象的属性值，而是使用返回该属性的 getter 函数\n\n``` js\nconst obj = reactive({ count: 0 });\n\n// 错误，因为 obj.count 是一个 number\nwatch(obj.count, () => {\n    .console.log(`count is: ${count}`)\n});\n\n// 正确，使用一个 getter 函数\nwatch(\n    () => obj.count,\n    (count) => {\n      console.log(`count is: ${count}`)\n    }\n);\n```\n\n## 深层侦听器\n\n给 watch 传响应式对象，会隐式创建深层监听器\n\n``` js\nconst obj = reactive({ count: 0 });\n\nwatch(obj, (newVal, oldVal) => {\n    ...\n});\n\nobj.count++; // 属性变更时触发\n```\n\n返回一个响应对象的 getter 函数，只在返回不同对象时才会触发回调\n\n``` js\nwatch(\n    () => source.obj,\n    () => {\n        ... // 仅当 test.obj 被替换时触发\n    }\n);\n```\n\n可以显示添加 deep，转为深层侦听器\n\n``` js\nwatch(\n    () => source.obj,\n    () => {\n        ... // 仅当 test.obj 被替换时触发\n    },\n    { deep: true }\n);\n```\n\n## 创建时立即执行的侦听器\n\n创建侦听器时，立即执行\n\n``` js\nwatch(source, \n    (newVal, oldVal) => {}, \n    { immediate: true });\n```\n","slug":"12-vue3侦听器","published":1,"updated":"2023-12-08T10:15:45.184Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq0s4b7h00005dw67395ev3g","content":"<h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, watch &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> initVal = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">watch</span>(initVal, <span class=\"function\">(<span class=\"params\">newVal, oldVal</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"侦听数据源类型\"><a href=\"#侦听数据源类型\" class=\"headerlink\" title=\"侦听数据源类型\"></a>侦听数据源类型</h2><p>ref（包括计算属性 computed）、响应式对象、getter 函数、多个数据源组成的数组</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> x = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>), y = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ref</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(x, <span class=\"function\">(<span class=\"params\">newX</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`x is <span class=\"subst\">$&#123;newX&#125;</span>`</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// getter 函数</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> x.<span class=\"property\">value</span> + y.<span class=\"property\">value</span>,</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">sum</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`sum is <span class=\"subst\">$&#123;sum&#125;</span>`</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多个数据源组成的数组</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    [x, <span class=\"function\">() =&gt;</span> y.<span class=\"property\">value</span>],</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">[newX, newY], [oldX, oldY]</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`x is <span class=\"subst\">$&#123;newX&#125;</span> y is <span class=\"subst\">$&#123;newY&#125;</span>`</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"侦听响应式对象的属性值\"><a href=\"#侦听响应式对象的属性值\" class=\"headerlink\" title=\"侦听响应式对象的属性值\"></a>侦听响应式对象的属性值</h2><p>不能直接监听响应式对象的属性值，而是使用返回该属性的 getter 函数</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"title function_\">reactive</span>(&#123; <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误，因为 obj.count 是一个 number</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(obj.<span class=\"property\">count</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    .<span class=\"property\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`count is: <span class=\"subst\">$&#123;count&#125;</span>`</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确，使用一个 getter 函数</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> obj.<span class=\"property\">count</span>,</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">count</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`count is: <span class=\"subst\">$&#123;count&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"深层侦听器\"><a href=\"#深层侦听器\" class=\"headerlink\" title=\"深层侦听器\"></a>深层侦听器</h2><p>给 watch 传响应式对象，会隐式创建深层监听器</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"title function_\">reactive</span>(&#123; <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(obj, <span class=\"function\">(<span class=\"params\">newVal, oldVal</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"property\">count</span>++; <span class=\"comment\">// 属性变更时触发</span></span><br></pre></td></tr></table></figure></div>\n\n<p>返回一个响应对象的 getter 函数，只在返回不同对象时才会触发回调</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> source.<span class=\"property\">obj</span>,</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        ... <span class=\"comment\">// 仅当 test.obj 被替换时触发</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></div>\n\n<p>可以显示添加 deep，转为深层侦听器</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> source.<span class=\"property\">obj</span>,</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        ... <span class=\"comment\">// 仅当 test.obj 被替换时触发</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">deep</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"创建时立即执行的侦听器\"><a href=\"#创建时立即执行的侦听器\" class=\"headerlink\" title=\"创建时立即执行的侦听器\"></a>创建时立即执行的侦听器</h2><p>创建侦听器时，立即执行</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(source, </span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">newVal, oldVal</span>) =&gt;</span> &#123;&#125;, </span><br><span class=\"line\">    &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;);</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, watch &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> initVal = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">watch</span>(initVal, <span class=\"function\">(<span class=\"params\">newVal, oldVal</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"侦听数据源类型\"><a href=\"#侦听数据源类型\" class=\"headerlink\" title=\"侦听数据源类型\"></a>侦听数据源类型</h2><p>ref（包括计算属性 computed）、响应式对象、getter 函数、多个数据源组成的数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> x = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>), y = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ref</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(x, <span class=\"function\">(<span class=\"params\">newX</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`x is <span class=\"subst\">$&#123;newX&#125;</span>`</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// getter 函数</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> x.<span class=\"property\">value</span> + y.<span class=\"property\">value</span>,</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">sum</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`sum is <span class=\"subst\">$&#123;sum&#125;</span>`</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多个数据源组成的数组</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    [x, <span class=\"function\">() =&gt;</span> y.<span class=\"property\">value</span>],</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">[newX, newY], [oldX, oldY]</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`x is <span class=\"subst\">$&#123;newX&#125;</span> y is <span class=\"subst\">$&#123;newY&#125;</span>`</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"侦听响应式对象的属性值\"><a href=\"#侦听响应式对象的属性值\" class=\"headerlink\" title=\"侦听响应式对象的属性值\"></a>侦听响应式对象的属性值</h2><p>不能直接监听响应式对象的属性值，而是使用返回该属性的 getter 函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"title function_\">reactive</span>(&#123; <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 错误，因为 obj.count 是一个 number</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(obj.<span class=\"property\">count</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    .<span class=\"property\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`count is: <span class=\"subst\">$&#123;count&#125;</span>`</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正确，使用一个 getter 函数</span></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> obj.<span class=\"property\">count</span>,</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">count</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`count is: <span class=\"subst\">$&#123;count&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"深层侦听器\"><a href=\"#深层侦听器\" class=\"headerlink\" title=\"深层侦听器\"></a>深层侦听器</h2><p>给 watch 传响应式对象，会隐式创建深层监听器</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = <span class=\"title function_\">reactive</span>(&#123; <span class=\"attr\">count</span>: <span class=\"number\">0</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">watch</span>(obj, <span class=\"function\">(<span class=\"params\">newVal, oldVal</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"property\">count</span>++; <span class=\"comment\">// 属性变更时触发</span></span><br></pre></td></tr></table></figure>\n\n<p>返回一个响应对象的 getter 函数，只在返回不同对象时才会触发回调</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> source.<span class=\"property\">obj</span>,</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        ... <span class=\"comment\">// 仅当 test.obj 被替换时触发</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>可以显示添加 deep，转为深层侦听器</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> source.<span class=\"property\">obj</span>,</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        ... <span class=\"comment\">// 仅当 test.obj 被替换时触发</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">deep</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建时立即执行的侦听器\"><a href=\"#创建时立即执行的侦听器\" class=\"headerlink\" title=\"创建时立即执行的侦听器\"></a>创建时立即执行的侦听器</h2><p>创建侦听器时，立即执行</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(source, </span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">newVal, oldVal</span>) =&gt;</span> &#123;&#125;, </span><br><span class=\"line\">    &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"14-vue3组件基础","date":"2023-12-11T10:35:48.000Z","_content":"\n## 基础\n\n### 父传子\n\ndefineProps 是仅在 ```<script setup>``` 中可用的编译宏命令\n\n``` html\n<script setup>\ndefineProps(['title', 'content']);\n</script>\n\n<template>{{ title }}{{ content }}</template>\n```\n\n### 子传父\n\ndefineEmits 是仅在 ```<script setup>``` 中可用的编译宏命令\n\n``` html\n<script setup>\nconst emit = defineEmits('enlarge-text');\n\nemit('enlarg-text'); // 抛出事件\n</script>\n```\n\n## slot 插槽\n\n子组件：\n\n``` html\n<template>\n    <div class=\"child\">\n        <span>123</span>\n        <slot />\n    </div>\n</template>\n```\n\n父组件：\n\n``` html\n<template>\n    <child-component>\n        <span>hahaha<span>\n    </child-component>\n</template>\n```\n\n子组件渲染结果为：\n\n``` html\n<template>\n    <div class=\"child\">\n        <span>123</span>\n        <span>hahaha</span>\n    </div>\n</template>\n```\n\n## 子组件标签\n\n### 子组件有关闭标签\n\n父组件可以子组件传递 slot 内容\n\n``` html\n<my-component></my-component>\n```\n\n### 子组件无关闭标签\n\n父组件无法向子组件传递 slot 内容\n\n``` html\n<my-component />\n```\n\n## 动态组件\n\n通过 component 组件，和 :is 属性切换动态组件\n\n``` html\n<template>\n    <!-- 点击切换 tab -->\n    <button v-for=\"tab in tabs\" @click=\"curTab = tab\">\n       {{ tab }}\n    </button>\n    <!-- 动态组件 -->\n   <component :is=\"tabs[curTab]\"></component>\n</template>\n\n<script setup>\nimport Home from './Home.vue';\nimport Posts from './Posts.vue';\nimport Archive from './Archive.vue';\nimport { ref } from 'vue';\n\nconst curTab = ref('Home'); // 初始展示 Home 组件\n\nconst tabs = {\n    Home,\n    Posts,\n    Archive\n};\n</script>\n```\n\n## 元素位置限制\n\n某些元素对于放在其中的元素类型有限制：```<ul>, <ol>, <table>, <select>```\n\n某些元素仅在特定元素中才会显示：```<li>, <tr>, <option>```\n\n``` html\n<table>\n    <!-- 自定组件在 <table> 中不生效 -->\n    <post-row></post-row>\n</table>\n```\n\n解决方案（使用 is 属性）：\n\n``` html\n<table>\n    <tr is=\"vue:post-row\"></tr>\n</table>\n```\n","source":"_posts/14-vue3组件基础.md","raw":"---\ntitle: 14-vue3组件基础\ndate: 2023-12-11 18:35:48\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## 基础\n\n### 父传子\n\ndefineProps 是仅在 ```<script setup>``` 中可用的编译宏命令\n\n``` html\n<script setup>\ndefineProps(['title', 'content']);\n</script>\n\n<template>{{ title }}{{ content }}</template>\n```\n\n### 子传父\n\ndefineEmits 是仅在 ```<script setup>``` 中可用的编译宏命令\n\n``` html\n<script setup>\nconst emit = defineEmits('enlarge-text');\n\nemit('enlarg-text'); // 抛出事件\n</script>\n```\n\n## slot 插槽\n\n子组件：\n\n``` html\n<template>\n    <div class=\"child\">\n        <span>123</span>\n        <slot />\n    </div>\n</template>\n```\n\n父组件：\n\n``` html\n<template>\n    <child-component>\n        <span>hahaha<span>\n    </child-component>\n</template>\n```\n\n子组件渲染结果为：\n\n``` html\n<template>\n    <div class=\"child\">\n        <span>123</span>\n        <span>hahaha</span>\n    </div>\n</template>\n```\n\n## 子组件标签\n\n### 子组件有关闭标签\n\n父组件可以子组件传递 slot 内容\n\n``` html\n<my-component></my-component>\n```\n\n### 子组件无关闭标签\n\n父组件无法向子组件传递 slot 内容\n\n``` html\n<my-component />\n```\n\n## 动态组件\n\n通过 component 组件，和 :is 属性切换动态组件\n\n``` html\n<template>\n    <!-- 点击切换 tab -->\n    <button v-for=\"tab in tabs\" @click=\"curTab = tab\">\n       {{ tab }}\n    </button>\n    <!-- 动态组件 -->\n   <component :is=\"tabs[curTab]\"></component>\n</template>\n\n<script setup>\nimport Home from './Home.vue';\nimport Posts from './Posts.vue';\nimport Archive from './Archive.vue';\nimport { ref } from 'vue';\n\nconst curTab = ref('Home'); // 初始展示 Home 组件\n\nconst tabs = {\n    Home,\n    Posts,\n    Archive\n};\n</script>\n```\n\n## 元素位置限制\n\n某些元素对于放在其中的元素类型有限制：```<ul>, <ol>, <table>, <select>```\n\n某些元素仅在特定元素中才会显示：```<li>, <tr>, <option>```\n\n``` html\n<table>\n    <!-- 自定组件在 <table> 中不生效 -->\n    <post-row></post-row>\n</table>\n```\n\n解决方案（使用 is 属性）：\n\n``` html\n<table>\n    <tr is=\"vue:post-row\"></tr>\n</table>\n```\n","slug":"14-vue3组件基础","published":1,"updated":"2023-12-13T10:13:36.258Z","_id":"clq0s4b7j00015dw62cca8kw4","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><h3 id=\"父传子\"><a href=\"#父传子\" class=\"headerlink\" title=\"父传子\"></a>父传子</h3><p>defineProps 是仅在 <code>&lt;script setup&gt;</code> 中可用的编译宏命令</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineProps</span>([<span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span>&#123;&#123; title &#125;&#125;&#123;&#123; content &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"子传父\"><a href=\"#子传父\" class=\"headerlink\" title=\"子传父\"></a>子传父</h3><p>defineEmits 是仅在 <code>&lt;script setup&gt;</code> 中可用的编译宏命令</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> emit = <span class=\"title function_\">defineEmits</span>(<span class=\"string\">&#x27;enlarge-text&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;enlarg-text&#x27;</span>); <span class=\"comment\">// 抛出事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"slot-插槽\"><a href=\"#slot-插槽\" class=\"headerlink\" title=\"slot 插槽\"></a>slot 插槽</h2><p>子组件：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;child&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>父组件：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">child-component</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>hahaha<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">child-component</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>子组件渲染结果为：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;child&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>hahaha<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"子组件标签\"><a href=\"#子组件标签\" class=\"headerlink\" title=\"子组件标签\"></a>子组件标签</h2><h3 id=\"子组件有关闭标签\"><a href=\"#子组件有关闭标签\" class=\"headerlink\" title=\"子组件有关闭标签\"></a>子组件有关闭标签</h3><p>父组件可以子组件传递 slot 内容</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"子组件无关闭标签\"><a href=\"#子组件无关闭标签\" class=\"headerlink\" title=\"子组件无关闭标签\"></a>子组件无关闭标签</h3><p>父组件无法向子组件传递 slot 内容</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"动态组件\"><a href=\"#动态组件\" class=\"headerlink\" title=\"动态组件\"></a>动态组件</h2><p>通过 component 组件，和 :is 属性切换动态组件</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 点击切换 tab --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;tab in tabs&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;curTab = tab&quot;</span>&gt;</span></span><br><span class=\"line\">       &#123;&#123; tab &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 动态组件 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;tabs[curTab]&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Home.vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Posts</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Posts.vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Archive</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Archive.vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> curTab = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;Home&#x27;</span>); <span class=\"comment\">// 初始展示 Home 组件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> tabs = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Home</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Posts</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Archive</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"元素位置限制\"><a href=\"#元素位置限制\" class=\"headerlink\" title=\"元素位置限制\"></a>元素位置限制</h2><p>某些元素对于放在其中的元素类型有限制：<code>&lt;ul&gt;, &lt;ol&gt;, &lt;table&gt;, &lt;select&gt;</code></p>\n<p>某些元素仅在特定元素中才会显示：<code>&lt;li&gt;, &lt;tr&gt;, &lt;option&gt;</code></p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 自定组件在 &lt;table&gt; 中不生效 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">post-row</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">post-row</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>解决方案（使用 is 属性）：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">is</span>=<span class=\"string\">&quot;vue:post-row&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><h3 id=\"父传子\"><a href=\"#父传子\" class=\"headerlink\" title=\"父传子\"></a>父传子</h3><p>defineProps 是仅在 <code>&lt;script setup&gt;</code> 中可用的编译宏命令</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineProps</span>([<span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span>&#123;&#123; title &#125;&#125;&#123;&#123; content &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"子传父\"><a href=\"#子传父\" class=\"headerlink\" title=\"子传父\"></a>子传父</h3><p>defineEmits 是仅在 <code>&lt;script setup&gt;</code> 中可用的编译宏命令</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> emit = <span class=\"title function_\">defineEmits</span>(<span class=\"string\">&#x27;enlarge-text&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;enlarg-text&#x27;</span>); <span class=\"comment\">// 抛出事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"slot-插槽\"><a href=\"#slot-插槽\" class=\"headerlink\" title=\"slot 插槽\"></a>slot 插槽</h2><p>子组件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;child&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>父组件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">child-component</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>hahaha<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">child-component</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>子组件渲染结果为：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;child&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>hahaha<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"子组件标签\"><a href=\"#子组件标签\" class=\"headerlink\" title=\"子组件标签\"></a>子组件标签</h2><h3 id=\"子组件有关闭标签\"><a href=\"#子组件有关闭标签\" class=\"headerlink\" title=\"子组件有关闭标签\"></a>子组件有关闭标签</h3><p>父组件可以子组件传递 slot 内容</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"子组件无关闭标签\"><a href=\"#子组件无关闭标签\" class=\"headerlink\" title=\"子组件无关闭标签\"></a>子组件无关闭标签</h3><p>父组件无法向子组件传递 slot 内容</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"动态组件\"><a href=\"#动态组件\" class=\"headerlink\" title=\"动态组件\"></a>动态组件</h2><p>通过 component 组件，和 :is 属性切换动态组件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 点击切换 tab --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;tab in tabs&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;curTab = tab&quot;</span>&gt;</span></span><br><span class=\"line\">       &#123;&#123; tab &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 动态组件 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;tabs[curTab]&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Home.vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Posts</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Posts.vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Archive</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Archive.vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> curTab = <span class=\"title function_\">ref</span>(<span class=\"string\">&#x27;Home&#x27;</span>); <span class=\"comment\">// 初始展示 Home 组件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> tabs = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Home</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Posts</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Archive</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"元素位置限制\"><a href=\"#元素位置限制\" class=\"headerlink\" title=\"元素位置限制\"></a>元素位置限制</h2><p>某些元素对于放在其中的元素类型有限制：<code>&lt;ul&gt;, &lt;ol&gt;, &lt;table&gt;, &lt;select&gt;</code></p>\n<p>某些元素仅在特定元素中才会显示：<code>&lt;li&gt;, &lt;tr&gt;, &lt;option&gt;</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 自定组件在 &lt;table&gt; 中不生效 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">post-row</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">post-row</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>解决方案（使用 is 属性）：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">is</span>=<span class=\"string\">&quot;vue:post-row&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"13-vue3模板引用","date":"2023-12-08T10:22:28.000Z","_content":"\n## 基础\n\n``` html\n<input ref=\"myInput\" />\n\n<script setup>\n    import { ref, onMounted } from 'vue';\n\n    const myInput = ref(null); // 必须和模版中的 ref 同名\n    \n    onMounted(() => {\n        myInput.value.focus(); // 自动聚焦\n    });\n</script>\n```\n\n只能在组件挂载后访问模板引用，因为初次渲染时模板引用为 null\n\n比如：\n\n``` js\nwatchEffect(() => {\n  if (input.value) {\n    input.value.focus()\n  } else {\n    // 此时还未挂载，或此元素已卸载（例如 v-if=false）\n  }\n})\n```\n\n## 列表引用\n\n``` html\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nconst list = ref([\n    /* ... */\n]);\nconst itemRefs = ref([]);\nonMounted(() => {\n    console.log(itemRefs.value);\n});\n</script>\n\n<template>\n    <ul>\n        <li v-for=\"item in list\" ref=\"itemRefs\">{{ item }}</li>\n    </ul>\n</template>\n```\n\n## 函数模板引用\n\n每次组件更新时会调用 handleRef：\n\n``` html\n<input :ref=\"handleRef(el)\" />\n\n<script setup>\nconst handleRef = (el) => {\n    /*  将 el 赋给 ref 变量 */\n};\n</script>\n```\n\n## 组件上的 ref\n\n引用获得的值是组件实例：\n\n``` html\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport Child from './Child.vue';\n\nconst child = ref(null);\nonMounted(() => {\n    // child.value 是 <Child/> 组件实例\n});\n</script>\n\n<template>\n    <Child ref=\"child\" />\n</template>\n```\n\n### 父组件对子组件访问权\n\n#### 1. 选项式 API 或 不使用 ```<script setup>```\n\n父组件对子组件的所有属性和方法有完全的访问权（大多情况下应使用 props 和 emit）。\n\n#### 2. 使用 ```<script setup>```\n\n子组件默认私有，除非子组件在其中通过 defineExpose 宏显示暴露。\n\n```html\n<script setup>\nimport { ref } from 'vue';\n\nconst a = 1, b = ref(2);\n\n// 编译器宏无需导入\ndefineExpose({\n    a,\n    b\n});\n</script>\n```\n","source":"_posts/13-vue3模板引用.md","raw":"---\ntitle: 13-vue3模板引用\ndate: 2023-12-08 18:22:28\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## 基础\n\n``` html\n<input ref=\"myInput\" />\n\n<script setup>\n    import { ref, onMounted } from 'vue';\n\n    const myInput = ref(null); // 必须和模版中的 ref 同名\n    \n    onMounted(() => {\n        myInput.value.focus(); // 自动聚焦\n    });\n</script>\n```\n\n只能在组件挂载后访问模板引用，因为初次渲染时模板引用为 null\n\n比如：\n\n``` js\nwatchEffect(() => {\n  if (input.value) {\n    input.value.focus()\n  } else {\n    // 此时还未挂载，或此元素已卸载（例如 v-if=false）\n  }\n})\n```\n\n## 列表引用\n\n``` html\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nconst list = ref([\n    /* ... */\n]);\nconst itemRefs = ref([]);\nonMounted(() => {\n    console.log(itemRefs.value);\n});\n</script>\n\n<template>\n    <ul>\n        <li v-for=\"item in list\" ref=\"itemRefs\">{{ item }}</li>\n    </ul>\n</template>\n```\n\n## 函数模板引用\n\n每次组件更新时会调用 handleRef：\n\n``` html\n<input :ref=\"handleRef(el)\" />\n\n<script setup>\nconst handleRef = (el) => {\n    /*  将 el 赋给 ref 变量 */\n};\n</script>\n```\n\n## 组件上的 ref\n\n引用获得的值是组件实例：\n\n``` html\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport Child from './Child.vue';\n\nconst child = ref(null);\nonMounted(() => {\n    // child.value 是 <Child/> 组件实例\n});\n</script>\n\n<template>\n    <Child ref=\"child\" />\n</template>\n```\n\n### 父组件对子组件访问权\n\n#### 1. 选项式 API 或 不使用 ```<script setup>```\n\n父组件对子组件的所有属性和方法有完全的访问权（大多情况下应使用 props 和 emit）。\n\n#### 2. 使用 ```<script setup>```\n\n子组件默认私有，除非子组件在其中通过 defineExpose 宏显示暴露。\n\n```html\n<script setup>\nimport { ref } from 'vue';\n\nconst a = 1, b = ref(2);\n\n// 编译器宏无需导入\ndefineExpose({\n    a,\n    b\n});\n</script>\n```\n","slug":"13-vue3模板引用","published":1,"updated":"2023-12-11T10:33:19.504Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq0s4b7k00035dw6g57045bg","content":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;myInput&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> myInput = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>); <span class=\"comment\">// 必须和模版中的 ref 同名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        myInput.<span class=\"property\">value</span>.<span class=\"title function_\">focus</span>(); <span class=\"comment\">// 自动聚焦</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>只能在组件挂载后访问模板引用，因为初次渲染时模板引用为 null</p>\n<p>比如：</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watchEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (input.<span class=\"property\">value</span>) &#123;</span><br><span class=\"line\">    input.<span class=\"property\">value</span>.<span class=\"title function_\">focus</span>()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 此时还未挂载，或此元素已卸载（例如 v-if=false）</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"列表引用\"><a href=\"#列表引用\" class=\"headerlink\" title=\"列表引用\"></a>列表引用</h2><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> list = <span class=\"title function_\">ref</span>([</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">/* ... */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> itemRefs = <span class=\"title function_\">ref</span>([]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(itemRefs.<span class=\"property\">value</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in list&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;itemRefs&quot;</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"函数模板引用\"><a href=\"#函数模板引用\" class=\"headerlink\" title=\"函数模板引用\"></a>函数模板引用</h2><p>每次组件更新时会调用 handleRef：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">:ref</span>=<span class=\"string\">&quot;handleRef(el)&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleRef</span> = (<span class=\"params\">el</span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">/*  将 el 赋给 ref 变量 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"组件上的-ref\"><a href=\"#组件上的-ref\" class=\"headerlink\" title=\"组件上的 ref\"></a>组件上的 ref</h2><p>引用获得的值是组件实例：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Child</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Child.vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> child = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// child.value 是 &lt;Child/&gt; 组件实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;child&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"父组件对子组件访问权\"><a href=\"#父组件对子组件访问权\" class=\"headerlink\" title=\"父组件对子组件访问权\"></a>父组件对子组件访问权</h3><h4 id=\"1-选项式-API-或-不使用\"><a href=\"#1-选项式-API-或-不使用\" class=\"headerlink\" title=\"1. 选项式 API 或 不使用 &lt;script setup&gt;\"></a>1. 选项式 API 或 不使用 <code>&lt;script setup&gt;</code></h4><p>父组件对子组件的所有属性和方法有完全的访问权（大多情况下应使用 props 和 emit）。</p>\n<h4 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2. 使用 &lt;script setup&gt;\"></a>2. 使用 <code>&lt;script setup&gt;</code></h4><p>子组件默认私有，除非子组件在其中通过 defineExpose 宏显示暴露。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>, b = <span class=\"title function_\">ref</span>(<span class=\"number\">2</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 编译器宏无需导入</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineExpose</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    a,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    b</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;myInput&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> myInput = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>); <span class=\"comment\">// 必须和模版中的 ref 同名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        myInput.<span class=\"property\">value</span>.<span class=\"title function_\">focus</span>(); <span class=\"comment\">// 自动聚焦</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>只能在组件挂载后访问模板引用，因为初次渲染时模板引用为 null</p>\n<p>比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watchEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (input.<span class=\"property\">value</span>) &#123;</span><br><span class=\"line\">    input.<span class=\"property\">value</span>.<span class=\"title function_\">focus</span>()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 此时还未挂载，或此元素已卸载（例如 v-if=false）</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"列表引用\"><a href=\"#列表引用\" class=\"headerlink\" title=\"列表引用\"></a>列表引用</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> list = <span class=\"title function_\">ref</span>([</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">/* ... */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> itemRefs = <span class=\"title function_\">ref</span>([]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(itemRefs.<span class=\"property\">value</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in list&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;itemRefs&quot;</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数模板引用\"><a href=\"#函数模板引用\" class=\"headerlink\" title=\"函数模板引用\"></a>函数模板引用</h2><p>每次组件更新时会调用 handleRef：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">:ref</span>=<span class=\"string\">&quot;handleRef(el)&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleRef</span> = (<span class=\"params\">el</span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">/*  将 el 赋给 ref 变量 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"组件上的-ref\"><a href=\"#组件上的-ref\" class=\"headerlink\" title=\"组件上的 ref\"></a>组件上的 ref</h2><p>引用获得的值是组件实例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Child</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Child.vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> child = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// child.value 是 &lt;Child/&gt; 组件实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;child&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"父组件对子组件访问权\"><a href=\"#父组件对子组件访问权\" class=\"headerlink\" title=\"父组件对子组件访问权\"></a>父组件对子组件访问权</h3><h4 id=\"1-选项式-API-或-不使用\"><a href=\"#1-选项式-API-或-不使用\" class=\"headerlink\" title=\"1. 选项式 API 或 不使用 &lt;script setup&gt;\"></a>1. 选项式 API 或 不使用 <code>&lt;script setup&gt;</code></h4><p>父组件对子组件的所有属性和方法有完全的访问权（大多情况下应使用 props 和 emit）。</p>\n<h4 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2. 使用 &lt;script setup&gt;\"></a>2. 使用 <code>&lt;script setup&gt;</code></h4><p>子组件默认私有，除非子组件在其中通过 defineExpose 宏显示暴露。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>, b = <span class=\"title function_\">ref</span>(<span class=\"number\">2</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 编译器宏无需导入</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineExpose</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    a,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    b</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"15-vue3组件注册","date":"2023-12-13T07:16:29.000Z","_content":"\n## 全局注册\n\n所有子组件可以使用全局注册的组件。\n\n使用 vue 应用实例的 .component() 方法：\n\n``` js\nimport { createApp } from 'vue';\nconst app = createApp({});\n\napp.component('myComponent',{\n    // 组件的实现\n});\n```\n\n对于单文件组件：\n\n``` js\nimport MyComponent from './App.vue'\n\napp.component('MyComponent', MyComponent);\n```\n\n链式：\n\n``` js\napp.\n    component('ComponentA', ComponentA).\n    component('ComponentB', ComponentB).\n    component('ComponentC', ComponentC);\n```\n\n## 局部注册\n\n### 优点\n\n1. tree-shaking：全局注册的组件，即使不用，也会出现在打包后的 JS 文件中；而局部注册会移除未使用的组件。\n2. 依赖关系明确：全局注册使大型项目中组件的依赖关系不够明确；而局部组件使组件间的依赖关系更加明确。\n","source":"_posts/15-vue3组件注册.md","raw":"---\ntitle: 15-vue3组件注册\ndate: 2023-12-13 15:16:29\ntags:\n    - vue3\n    - vue\ncategories:\n    - vue3\n      - 文档\n---\n\n## 全局注册\n\n所有子组件可以使用全局注册的组件。\n\n使用 vue 应用实例的 .component() 方法：\n\n``` js\nimport { createApp } from 'vue';\nconst app = createApp({});\n\napp.component('myComponent',{\n    // 组件的实现\n});\n```\n\n对于单文件组件：\n\n``` js\nimport MyComponent from './App.vue'\n\napp.component('MyComponent', MyComponent);\n```\n\n链式：\n\n``` js\napp.\n    component('ComponentA', ComponentA).\n    component('ComponentB', ComponentB).\n    component('ComponentC', ComponentC);\n```\n\n## 局部注册\n\n### 优点\n\n1. tree-shaking：全局注册的组件，即使不用，也会出现在打包后的 JS 文件中；而局部注册会移除未使用的组件。\n2. 依赖关系明确：全局注册使大型项目中组件的依赖关系不够明确；而局部组件使组件间的依赖关系更加明确。\n","slug":"15-vue3组件注册","published":1,"updated":"2023-12-15T12:30:18.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq6lxtzm0000lbw6bfszev06","content":"<h2 id=\"全局注册\"><a href=\"#全局注册\" class=\"headerlink\" title=\"全局注册\"></a>全局注册</h2><p>所有子组件可以使用全局注册的组件。</p>\n<p>使用 vue 应用实例的 .component() 方法：</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(&#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;myComponent&#x27;</span>,&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 组件的实现</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<p>对于单文件组件：</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">MyComponent</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;MyComponent&#x27;</span>, <span class=\"title class_\">MyComponent</span>);</span><br></pre></td></tr></table></figure></div>\n\n<p>链式：</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.</span><br><span class=\"line\">    <span class=\"title function_\">component</span>(<span class=\"string\">&#x27;ComponentA&#x27;</span>, <span class=\"title class_\">ComponentA</span>).</span><br><span class=\"line\">    <span class=\"title function_\">component</span>(<span class=\"string\">&#x27;ComponentB&#x27;</span>, <span class=\"title class_\">ComponentB</span>).</span><br><span class=\"line\">    <span class=\"title function_\">component</span>(<span class=\"string\">&#x27;ComponentC&#x27;</span>, <span class=\"title class_\">ComponentC</span>);</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"局部注册\"><a href=\"#局部注册\" class=\"headerlink\" title=\"局部注册\"></a>局部注册</h2><h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><ol>\n<li>tree-shaking：全局注册的组件，即使不用，也会出现在打包后的 JS 文件中；而局部注册会移除未使用的组件。</li>\n<li>依赖关系明确：全局注册使大型项目中组件的依赖关系不够明确；而局部组件使组件间的依赖关系更加明确。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"全局注册\"><a href=\"#全局注册\" class=\"headerlink\" title=\"全局注册\"></a>全局注册</h2><p>所有子组件可以使用全局注册的组件。</p>\n<p>使用 vue 应用实例的 .component() 方法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(&#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;myComponent&#x27;</span>,&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 组件的实现</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>对于单文件组件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">MyComponent</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;MyComponent&#x27;</span>, <span class=\"title class_\">MyComponent</span>);</span><br></pre></td></tr></table></figure>\n\n<p>链式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.</span><br><span class=\"line\">    <span class=\"title function_\">component</span>(<span class=\"string\">&#x27;ComponentA&#x27;</span>, <span class=\"title class_\">ComponentA</span>).</span><br><span class=\"line\">    <span class=\"title function_\">component</span>(<span class=\"string\">&#x27;ComponentB&#x27;</span>, <span class=\"title class_\">ComponentB</span>).</span><br><span class=\"line\">    <span class=\"title function_\">component</span>(<span class=\"string\">&#x27;ComponentC&#x27;</span>, <span class=\"title class_\">ComponentC</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"局部注册\"><a href=\"#局部注册\" class=\"headerlink\" title=\"局部注册\"></a>局部注册</h2><h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><ol>\n<li>tree-shaking：全局注册的组件，即使不用，也会出现在打包后的 JS 文件中；而局部注册会移除未使用的组件。</li>\n<li>依赖关系明确：全局注册使大型项目中组件的依赖关系不够明确；而局部组件使组件间的依赖关系更加明确。</li>\n</ol>\n"},{"title":"16-vue3 props & emits","date":"2023-12-15T12:26:11.000Z","_content":"\n## props\n\n注意：props 为单向数据流，从父组件流子组件，所以不应该在子组件中修改 props。\n\n如有需要：\n\n1. 用另一个属性接收该 prop 的初始值；\n2. 基于该 prop 定义一个计算属性；\n3. 向父组件抛出一个事件。\n\n### 声明\n\n使用字符串数组：\n\n``` html\n<script setup>\nconst props = defineProps(['foo']);\n</script>\n```\n\n使用对象：\n\n``` html\n<script setup>\nconst props = defineProps({\n    title: String,\n    likes: Number\n});\n</script>\n```\n\n### 静态 prop\n\n除了静态字符串，都应该使用变量进行传递。\n\n``` html\n<BlogPost title=\"this is a title\" />\n\n<!-- <BlogPost :likes=\"42\" /> -->\n<BlogPost :likes=\"post.likes\" />\n\n<!-- <BlogPost is-published=\"true\" /> -->\n<BlogPost :is-published=\"post.isPublished\" />\n\n<!-- <BlogPost ids=\"[1, 2, 3]\" /> -->\n<BlogPost :ids=\"post.ids\" />\n\n<!-- <BlogPost author=\"{ name: 'Zoella', age: 22 }\" /> -->\n<BlogPost :author=\"post.author\" />\n```\n\n### 一个对象绑定多个 prop\n\n使用无参数的 v-bind，而不是 :prop-name\n\n``` js\nconst post = {\n    id: 1,\n    title: \"this is title\",\n};\n```\n\n``` html\n<BlogPost v-bind=\"post\" />\n```\n\n### prop 校验\n\n``` js\ndefineProps({\n  // 多种可能的类型检查（给出 `null` 和 `undefined` 值则会跳过任何类型检查）\n  propA: [String, Number],\n  // 必传，且为 String 类型，默认值为 'defualtVal'\n  propB: {\n    type: String,\n    required: true,\n    default: 'defaultVal'\n  },\n  // 对象类型的默认值\n  propC: {\n    type: Object,\n    // 对象或数组的默认值，必须从一个工厂函数返回。\n    // 该函数接收组件所接收的原始 prop 作为参数。\n    default(rawProps) {\n      return { message: 'hello' }\n    }\n  },\n  // 自定义类型校验函数\n  propD: {\n    validator(value) {\n      return ['success', 'warning', 'danger'].includes(value)\n    }\n  },\n  // 函数类型的默认值\n  propE: {\n    type: Function,\n    default() {\n      return 'Default function'\n    }\n  }\n});\n```\n\n### Boolean 类型转换\n\n``` js\ndefineProps({\n  disabled: Boolean\n});\n```\n\n使用时：\n\n``` html\n<!-- 等同于 <MyComponent :disabled=\"true\"></MyComponent> -->\n<MyComponent disabled></MyComponent>\n\n<!-- 等同于 <MyComponent :disabled=\"false\"></MyComponent> -->\n<MyComponent></MyComponent>\n```\n\n## emit\n\n### 事件校验\n\n``` html\n<script setup>\nconst emit = defineEmits({\n  // 无校验\n  click: null,\n\n  // 校验 submit 事件\n  submit: ({ email, password }) => {\n    if (email && password) {\n      return true;\n    } else {\n      console.warn('Invalid submit event payload!')\n      return false;\n    }\n  }\n});\n\nfunction submitForm(email, password) {\n  // 抛出 submit 事件，携带 email, password 参数\n  emit('submit', { email, password });\n}\n</script>\n```\n","source":"_posts/16-vue3 props & emits.md","raw":"---\ntitle: 16-vue3 props & emits\ndate: 2023-12-15 20:26:11\ntags:\n---\n\n## props\n\n注意：props 为单向数据流，从父组件流子组件，所以不应该在子组件中修改 props。\n\n如有需要：\n\n1. 用另一个属性接收该 prop 的初始值；\n2. 基于该 prop 定义一个计算属性；\n3. 向父组件抛出一个事件。\n\n### 声明\n\n使用字符串数组：\n\n``` html\n<script setup>\nconst props = defineProps(['foo']);\n</script>\n```\n\n使用对象：\n\n``` html\n<script setup>\nconst props = defineProps({\n    title: String,\n    likes: Number\n});\n</script>\n```\n\n### 静态 prop\n\n除了静态字符串，都应该使用变量进行传递。\n\n``` html\n<BlogPost title=\"this is a title\" />\n\n<!-- <BlogPost :likes=\"42\" /> -->\n<BlogPost :likes=\"post.likes\" />\n\n<!-- <BlogPost is-published=\"true\" /> -->\n<BlogPost :is-published=\"post.isPublished\" />\n\n<!-- <BlogPost ids=\"[1, 2, 3]\" /> -->\n<BlogPost :ids=\"post.ids\" />\n\n<!-- <BlogPost author=\"{ name: 'Zoella', age: 22 }\" /> -->\n<BlogPost :author=\"post.author\" />\n```\n\n### 一个对象绑定多个 prop\n\n使用无参数的 v-bind，而不是 :prop-name\n\n``` js\nconst post = {\n    id: 1,\n    title: \"this is title\",\n};\n```\n\n``` html\n<BlogPost v-bind=\"post\" />\n```\n\n### prop 校验\n\n``` js\ndefineProps({\n  // 多种可能的类型检查（给出 `null` 和 `undefined` 值则会跳过任何类型检查）\n  propA: [String, Number],\n  // 必传，且为 String 类型，默认值为 'defualtVal'\n  propB: {\n    type: String,\n    required: true,\n    default: 'defaultVal'\n  },\n  // 对象类型的默认值\n  propC: {\n    type: Object,\n    // 对象或数组的默认值，必须从一个工厂函数返回。\n    // 该函数接收组件所接收的原始 prop 作为参数。\n    default(rawProps) {\n      return { message: 'hello' }\n    }\n  },\n  // 自定义类型校验函数\n  propD: {\n    validator(value) {\n      return ['success', 'warning', 'danger'].includes(value)\n    }\n  },\n  // 函数类型的默认值\n  propE: {\n    type: Function,\n    default() {\n      return 'Default function'\n    }\n  }\n});\n```\n\n### Boolean 类型转换\n\n``` js\ndefineProps({\n  disabled: Boolean\n});\n```\n\n使用时：\n\n``` html\n<!-- 等同于 <MyComponent :disabled=\"true\"></MyComponent> -->\n<MyComponent disabled></MyComponent>\n\n<!-- 等同于 <MyComponent :disabled=\"false\"></MyComponent> -->\n<MyComponent></MyComponent>\n```\n\n## emit\n\n### 事件校验\n\n``` html\n<script setup>\nconst emit = defineEmits({\n  // 无校验\n  click: null,\n\n  // 校验 submit 事件\n  submit: ({ email, password }) => {\n    if (email && password) {\n      return true;\n    } else {\n      console.warn('Invalid submit event payload!')\n      return false;\n    }\n  }\n});\n\nfunction submitForm(email, password) {\n  // 抛出 submit 事件，携带 email, password 参数\n  emit('submit', { email, password });\n}\n</script>\n```\n","slug":"16-vue3 props & emits","published":1,"updated":"2023-12-15T12:30:02.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq6lxtzn0001lbw6flcf0gn4","content":"<h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><p>注意：props 为单向数据流，从父组件流子组件，所以不应该在子组件中修改 props。</p>\n<p>如有需要：</p>\n<ol>\n<li>用另一个属性接收该 prop 的初始值；</li>\n<li>基于该 prop 定义一个计算属性；</li>\n<li>向父组件抛出一个事件。</li>\n</ol>\n<h3 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h3><p>使用字符串数组：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> props = <span class=\"title function_\">defineProps</span>([<span class=\"string\">&#x27;foo&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>使用对象：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> props = <span class=\"title function_\">defineProps</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">title</span>: <span class=\"title class_\">String</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">likes</span>: <span class=\"title class_\">Number</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"静态-prop\"><a href=\"#静态-prop\" class=\"headerlink\" title=\"静态 prop\"></a>静态 prop</h3><p>除了静态字符串，都应该使用变量进行传递。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;this is a title&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;BlogPost :likes=&quot;42&quot; /&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">:likes</span>=<span class=\"string\">&quot;post.likes&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;BlogPost is-published=&quot;true&quot; /&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">:is-published</span>=<span class=\"string\">&quot;post.isPublished&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;BlogPost ids=&quot;[1, 2, 3]&quot; /&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">:ids</span>=<span class=\"string\">&quot;post.ids&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;BlogPost author=&quot;&#123; name: &#x27;Zoella&#x27;, age: 22 &#125;&quot; /&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">:author</span>=<span class=\"string\">&quot;post.author&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"一个对象绑定多个-prop\"><a href=\"#一个对象绑定多个-prop\" class=\"headerlink\" title=\"一个对象绑定多个 prop\"></a>一个对象绑定多个 prop</h3><p>使用无参数的 v-bind，而不是 :prop-name</p>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> post = &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&quot;this is title&quot;</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">v-bind</span>=<span class=\"string\">&quot;post&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"prop-校验\"><a href=\"#prop-校验\" class=\"headerlink\" title=\"prop 校验\"></a>prop 校验</h3><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">defineProps</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 多种可能的类型检查（给出 `null` 和 `undefined` 值则会跳过任何类型检查）</span></span><br><span class=\"line\">  <span class=\"attr\">propA</span>: [<span class=\"title class_\">String</span>, <span class=\"title class_\">Number</span>],</span><br><span class=\"line\">  <span class=\"comment\">// 必传，且为 String 类型，默认值为 &#x27;defualtVal&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">propB</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">required</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">default</span>: <span class=\"string\">&#x27;defaultVal&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 对象类型的默认值</span></span><br><span class=\"line\">  <span class=\"attr\">propC</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">Object</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 对象或数组的默认值，必须从一个工厂函数返回。</span></span><br><span class=\"line\">    <span class=\"comment\">// 该函数接收组件所接收的原始 prop 作为参数。</span></span><br><span class=\"line\">    <span class=\"title function_\">default</span>(<span class=\"params\">rawProps</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;hello&#x27;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 自定义类型校验函数</span></span><br><span class=\"line\">  <span class=\"attr\">propD</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">validator</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> [<span class=\"string\">&#x27;success&#x27;</span>, <span class=\"string\">&#x27;warning&#x27;</span>, <span class=\"string\">&#x27;danger&#x27;</span>].<span class=\"title function_\">includes</span>(value)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 函数类型的默认值</span></span><br><span class=\"line\">  <span class=\"attr\">propE</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">Function</span>,</span><br><span class=\"line\">    <span class=\"title function_\">default</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Default function&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"Boolean-类型转换\"><a href=\"#Boolean-类型转换\" class=\"headerlink\" title=\"Boolean 类型转换\"></a>Boolean 类型转换</h3><div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">defineProps</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">disabled</span>: <span class=\"title class_\">Boolean</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<p>使用时：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 等同于 &lt;MyComponent :disabled=&quot;true&quot;&gt;&lt;/MyComponent&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">disabled</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">MyComponent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 等同于 &lt;MyComponent :disabled=&quot;false&quot;&gt;&lt;/MyComponent&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">MyComponent</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"emit\"><a href=\"#emit\" class=\"headerlink\" title=\"emit\"></a>emit</h2><h3 id=\"事件校验\"><a href=\"#事件校验\" class=\"headerlink\" title=\"事件校验\"></a>事件校验</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> emit = <span class=\"title function_\">defineEmits</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 无校验</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">click</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 校验 submit 事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">submit</span>: <span class=\"function\">(<span class=\"params\">&#123; email, password &#125;</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span> (email &amp;&amp; password) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;Invalid submit event payload!&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">submitForm</span>(<span class=\"params\">email, password</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 抛出 submit 事件，携带 email, password 参数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;submit&#x27;</span>, &#123; email, password &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><p>注意：props 为单向数据流，从父组件流子组件，所以不应该在子组件中修改 props。</p>\n<p>如有需要：</p>\n<ol>\n<li>用另一个属性接收该 prop 的初始值；</li>\n<li>基于该 prop 定义一个计算属性；</li>\n<li>向父组件抛出一个事件。</li>\n</ol>\n<h3 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h3><p>使用字符串数组：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> props = <span class=\"title function_\">defineProps</span>([<span class=\"string\">&#x27;foo&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用对象：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> props = <span class=\"title function_\">defineProps</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">title</span>: <span class=\"title class_\">String</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">likes</span>: <span class=\"title class_\">Number</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"静态-prop\"><a href=\"#静态-prop\" class=\"headerlink\" title=\"静态 prop\"></a>静态 prop</h3><p>除了静态字符串，都应该使用变量进行传递。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;this is a title&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;BlogPost :likes=&quot;42&quot; /&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">:likes</span>=<span class=\"string\">&quot;post.likes&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;BlogPost is-published=&quot;true&quot; /&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">:is-published</span>=<span class=\"string\">&quot;post.isPublished&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;BlogPost ids=&quot;[1, 2, 3]&quot; /&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">:ids</span>=<span class=\"string\">&quot;post.ids&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;BlogPost author=&quot;&#123; name: &#x27;Zoella&#x27;, age: 22 &#125;&quot; /&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">:author</span>=<span class=\"string\">&quot;post.author&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"一个对象绑定多个-prop\"><a href=\"#一个对象绑定多个-prop\" class=\"headerlink\" title=\"一个对象绑定多个 prop\"></a>一个对象绑定多个 prop</h3><p>使用无参数的 v-bind，而不是 :prop-name</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> post = &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&quot;this is title&quot;</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">BlogPost</span> <span class=\"attr\">v-bind</span>=<span class=\"string\">&quot;post&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"prop-校验\"><a href=\"#prop-校验\" class=\"headerlink\" title=\"prop 校验\"></a>prop 校验</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">defineProps</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 多种可能的类型检查（给出 `null` 和 `undefined` 值则会跳过任何类型检查）</span></span><br><span class=\"line\">  <span class=\"attr\">propA</span>: [<span class=\"title class_\">String</span>, <span class=\"title class_\">Number</span>],</span><br><span class=\"line\">  <span class=\"comment\">// 必传，且为 String 类型，默认值为 &#x27;defualtVal&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">propB</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">required</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">default</span>: <span class=\"string\">&#x27;defaultVal&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 对象类型的默认值</span></span><br><span class=\"line\">  <span class=\"attr\">propC</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">Object</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 对象或数组的默认值，必须从一个工厂函数返回。</span></span><br><span class=\"line\">    <span class=\"comment\">// 该函数接收组件所接收的原始 prop 作为参数。</span></span><br><span class=\"line\">    <span class=\"title function_\">default</span>(<span class=\"params\">rawProps</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;hello&#x27;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 自定义类型校验函数</span></span><br><span class=\"line\">  <span class=\"attr\">propD</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">validator</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> [<span class=\"string\">&#x27;success&#x27;</span>, <span class=\"string\">&#x27;warning&#x27;</span>, <span class=\"string\">&#x27;danger&#x27;</span>].<span class=\"title function_\">includes</span>(value)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 函数类型的默认值</span></span><br><span class=\"line\">  <span class=\"attr\">propE</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">Function</span>,</span><br><span class=\"line\">    <span class=\"title function_\">default</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Default function&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Boolean-类型转换\"><a href=\"#Boolean-类型转换\" class=\"headerlink\" title=\"Boolean 类型转换\"></a>Boolean 类型转换</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">defineProps</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">disabled</span>: <span class=\"title class_\">Boolean</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>使用时：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 等同于 &lt;MyComponent :disabled=&quot;true&quot;&gt;&lt;/MyComponent&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">disabled</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">MyComponent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 等同于 &lt;MyComponent :disabled=&quot;false&quot;&gt;&lt;/MyComponent&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">MyComponent</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"emit\"><a href=\"#emit\" class=\"headerlink\" title=\"emit\"></a>emit</h2><h3 id=\"事件校验\"><a href=\"#事件校验\" class=\"headerlink\" title=\"事件校验\"></a>事件校验</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> emit = <span class=\"title function_\">defineEmits</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 无校验</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">click</span>: <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 校验 submit 事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">submit</span>: <span class=\"function\">(<span class=\"params\">&#123; email, password &#125;</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span> (email &amp;&amp; password) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;Invalid submit event payload!&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">submitForm</span>(<span class=\"params\">email, password</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 抛出 submit 事件，携带 email, password 参数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;submit&#x27;</span>, &#123; email, password &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"17-vue3组件v-model","date":"2023-12-15T12:27:47.000Z","_content":"\n## 基础\n\n父组件：\n\n``` html\n<CustomInput v-model=\"searchText\" />\n\n<!-- 被展开为： -->\n<!-- <CustomInput\n    :model-value=\"searchText\"\n    @update:model-value=\"newValue => searchText = newValue\" /> -->\n```\n\n子组件：\n\n在引用的子组件中使用 v-model 指令时，子组件的 modelValue prop 默认用于传递输入值，并且会触发名为 update:modelValue 的事件来更新该属性。\n\n``` html\n\n<script setup>\n// 声明属性 modelValue，这是父组件通过 v-model 传给当前组件的 prop\ndefineProps(['modelValue']);\n// 声明事件 update:modelValue，用于在当前组件中触发父组件的更新操作\ndefineEmits(['update:modelValue']);\n</script>\n\n<template>\n  <!-- 将 modelValue 作为其值，并在输入时触发 update:modelValue 事件 -->\n  <input\n    :value=\"modelValue\"\n    @input=\"$emit('update:modelValue', $event.target.value)\"\n  />\n</template>\n```\n\n## 如何更改默认名 modelValue\n\n父组件：\n\n``` html\n<MyComponent v-model:title=\"bookTitle\" />\n```\n\n子组件：\n\n``` html\n<!-- MyComponent.vue -->\n<script setup>\ndefineProps(['title']);\ndefineEmits(['update:title']);\n</script>\n\n<template>\n  <input\n    type=\"text\"\n    :value=\"title\"\n    @input=\"$emit('update:title', $event.target.value)\"\n  />\n</template>\n```\n\n## 自定义 v-model 修饰符\n\n创建一个自定义修饰符 capitalize，自动将 v-model 绑定输入字符串的第一个字母转为大写：\n\n``` html\n<MyComponent v-model.capitalize=\"myText\" />\n```\n\n``` html\n<script setup>\n// modelModifiers prop 包含了 capitalize 且其值为 true\n// 因为它在模板中的 v-model 绑定 v-model.capitalize=\"myText\" 上被使用了\nconst props = defineProps({\n    modelValue: String,\n    modelModifiers: {\n        default: () => ({}) // 默认值为空对象\n    },\n});\n\ndefineEmits(['update:modelValue']);\n\n// 将首字母大写\nfunction emitValue(e) {\n    let value = e.target.value;\n    if(props.modelModifiers.captialize) {\n        value = value.charAt(0).toUpperCase() + value.slice(1);\n    }\n    emit('update:modelValue', value);\n}\n</script>\n\n<template>\n    <!-- 每次 <input /> 元素触发 input 事件时触发 emitValue -->\n    <input\n        type=\"text\"\n        :value=\"modelValue\"\n        @input=\"emitValue\"\n    />\n</template>\n```\n\n### 带多个不同参数的 v-model 修饰符\n\n``` html\n<UserName\n    v-model:first-name.capitalize=\"first\"\n    v-model:last-name.uppercase=\"last\"\n/>\n```\n\n``` html\n<script setup>\nconst props = defineProps({\n    firstName: String,\n    lastName: String,\n    firstNameModifiers: {  // firstName + Modifiers\n        default: () => ({}) \n    },\n    lastNameModifiers: {  // lastName + Modifiers\n        default: () => ({})\n    },\n});\n\ndefineEmits(['update:firstName', 'update:lastName']);\n\nconsole.log(props.firstNameModifiers); // { calitalize: true }\nconsole.log(props.lastNameModifiers); // { uppercase: true }\n</script>\n```\n","source":"_posts/17-vue3组件v-model.md","raw":"---\ntitle: 17-vue3组件v-model\ndate: 2023-12-15 20:27:47\ntags:\n---\n\n## 基础\n\n父组件：\n\n``` html\n<CustomInput v-model=\"searchText\" />\n\n<!-- 被展开为： -->\n<!-- <CustomInput\n    :model-value=\"searchText\"\n    @update:model-value=\"newValue => searchText = newValue\" /> -->\n```\n\n子组件：\n\n在引用的子组件中使用 v-model 指令时，子组件的 modelValue prop 默认用于传递输入值，并且会触发名为 update:modelValue 的事件来更新该属性。\n\n``` html\n\n<script setup>\n// 声明属性 modelValue，这是父组件通过 v-model 传给当前组件的 prop\ndefineProps(['modelValue']);\n// 声明事件 update:modelValue，用于在当前组件中触发父组件的更新操作\ndefineEmits(['update:modelValue']);\n</script>\n\n<template>\n  <!-- 将 modelValue 作为其值，并在输入时触发 update:modelValue 事件 -->\n  <input\n    :value=\"modelValue\"\n    @input=\"$emit('update:modelValue', $event.target.value)\"\n  />\n</template>\n```\n\n## 如何更改默认名 modelValue\n\n父组件：\n\n``` html\n<MyComponent v-model:title=\"bookTitle\" />\n```\n\n子组件：\n\n``` html\n<!-- MyComponent.vue -->\n<script setup>\ndefineProps(['title']);\ndefineEmits(['update:title']);\n</script>\n\n<template>\n  <input\n    type=\"text\"\n    :value=\"title\"\n    @input=\"$emit('update:title', $event.target.value)\"\n  />\n</template>\n```\n\n## 自定义 v-model 修饰符\n\n创建一个自定义修饰符 capitalize，自动将 v-model 绑定输入字符串的第一个字母转为大写：\n\n``` html\n<MyComponent v-model.capitalize=\"myText\" />\n```\n\n``` html\n<script setup>\n// modelModifiers prop 包含了 capitalize 且其值为 true\n// 因为它在模板中的 v-model 绑定 v-model.capitalize=\"myText\" 上被使用了\nconst props = defineProps({\n    modelValue: String,\n    modelModifiers: {\n        default: () => ({}) // 默认值为空对象\n    },\n});\n\ndefineEmits(['update:modelValue']);\n\n// 将首字母大写\nfunction emitValue(e) {\n    let value = e.target.value;\n    if(props.modelModifiers.captialize) {\n        value = value.charAt(0).toUpperCase() + value.slice(1);\n    }\n    emit('update:modelValue', value);\n}\n</script>\n\n<template>\n    <!-- 每次 <input /> 元素触发 input 事件时触发 emitValue -->\n    <input\n        type=\"text\"\n        :value=\"modelValue\"\n        @input=\"emitValue\"\n    />\n</template>\n```\n\n### 带多个不同参数的 v-model 修饰符\n\n``` html\n<UserName\n    v-model:first-name.capitalize=\"first\"\n    v-model:last-name.uppercase=\"last\"\n/>\n```\n\n``` html\n<script setup>\nconst props = defineProps({\n    firstName: String,\n    lastName: String,\n    firstNameModifiers: {  // firstName + Modifiers\n        default: () => ({}) \n    },\n    lastNameModifiers: {  // lastName + Modifiers\n        default: () => ({})\n    },\n});\n\ndefineEmits(['update:firstName', 'update:lastName']);\n\nconsole.log(props.firstNameModifiers); // { calitalize: true }\nconsole.log(props.lastNameModifiers); // { uppercase: true }\n</script>\n```\n","slug":"17-vue3组件v-model","published":1,"updated":"2023-12-15T12:29:29.157Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq6lxtzo0003lbw63a4i1duv","content":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><p>父组件：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CustomInput</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchText&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 被展开为： --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;CustomInput</span></span><br><span class=\"line\"><span class=\"comment\">    :model-value=&quot;searchText&quot;</span></span><br><span class=\"line\"><span class=\"comment\">    @update:model-value=&quot;newValue =&gt; searchText = newValue&quot; /&gt; --&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>子组件：</p>\n<p>在引用的子组件中使用 v-model 指令时，子组件的 modelValue prop 默认用于传递输入值，并且会触发名为 update:modelValue 的事件来更新该属性。</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 声明属性 modelValue，这是父组件通过 v-model 传给当前组件的 prop</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineProps</span>([<span class=\"string\">&#x27;modelValue&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 声明事件 update:modelValue，用于在当前组件中触发父组件的更新操作</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineEmits</span>([<span class=\"string\">&#x27;update:modelValue&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 将 modelValue 作为其值，并在输入时触发 update:modelValue 事件 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:value</span>=<span class=\"string\">&quot;modelValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">input</span>=<span class=\"string\">&quot;$emit(&#x27;update:modelValue&#x27;, $event.target.value)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"如何更改默认名-modelValue\"><a href=\"#如何更改默认名-modelValue\" class=\"headerlink\" title=\"如何更改默认名 modelValue\"></a>如何更改默认名 modelValue</h2><p>父组件：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">v-model:title</span>=<span class=\"string\">&quot;bookTitle&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<p>子组件：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- MyComponent.vue --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineProps</span>([<span class=\"string\">&#x27;title&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineEmits</span>([<span class=\"string\">&#x27;update:title&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:value</span>=<span class=\"string\">&quot;title&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">input</span>=<span class=\"string\">&quot;$emit(&#x27;update:title&#x27;, $event.target.value)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"自定义-v-model-修饰符\"><a href=\"#自定义-v-model-修饰符\" class=\"headerlink\" title=\"自定义 v-model 修饰符\"></a>自定义 v-model 修饰符</h2><p>创建一个自定义修饰符 capitalize，自动将 v-model 绑定输入字符串的第一个字母转为大写：</p>\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">v-model.capitalize</span>=<span class=\"string\">&quot;myText&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// modelModifiers prop 包含了 capitalize 且其值为 true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 因为它在模板中的 v-model 绑定 v-model.capitalize=&quot;myText&quot; 上被使用了</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> props = <span class=\"title function_\">defineProps</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">modelValue</span>: <span class=\"title class_\">String</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">modelModifiers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> (&#123;&#125;) <span class=\"comment\">// 默认值为空对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineEmits</span>([<span class=\"string\">&#x27;update:modelValue&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 将首字母大写</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">emitValue</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> value = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span>(props.<span class=\"property\">modelModifiers</span>.<span class=\"property\">captialize</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        value = value.<span class=\"title function_\">charAt</span>(<span class=\"number\">0</span>).<span class=\"title function_\">toUpperCase</span>() + value.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;update:modelValue&#x27;</span>, value);</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 每次 &lt;input /&gt; 元素触发 input 事件时触发 emitValue --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:value</span>=<span class=\"string\">&quot;modelValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">input</span>=<span class=\"string\">&quot;emitValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"带多个不同参数的-v-model-修饰符\"><a href=\"#带多个不同参数的-v-model-修饰符\" class=\"headerlink\" title=\"带多个不同参数的 v-model 修饰符\"></a>带多个不同参数的 v-model 修饰符</h3><div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">UserName</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model:first-name.capitalize</span>=<span class=\"string\">&quot;first&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model:last-name.uppercase</span>=<span class=\"string\">&quot;last&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Html\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> props = <span class=\"title function_\">defineProps</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">firstName</span>: <span class=\"title class_\">String</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">lastName</span>: <span class=\"title class_\">String</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">firstNameModifiers</span>: &#123;  <span class=\"comment\">// firstName + Modifiers</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> (&#123;&#125;) </span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">lastNameModifiers</span>: &#123;  <span class=\"comment\">// lastName + Modifiers</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> (&#123;&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineEmits</span>([<span class=\"string\">&#x27;update:firstName&#x27;</span>, <span class=\"string\">&#x27;update:lastName&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(props.<span class=\"property\">firstNameModifiers</span>); <span class=\"comment\">// &#123; calitalize: true &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(props.<span class=\"property\">lastNameModifiers</span>); <span class=\"comment\">// &#123; uppercase: true &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><p>父组件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CustomInput</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;searchText&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 被展开为： --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- &lt;CustomInput</span></span><br><span class=\"line\"><span class=\"comment\">    :model-value=&quot;searchText&quot;</span></span><br><span class=\"line\"><span class=\"comment\">    @update:model-value=&quot;newValue =&gt; searchText = newValue&quot; /&gt; --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>子组件：</p>\n<p>在引用的子组件中使用 v-model 指令时，子组件的 modelValue prop 默认用于传递输入值，并且会触发名为 update:modelValue 的事件来更新该属性。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 声明属性 modelValue，这是父组件通过 v-model 传给当前组件的 prop</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineProps</span>([<span class=\"string\">&#x27;modelValue&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 声明事件 update:modelValue，用于在当前组件中触发父组件的更新操作</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineEmits</span>([<span class=\"string\">&#x27;update:modelValue&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 将 modelValue 作为其值，并在输入时触发 update:modelValue 事件 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:value</span>=<span class=\"string\">&quot;modelValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">input</span>=<span class=\"string\">&quot;$emit(&#x27;update:modelValue&#x27;, $event.target.value)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何更改默认名-modelValue\"><a href=\"#如何更改默认名-modelValue\" class=\"headerlink\" title=\"如何更改默认名 modelValue\"></a>如何更改默认名 modelValue</h2><p>父组件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">v-model:title</span>=<span class=\"string\">&quot;bookTitle&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>子组件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- MyComponent.vue --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineProps</span>([<span class=\"string\">&#x27;title&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineEmits</span>([<span class=\"string\">&#x27;update:title&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:value</span>=<span class=\"string\">&quot;title&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">input</span>=<span class=\"string\">&quot;$emit(&#x27;update:title&#x27;, $event.target.value)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义-v-model-修饰符\"><a href=\"#自定义-v-model-修饰符\" class=\"headerlink\" title=\"自定义 v-model 修饰符\"></a>自定义 v-model 修饰符</h2><p>创建一个自定义修饰符 capitalize，自动将 v-model 绑定输入字符串的第一个字母转为大写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">v-model.capitalize</span>=<span class=\"string\">&quot;myText&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// modelModifiers prop 包含了 capitalize 且其值为 true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 因为它在模板中的 v-model 绑定 v-model.capitalize=&quot;myText&quot; 上被使用了</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> props = <span class=\"title function_\">defineProps</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">modelValue</span>: <span class=\"title class_\">String</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">modelModifiers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> (&#123;&#125;) <span class=\"comment\">// 默认值为空对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineEmits</span>([<span class=\"string\">&#x27;update:modelValue&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"comment\">// 将首字母大写</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">emitValue</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> value = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span>(props.<span class=\"property\">modelModifiers</span>.<span class=\"property\">captialize</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        value = value.<span class=\"title function_\">charAt</span>(<span class=\"number\">0</span>).<span class=\"title function_\">toUpperCase</span>() + value.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;update:modelValue&#x27;</span>, value);</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 每次 &lt;input /&gt; 元素触发 input 事件时触发 emitValue --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:value</span>=<span class=\"string\">&quot;modelValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        @<span class=\"attr\">input</span>=<span class=\"string\">&quot;emitValue&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"带多个不同参数的-v-model-修饰符\"><a href=\"#带多个不同参数的-v-model-修饰符\" class=\"headerlink\" title=\"带多个不同参数的 v-model 修饰符\"></a>带多个不同参数的 v-model 修饰符</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">UserName</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model:first-name.capitalize</span>=<span class=\"string\">&quot;first&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model:last-name.uppercase</span>=<span class=\"string\">&quot;last&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> props = <span class=\"title function_\">defineProps</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">firstName</span>: <span class=\"title class_\">String</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">lastName</span>: <span class=\"title class_\">String</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">firstNameModifiers</span>: &#123;  <span class=\"comment\">// firstName + Modifiers</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> (&#123;&#125;) </span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">lastNameModifiers</span>: &#123;  <span class=\"comment\">// lastName + Modifiers</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> (&#123;&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"title function_\">defineEmits</span>([<span class=\"string\">&#x27;update:firstName&#x27;</span>, <span class=\"string\">&#x27;update:lastName&#x27;</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(props.<span class=\"property\">firstNameModifiers</span>); <span class=\"comment\">// &#123; calitalize: true &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(props.<span class=\"property\">lastNameModifiers</span>); <span class=\"comment\">// &#123; uppercase: true &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clomn21kc0005m5w60q8kcman","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"clomng9jn000bm5w6bdnd8bjd"},{"post_id":"clomnjwvc000fm5w68cc8bqrv","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"clomnjwvd000hm5w65tvs8k4h"},{"post_id":"clomnki9v000im5w67a9mafk9","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"clomorpvy000km5w66th6h1sr"},{"post_id":"cloy7augf0001blw601xvetqn","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"cloy7augg0005blw62097dbmp"},{"post_id":"cloy7augi000dblw60i4q3j4o","category_id":"cloy7augi000eblw6bj2j9q3l","_id":"cloy7augi000hblw6bs520kxj"},{"post_id":"clpj6vfnn00007uw6eiabhjv2","category_id":"cloy7augi000eblw6bj2j9q3l","_id":"clpj6vfnr00057uw6fbko2r1i"},{"post_id":"clpj6vfnn00007uw6eiabhjv2","category_id":"clpj6vfno00037uw664nhch3a","_id":"clpj6vfnr00067uw67uovgstz"},{"post_id":"clpj6vfno00017uw61ro9869t","category_id":"clpl36b6w000159w67kn8ddbu","_id":"clpl36b6y000859w6gt9y7q1m"},{"post_id":"clpl36b6u000059w6aufu8ufh","category_id":"clpl36b6y000659w6a6si3o5a","_id":"clpl36b6z000a59w6etst3cr0"},{"post_id":"clpl36b6x000359w69m8dg8y3","category_id":"clpl36b6w000159w67kn8ddbu","_id":"clpl36b6z000b59w6bgro2jig"},{"post_id":"clprrpltp00009ww69lob2abv","category_id":"clpl36b6w000159w67kn8ddbu","_id":"clprrplts00049ww62omo0jpp"},{"post_id":"clprrpltr00019ww6gvarfi6m","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"clprrplts00069ww66zbhd007"},{"post_id":"clq0s4b7h00005dw67395ev3g","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"clq0s4b7k00055dw65of3apt1"},{"post_id":"clq0s4b7j00015dw62cca8kw4","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"clq0s4b7k00075dw68dza6uri"},{"post_id":"clq0s4b7k00035dw6g57045bg","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"clq0s4b7k00095dw645dxgm3e"},{"post_id":"clq6lxtzm0000lbw6bfszev06","category_id":"clomnfqd60008m5w6ejsc6la0","_id":"clq6lxtzo0005lbw6dhdhhyvz"}],"PostTag":[{"post_id":"cloy7augf0001blw601xvetqn","tag_id":"clomklku40001kxw63zegd3sg","_id":"cloy7augg0003blw66mj7adyv"},{"post_id":"cloy7augf0001blw601xvetqn","tag_id":"cloy7augd0000blw6f1h753y9","_id":"cloy7augg0004blw67kl64lie"},{"post_id":"clomnjwvc000fm5w68cc8bqrv","tag_id":"clomklku40001kxw63zegd3sg","_id":"cloy7augh0007blw61bynaxw2"},{"post_id":"clomnjwvc000fm5w68cc8bqrv","tag_id":"cloy7augd0000blw6f1h753y9","_id":"cloy7augh0008blw6evavgya1"},{"post_id":"clomn21kc0005m5w60q8kcman","tag_id":"clomklku40001kxw63zegd3sg","_id":"cloy7augh0009blw65ub23xmx"},{"post_id":"clomn21kc0005m5w60q8kcman","tag_id":"cloy7augd0000blw6f1h753y9","_id":"cloy7augh000ablw6b1j59p1v"},{"post_id":"clomnki9v000im5w67a9mafk9","tag_id":"clomklku40001kxw63zegd3sg","_id":"cloy7augh000bblw6bfyx3gh8"},{"post_id":"clomnki9v000im5w67a9mafk9","tag_id":"cloy7augd0000blw6f1h753y9","_id":"cloy7augh000cblw6gn0fc9iu"},{"post_id":"cloy7augi000dblw60i4q3j4o","tag_id":"cloy7augd0000blw6f1h753y9","_id":"cloy7augi000fblw6g1qobvxf"},{"post_id":"clpj6vfnn00007uw6eiabhjv2","tag_id":"clomklku40001kxw63zegd3sg","_id":"clpj6vfno00027uw65t4khrxb"},{"post_id":"clpj6vfnn00007uw6eiabhjv2","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clpj6vfnq00047uw6dkx2bxvg"},{"post_id":"clpj6vfno00017uw61ro9869t","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clpl36b6x000259w656gxfv8a"},{"post_id":"clpl36b6x000359w69m8dg8y3","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clpl36b6y000559w6hjty50jq"},{"post_id":"clpl36b6u000059w6aufu8ufh","tag_id":"clpl36b6x000459w61wlg22ym","_id":"clpl36b6y000759w6gefcb9x5"},{"post_id":"clprrpltp00009ww69lob2abv","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clprrplts00029ww6c7m1afki"},{"post_id":"clprrpltr00019ww6gvarfi6m","tag_id":"clomklku40001kxw63zegd3sg","_id":"clprrplts00039ww6a7xqe5hh"},{"post_id":"clprrpltr00019ww6gvarfi6m","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clprrplts00059ww69im20ase"},{"post_id":"clq0s4b7h00005dw67395ev3g","tag_id":"clomklku40001kxw63zegd3sg","_id":"clq0s4b7j00025dw69fevfzai"},{"post_id":"clq0s4b7h00005dw67395ev3g","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clq0s4b7k00045dw6ayec9rrp"},{"post_id":"clq0s4b7j00015dw62cca8kw4","tag_id":"clomklku40001kxw63zegd3sg","_id":"clq0s4b7k00065dw6gph33a8n"},{"post_id":"clq0s4b7j00015dw62cca8kw4","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clq0s4b7k00085dw6h9kb0x6g"},{"post_id":"clq0s4b7k00035dw6g57045bg","tag_id":"clomklku40001kxw63zegd3sg","_id":"clq0s4b7k000a5dw64je2gks7"},{"post_id":"clq0s4b7k00035dw6g57045bg","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clq0s4b7k000b5dw620uc9s9i"},{"post_id":"clq6lxtzm0000lbw6bfszev06","tag_id":"clomklku40001kxw63zegd3sg","_id":"clq6lxtzo0002lbw6g75qhn3j"},{"post_id":"clq6lxtzm0000lbw6bfszev06","tag_id":"cloy7augd0000blw6f1h753y9","_id":"clq6lxtzo0004lbw64fw445et"}],"Tag":[{"name":"java","_id":"cloh2wf2f0006v4w65bd1hrnl"},{"name":"test1","_id":"cloh2wf2f0008v4w6cf3s4piz"},{"name":"test2","_id":"cloh2wf2f000av4w64v1m8ak9"},{"name":"test3","_id":"cloh2wf2g000fv4w69zf39s3x"},{"name":"vue3","_id":"clomklku40001kxw63zegd3sg"},{"name":"vue3 vue","_id":"clomnf3uz0006m5w69qvgdsme"},{"name":"vue","_id":"cloy7augd0000blw6f1h753y9"},{"name":"JavaScript","_id":"clpl36b6x000459w61wlg22ym"}]}}